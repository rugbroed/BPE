/*
* generated by Xtext
*/
grammar InternalPolicyEngineDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.itu.mdd.policyengine.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.itu.mdd.policyengine.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.itu.mdd.policyengine.services.PolicyEngineDslGrammarAccess;

}

@parser::members {

 	private PolicyEngineDslGrammarAccess grammarAccess;
 	
    public InternalPolicyEngineDslParser(TokenStream input, PolicyEngineDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected PolicyEngineDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelAccess().getModelAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getStateDefinitionStateParserRuleCall_3_0_0()); 
	    }
		lv_stateDefinition_3_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"stateDefinition",
        		lv_stateDefinition_3_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getStateDefinitionStateParserRuleCall_3_1_0()); 
	    }
		lv_stateDefinition_4_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"stateDefinition",
        		lv_stateDefinition_4_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPolicyDefinitionPolicyParserRuleCall_4_0_0()); 
	    }
		lv_policyDefinition_5_0=rulePolicy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"policyDefinition",
        		lv_policyDefinition_5_0, 
        		"Policy");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPolicyDefinitionPolicyParserRuleCall_4_1_0()); 
	    }
		lv_policyDefinition_6_0=rulePolicy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"policyDefinition",
        		lv_policyDefinition_6_0, 
        		"Policy");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getSchedulesScheduleParserRuleCall_5_0_0()); 
	    }
		lv_schedules_7_0=ruleSchedule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"schedules",
        		lv_schedules_7_0, 
        		"Schedule");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getSchedulesScheduleParserRuleCall_5_1_0()); 
	    }
		lv_schedules_8_0=ruleSchedule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"schedules",
        		lv_schedules_8_0, 
        		"Schedule");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_9='room-type' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getModelAccess().getRoomTypeKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPredefinedRoomsRoomParserRuleCall_6_1_0()); 
	    }
		lv_predefinedRooms_10_0=ruleRoom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"predefinedRooms",
        		lv_predefinedRooms_10_0, 
        		"Room");
	        afterParserOrEnumRuleCall();
	    }

)
))*((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBuildingsBuildingParserRuleCall_7_0_0()); 
	    }
		lv_buildings_11_0=ruleBuilding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"buildings",
        		lv_buildings_11_0, 
        		"Building");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBuildingsBuildingParserRuleCall_7_1_0()); 
	    }
		lv_buildings_12_0=ruleBuilding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"buildings",
        		lv_buildings_12_0, 
        		"Building");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateAccess().getStateAction_0(),
            $current);
    }
)	otherlv_1='state' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_valueState_3_0=	'=' 
    {
        newLeafNode(lv_valueState_3_0, grammarAccess.getStateAccess().getValueStateEqualsSignKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed($current, "valueState", true, "=");
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getStateAccess().getEBooleanParserRuleCall_4()); 
    }
ruleEBoolean
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSchedule
entryRuleSchedule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScheduleRule()); }
	 iv_ruleSchedule=ruleSchedule 
	 { $current=$iv_ruleSchedule.current; } 
	 EOF 
;

// Rule Schedule
ruleSchedule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getScheduleAccess().getScheduleAction_0(),
            $current);
    }
)	otherlv_1='schedule' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getScheduleAccess().getScheduleKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScheduleAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScheduleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='days' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getScheduleAccess().getDaysKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScheduleAccess().getWeekdaysWeekdaysEnumRuleCall_3_1_0()); 
	    }
		lv_weekdays_4_0=ruleWeekdays		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScheduleRule());
	        }
       		add(
       			$current, 
       			"weekdays",
        		lv_weekdays_4_0, 
        		"Weekdays");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getScheduleAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScheduleAccess().getWeekdaysWeekdaysEnumRuleCall_3_2_1_0()); 
	    }
		lv_weekdays_6_0=ruleWeekdays		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScheduleRule());
	        }
       		add(
       			$current, 
       			"weekdays",
        		lv_weekdays_6_0, 
        		"Weekdays");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_7='from' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getScheduleAccess().getFromKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScheduleAccess().getFromTimeParserRuleCall_4_1_0()); 
	    }
		lv_from_8_0=ruleTime		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScheduleRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_8_0, 
        		"Time");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='to' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getScheduleAccess().getToKeyword_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScheduleAccess().getToTimeParserRuleCall_4_3_0()); 
	    }
		lv_to_10_0=ruleTime		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScheduleRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_10_0, 
        		"Time");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePolicy
entryRulePolicy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPolicyRule()); }
	 iv_rulePolicy=rulePolicy 
	 { $current=$iv_rulePolicy.current; } 
	 EOF 
;

// Rule Policy
rulePolicy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPolicyAccess().getPolicyAction_0(),
            $current);
    }
)	otherlv_1='policy' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPolicyAccess().getPolicyKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolicyAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolicyRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='uses sensors' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPolicyAccess().getUsesSensorsKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPolicyAccess().getUsesSensorsSensorParserRuleCall_3_1_0_0()); 
	    }
		lv_usesSensors_4_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolicyRule());
	        }
       		add(
       			$current, 
       			"usesSensors",
        		lv_usesSensors_4_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPolicyAccess().getCommaKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolicyAccess().getUsesSensorsSensorParserRuleCall_3_1_1_1_0()); 
	    }
		lv_usesSensors_6_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolicyRule());
	        }
       		add(
       			$current, 
       			"usesSensors",
        		lv_usesSensors_6_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)?(	otherlv_7='uses actuators' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPolicyAccess().getUsesActuatorsKeyword_4_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPolicyAccess().getUsesActuatorParserRuleCall_4_1_0_0()); 
	    }
		lv_uses_8_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolicyRule());
	        }
       		add(
       			$current, 
       			"uses",
        		lv_uses_8_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPolicyAccess().getCommaKeyword_4_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPolicyAccess().getUsesActuatorParserRuleCall_4_1_1_1_0()); 
	    }
		lv_uses_10_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolicyRule());
	        }
       		add(
       			$current, 
       			"uses",
        		lv_uses_10_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)?(	otherlv_11='is specified by' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPolicyAccess().getIsSpecifiedByKeyword_5_0());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_5_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPolicyAccess().getSpecifiedByConditionsParserRuleCall_5_2_0_0()); 
	    }
		lv_specifiedBy_13_0=ruleConditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolicyRule());
	        }
       		add(
       			$current, 
       			"specifiedBy",
        		lv_specifiedBy_13_0, 
        		"Conditions");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPolicyAccess().getSpecifiedByConditionsParserRuleCall_5_2_1_0()); 
	    }
		lv_specifiedBy_14_0=ruleConditions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPolicyRule());
	        }
       		add(
       			$current, 
       			"specifiedBy",
        		lv_specifiedBy_14_0, 
        		"Conditions");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_5_3());
    }
)?)
;





// Entry rule entryRuleBuilding
entryRuleBuilding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBuildingRule()); }
	 iv_ruleBuilding=ruleBuilding 
	 { $current=$iv_ruleBuilding.current; } 
	 EOF 
;

// Rule Building
ruleBuilding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBuildingAccess().getBuildingAction_0(),
            $current);
    }
)	otherlv_1='building' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBuildingAccess().getBuildingKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBuildingAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getCtsSystemCTSParserRuleCall_4_0()); 
	    }
		lv_ctsSystem_4_0=ruleCTS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"ctsSystem",
        		lv_ctsSystem_4_0, 
        		"CTS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getAccessControlAccessControlParserRuleCall_5_0()); 
	    }
		lv_accessControl_5_0=ruleAccessControl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"accessControl",
        		lv_accessControl_5_0, 
        		"AccessControl");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getCalendarSystemCalendarSystemParserRuleCall_6_0()); 
	    }
		lv_calendarSystem_6_0=ruleCalendarSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"calendarSystem",
        		lv_calendarSystem_6_0, 
        		"CalendarSystem");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_7_0()); 
	    }
		lv_meetingScheduleSystem_7_0=ruleMeetingScheduleSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"meetingScheduleSystem",
        		lv_meetingScheduleSystem_7_0, 
        		"MeetingScheduleSystem");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getFloorsFloorParserRuleCall_8_0_0()); 
	    }
		lv_floors_8_0=ruleFloor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		add(
       			$current, 
       			"floors",
        		lv_floors_8_0, 
        		"Floor");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getFloorsFloorParserRuleCall_8_1_0()); 
	    }
		lv_floors_9_0=ruleFloor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		add(
       			$current, 
       			"floors",
        		lv_floors_9_0, 
        		"Floor");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBuildingAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleFloor
entryRuleFloor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloorRule()); }
	 iv_ruleFloor=ruleFloor 
	 { $current=$iv_ruleFloor.current; } 
	 EOF 
;

// Rule Floor
ruleFloor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFloorAccess().getFloorAction_0(),
            $current);
    }
)	otherlv_1='floor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFloorAccess().getFloorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFloorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='room' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFloorAccess().getRoomKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloorAccess().getRoomsRoomParserRuleCall_4_1_0()); 
	    }
		lv_rooms_5_0=ruleRoom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloorRule());
	        }
       		add(
       			$current, 
       			"rooms",
        		lv_rooms_5_0, 
        		"Room");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFloorAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFloorAccess().getRoomsRoomParserRuleCall_4_2_1_0()); 
	    }
		lv_rooms_7_0=ruleRoom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFloorRule());
	        }
       		add(
       			$current, 
       			"rooms",
        		lv_rooms_7_0, 
        		"Room");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFloorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleRoom
entryRuleRoom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoomRule()); }
	 iv_ruleRoom=ruleRoom 
	 { $current=$iv_ruleRoom.current; } 
	 EOF 
;

// Rule Room
ruleRoom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRoomAccess().getRoomAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='is-of-type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRoomAccess().getIsOfTypeKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoomRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getExtendsRoomCrossReference_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoomRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getExtendsRoomCrossReference_2_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_5='is-controlled-by' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRoomAccess().getIsControlledByKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoomRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getPoliciesPolicyCrossReference_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRoomAccess().getCommaKeyword_3_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoomRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getPoliciesPolicyCrossReference_3_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*((	otherlv_9='during' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRoomAccess().getDuringKeyword_3_3_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoomRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getDuringScheduleCrossReference_3_3_0_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRoomAccess().getCommaKeyword_3_3_0_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRoomRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getDuringScheduleCrossReference_3_3_0_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |	otherlv_13='during-allways' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRoomAccess().getDuringAllwaysKeyword_3_3_1());
    }
)?)?	otherlv_14='{' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getDeclareSensorSensorComponentParserRuleCall_5_0_0()); 
	    }
		lv_declareSensor_15_0=ruleSensorComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomRule());
	        }
       		add(
       			$current, 
       			"declareSensor",
        		lv_declareSensor_15_0, 
        		"SensorComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getDeclareSensorSensorComponentParserRuleCall_5_1_0()); 
	    }
		lv_declareSensor_16_0=ruleSensorComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomRule());
	        }
       		add(
       			$current, 
       			"declareSensor",
        		lv_declareSensor_16_0, 
        		"SensorComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?((
(
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getDeclareActuatorActuatorComponentParserRuleCall_6_0_0()); 
	    }
		lv_declareActuator_17_0=ruleActuatorComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomRule());
	        }
       		add(
       			$current, 
       			"declareActuator",
        		lv_declareActuator_17_0, 
        		"ActuatorComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomAccess().getDeclareActuatorActuatorComponentParserRuleCall_6_1_0()); 
	    }
		lv_declareActuator_18_0=ruleActuatorComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomRule());
	        }
       		add(
       			$current, 
       			"declareActuator",
        		lv_declareActuator_18_0, 
        		"ActuatorComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	 iv_ruleActuator=ruleActuator 
	 { $current=$iv_ruleActuator.current; } 
	 EOF 
;

// Rule Actuator
ruleActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getLightSwitchActuatorParserRuleCall_0()); 
    }
    this_LightSwitchActuator_0=ruleLightSwitchActuator
    { 
        $current = $this_LightSwitchActuator_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getWindowActuatorParserRuleCall_1()); 
    }
    this_WindowActuator_1=ruleWindowActuator
    { 
        $current = $this_WindowActuator_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getHumidifierActuatorParserRuleCall_2()); 
    }
    this_HumidifierActuator_2=ruleHumidifierActuator
    { 
        $current = $this_HumidifierActuator_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getDoorActuatorParserRuleCall_3()); 
    }
    this_DoorActuator_3=ruleDoorActuator
    { 
        $current = $this_DoorActuator_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getRadiatorActuatorParserRuleCall_4()); 
    }
    this_RadiatorActuator_4=ruleRadiatorActuator
    { 
        $current = $this_RadiatorActuator_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getAudioAlarmActuatorParserRuleCall_5()); 
    }
    this_AudioAlarmActuator_5=ruleAudioAlarmActuator
    { 
        $current = $this_AudioAlarmActuator_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	 iv_ruleSensor=ruleSensor 
	 { $current=$iv_ruleSensor.current; } 
	 EOF 
;

// Rule Sensor
ruleSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getMotionSensorParserRuleCall_0()); 
    }
    this_MotionSensor_0=ruleMotionSensor
    { 
        $current = $this_MotionSensor_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getTemperatureSensorParserRuleCall_1()); 
    }
    this_TemperatureSensor_1=ruleTemperatureSensor
    { 
        $current = $this_TemperatureSensor_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getPressureSensorParserRuleCall_2()); 
    }
    this_PressureSensor_2=rulePressureSensor
    { 
        $current = $this_PressureSensor_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getTouchSensorParserRuleCall_3()); 
    }
    this_TouchSensor_3=ruleTouchSensor
    { 
        $current = $this_TouchSensor_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getLightSensorParserRuleCall_4()); 
    }
    this_LightSensor_4=ruleLightSensor
    { 
        $current = $this_LightSensor_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getSmokeSensorParserRuleCall_5()); 
    }
    this_SmokeSensor_5=ruleSmokeSensor
    { 
        $current = $this_SmokeSensor_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getCO2SensorParserRuleCall_6()); 
    }
    this_CO2Sensor_6=ruleCO2Sensor
    { 
        $current = $this_CO2Sensor_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getInfraredLightSensorParserRuleCall_7()); 
    }
    this_InfraredLightSensor_7=ruleInfraredLightSensor
    { 
        $current = $this_InfraredLightSensor_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getHumiditySensorParserRuleCall_8()); 
    }
    this_HumiditySensor_8=ruleHumiditySensor
    { 
        $current = $this_HumiditySensor_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTime
entryRuleTime returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeRule()); }
	 iv_ruleTime=ruleTime 
	 { $current=$iv_ruleTime.current; } 
	 EOF 
;

// Rule Time
ruleTime returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTimeAccess().getTimeAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getTimeAccess().getHoursEShortParserRuleCall_1_0_0()); 
	    }
		lv_hours_1_0=ruleEShort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeRule());
	        }
       		set(
       			$current, 
       			"hours",
        		lv_hours_1_0, 
        		"EShort");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTimeAccess().getColonKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeAccess().getMinutesEShortParserRuleCall_1_2_0()); 
	    }
		lv_minutes_3_0=ruleEShort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeRule());
	        }
       		set(
       			$current, 
       			"minutes",
        		lv_minutes_3_0, 
        		"EShort");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleEShort
entryRuleEShort returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEShortRule()); } 
	 iv_ruleEShort=ruleEShort 
	 { $current=$iv_ruleEShort.current.getText(); }  
	 EOF 
;

// Rule EShort
ruleEShort returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEShortAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEShortAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleCTS
entryRuleCTS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCTSRule()); }
	 iv_ruleCTS=ruleCTS 
	 { $current=$iv_ruleCTS.current; } 
	 EOF 
;

// Rule CTS
ruleCTS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCTSAccess().getCTSAction_0(),
            $current);
    }
)	otherlv_1='CTS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCTSAccess().getCTSKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='temperatureSensors' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCTSAccess().getTemperatureSensorsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCTSAccess().getTemperatureSensorsSensorParserRuleCall_3_2_0()); 
	    }
		lv_temperatureSensors_5_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCTSRule());
	        }
       		add(
       			$current, 
       			"temperatureSensors",
        		lv_temperatureSensors_5_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCTSAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCTSAccess().getTemperatureSensorsSensorParserRuleCall_3_3_1_0()); 
	    }
		lv_temperatureSensors_7_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCTSRule());
	        }
       		add(
       			$current, 
       			"temperatureSensors",
        		lv_temperatureSensors_7_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='ctsActuators' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCTSAccess().getCtsActuatorsKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCTSAccess().getCtsActuatorsActuatorParserRuleCall_4_2_0()); 
	    }
		lv_ctsActuators_11_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCTSRule());
	        }
       		add(
       			$current, 
       			"ctsActuators",
        		lv_ctsActuators_11_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCTSAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCTSAccess().getCtsActuatorsActuatorParserRuleCall_4_3_1_0()); 
	    }
		lv_ctsActuators_13_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCTSRule());
	        }
       		add(
       			$current, 
       			"ctsActuators",
        		lv_ctsActuators_13_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_4_4());
    }
)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAccessControl
entryRuleAccessControl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccessControlRule()); }
	 iv_ruleAccessControl=ruleAccessControl 
	 { $current=$iv_ruleAccessControl.current; } 
	 EOF 
;

// Rule AccessControl
ruleAccessControl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAccessControlAccess().getAccessControlAction_0(),
            $current);
    }
)	otherlv_1='AccessControl' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAccessControlAccess().getAccessControlKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='accessControlSensors' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAccessControlAccess().getAccessControlSensorsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessControlAccess().getAccessControlSensorsSensorParserRuleCall_3_2_0()); 
	    }
		lv_accessControlSensors_5_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessControlRule());
	        }
       		add(
       			$current, 
       			"accessControlSensors",
        		lv_accessControlSensors_5_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAccessControlAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessControlAccess().getAccessControlSensorsSensorParserRuleCall_3_3_1_0()); 
	    }
		lv_accessControlSensors_7_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessControlRule());
	        }
       		add(
       			$current, 
       			"accessControlSensors",
        		lv_accessControlSensors_7_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='accessControlDoorLockActuator' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0()); 
	    }
		lv_accessControlDoorLockActuator_11_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessControlRule());
	        }
       		add(
       			$current, 
       			"accessControlDoorLockActuator",
        		lv_accessControlDoorLockActuator_11_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAccessControlAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0()); 
	    }
		lv_accessControlDoorLockActuator_13_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessControlRule());
	        }
       		add(
       			$current, 
       			"accessControlDoorLockActuator",
        		lv_accessControlDoorLockActuator_13_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_4_4());
    }
)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCalendarSystem
entryRuleCalendarSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCalendarSystemRule()); }
	 iv_ruleCalendarSystem=ruleCalendarSystem 
	 { $current=$iv_ruleCalendarSystem.current; } 
	 EOF 
;

// Rule CalendarSystem
ruleCalendarSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCalendarSystemAccess().getCalendarSystemAction_0(),
            $current);
    }
)	otherlv_1='CalendarSystem' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCalendarSystemAccess().getCalendarSystemKeyword_1());
    }
)
;





// Entry rule entryRuleMeetingScheduleSystem
entryRuleMeetingScheduleSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMeetingScheduleSystemRule()); }
	 iv_ruleMeetingScheduleSystem=ruleMeetingScheduleSystem 
	 { $current=$iv_ruleMeetingScheduleSystem.current; } 
	 EOF 
;

// Rule MeetingScheduleSystem
ruleMeetingScheduleSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMeetingScheduleSystemAccess().getMeetingScheduleSystemAction_0(),
            $current);
    }
)	otherlv_1='MeetingScheduleSystem' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMeetingScheduleSystemAccess().getMeetingScheduleSystemKeyword_1());
    }
)
;





// Entry rule entryRuleMotionSensor
entryRuleMotionSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMotionSensorRule()); }
	 iv_ruleMotionSensor=ruleMotionSensor 
	 { $current=$iv_ruleMotionSensor.current; } 
	 EOF 
;

// Rule MotionSensor
ruleMotionSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMotionSensorAccess().getMotionSensorAction_0(),
            $current);
    }
)	otherlv_1='MotionSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMotionSensorAccess().getMotionSensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMotionSensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMotionSensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMotionSensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMotionSensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMotionSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMotionSensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleTemperatureSensor
entryRuleTemperatureSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemperatureSensorRule()); }
	 iv_ruleTemperatureSensor=ruleTemperatureSensor 
	 { $current=$iv_ruleTemperatureSensor.current; } 
	 EOF 
;

// Rule TemperatureSensor
ruleTemperatureSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTemperatureSensorAccess().getTemperatureSensorAction_0(),
            $current);
    }
)	otherlv_1='TemperatureSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemperatureSensorAccess().getTemperatureSensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemperatureSensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTemperatureSensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemperatureSensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemperatureSensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemperatureSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTemperatureSensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRulePressureSensor
entryRulePressureSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPressureSensorRule()); }
	 iv_rulePressureSensor=rulePressureSensor 
	 { $current=$iv_rulePressureSensor.current; } 
	 EOF 
;

// Rule PressureSensor
rulePressureSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPressureSensorAccess().getPressureSensorAction_0(),
            $current);
    }
)	otherlv_1='PressureSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPressureSensorAccess().getPressureSensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPressureSensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPressureSensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPressureSensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPressureSensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPressureSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPressureSensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleTouchSensor
entryRuleTouchSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTouchSensorRule()); }
	 iv_ruleTouchSensor=ruleTouchSensor 
	 { $current=$iv_ruleTouchSensor.current; } 
	 EOF 
;

// Rule TouchSensor
ruleTouchSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTouchSensorAccess().getTouchSensorAction_0(),
            $current);
    }
)	otherlv_1='TouchSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTouchSensorAccess().getTouchSensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTouchSensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTouchSensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTouchSensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTouchSensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTouchSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTouchSensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleLightSensor
entryRuleLightSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLightSensorRule()); }
	 iv_ruleLightSensor=ruleLightSensor 
	 { $current=$iv_ruleLightSensor.current; } 
	 EOF 
;

// Rule LightSensor
ruleLightSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLightSensorAccess().getLightSensorAction_0(),
            $current);
    }
)	otherlv_1='LightSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLightSensorAccess().getLightSensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLightSensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLightSensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLightSensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLightSensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLightSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLightSensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleSmokeSensor
entryRuleSmokeSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmokeSensorRule()); }
	 iv_ruleSmokeSensor=ruleSmokeSensor 
	 { $current=$iv_ruleSmokeSensor.current; } 
	 EOF 
;

// Rule SmokeSensor
ruleSmokeSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSmokeSensorAccess().getSmokeSensorAction_0(),
            $current);
    }
)	otherlv_1='SmokeSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSmokeSensorAccess().getSmokeSensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSmokeSensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSmokeSensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSmokeSensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmokeSensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmokeSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSmokeSensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleCO2Sensor
entryRuleCO2Sensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCO2SensorRule()); }
	 iv_ruleCO2Sensor=ruleCO2Sensor 
	 { $current=$iv_ruleCO2Sensor.current; } 
	 EOF 
;

// Rule CO2Sensor
ruleCO2Sensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCO2SensorAccess().getCO2SensorAction_0(),
            $current);
    }
)	otherlv_1='CO2Sensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCO2SensorAccess().getCO2SensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCO2SensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCO2SensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCO2SensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCO2SensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCO2SensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCO2SensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleInfraredLightSensor
entryRuleInfraredLightSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfraredLightSensorRule()); }
	 iv_ruleInfraredLightSensor=ruleInfraredLightSensor 
	 { $current=$iv_ruleInfraredLightSensor.current; } 
	 EOF 
;

// Rule InfraredLightSensor
ruleInfraredLightSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorAction_0(),
            $current);
    }
)	otherlv_1='InfraredLightSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInfraredLightSensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInfraredLightSensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInfraredLightSensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfraredLightSensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfraredLightSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInfraredLightSensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;







// Entry rule entryRuleHumiditySensor
entryRuleHumiditySensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHumiditySensorRule()); }
	 iv_ruleHumiditySensor=ruleHumiditySensor 
	 { $current=$iv_ruleHumiditySensor.current; } 
	 EOF 
;

// Rule HumiditySensor
ruleHumiditySensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHumiditySensorAccess().getHumiditySensorAction_0(),
            $current);
    }
)	otherlv_1='HumiditySensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHumiditySensorAccess().getHumiditySensorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHumiditySensorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHumiditySensorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHumiditySensorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHumiditySensorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHumiditySensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHumiditySensorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleLightSwitchActuator
entryRuleLightSwitchActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLightSwitchActuatorRule()); }
	 iv_ruleLightSwitchActuator=ruleLightSwitchActuator 
	 { $current=$iv_ruleLightSwitchActuator.current; } 
	 EOF 
;

// Rule LightSwitchActuator
ruleLightSwitchActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorAction_0(),
            $current);
    }
)	otherlv_1='LightSwitchActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLightSwitchActuatorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLightSwitchActuatorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLightSwitchActuatorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLightSwitchActuatorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLightSwitchActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLightSwitchActuatorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleWindowActuator
entryRuleWindowActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWindowActuatorRule()); }
	 iv_ruleWindowActuator=ruleWindowActuator 
	 { $current=$iv_ruleWindowActuator.current; } 
	 EOF 
;

// Rule WindowActuator
ruleWindowActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWindowActuatorAccess().getWindowActuatorAction_0(),
            $current);
    }
)	otherlv_1='WindowActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWindowActuatorAccess().getWindowActuatorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWindowActuatorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWindowActuatorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWindowActuatorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWindowActuatorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWindowActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWindowActuatorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleHumidifierActuator
entryRuleHumidifierActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHumidifierActuatorRule()); }
	 iv_ruleHumidifierActuator=ruleHumidifierActuator 
	 { $current=$iv_ruleHumidifierActuator.current; } 
	 EOF 
;

// Rule HumidifierActuator
ruleHumidifierActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorAction_0(),
            $current);
    }
)	otherlv_1='HumidifierActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHumidifierActuatorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHumidifierActuatorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHumidifierActuatorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHumidifierActuatorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHumidifierActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHumidifierActuatorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleDoorActuator
entryRuleDoorActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoorActuatorRule()); }
	 iv_ruleDoorActuator=ruleDoorActuator 
	 { $current=$iv_ruleDoorActuator.current; } 
	 EOF 
;

// Rule DoorActuator
ruleDoorActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDoorActuatorAccess().getDoorActuatorAction_0(),
            $current);
    }
)	otherlv_1='DoorActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDoorActuatorAccess().getDoorActuatorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDoorActuatorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDoorActuatorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDoorActuatorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoorActuatorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoorActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDoorActuatorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleRadiatorActuator
entryRuleRadiatorActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRadiatorActuatorRule()); }
	 iv_ruleRadiatorActuator=ruleRadiatorActuator 
	 { $current=$iv_ruleRadiatorActuator.current; } 
	 EOF 
;

// Rule RadiatorActuator
ruleRadiatorActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorAction_0(),
            $current);
    }
)	otherlv_1='RadiatorActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRadiatorActuatorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRadiatorActuatorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRadiatorActuatorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRadiatorActuatorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadiatorActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRadiatorActuatorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;





// Entry rule entryRuleAudioAlarmActuator
entryRuleAudioAlarmActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAudioAlarmActuatorRule()); }
	 iv_ruleAudioAlarmActuator=ruleAudioAlarmActuator 
	 { $current=$iv_ruleAudioAlarmActuator.current; } 
	 EOF 
;

// Rule AudioAlarmActuator
ruleAudioAlarmActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorAction_0(),
            $current);
    }
)	otherlv_1='AudioAlarmActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAudioAlarmActuatorAccess().getLeftCurlyBracketKeyword_2_0());
    }
	otherlv_3='valueState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAudioAlarmActuatorAccess().getValueStateKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAudioAlarmActuatorAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAudioAlarmActuatorAccess().getValueStateEIntParserRuleCall_2_3_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAudioAlarmActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAudioAlarmActuatorAccess().getRightCurlyBracketKeyword_2_4());
    }
)?)
;







// Entry rule entryRuleSensorComponent
entryRuleSensorComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSensorComponentRule()); }
	 iv_ruleSensorComponent=ruleSensorComponent 
	 { $current=$iv_ruleSensorComponent.current; } 
	 EOF 
;

// Rule SensorComponent
ruleSensorComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSensorComponentAccess().getSensorComponentAction_0(),
            $current);
    }
)	otherlv_1='sensor ' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSensorComponentAccess().getSensorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSensorComponentAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSensorComponentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='is a ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSensorComponentAccess().getIsAKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSensorComponentAccess().getSensorsSensorParserRuleCall_3_1_0()); 
	    }
		lv_sensors_4_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSensorComponentRule());
	        }
       		add(
       			$current, 
       			"sensors",
        		lv_sensors_4_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSensorComponentAccess().getSensorsSensorParserRuleCall_3_2_0()); 
	    }
		lv_sensors_5_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSensorComponentRule());
	        }
       		add(
       			$current, 
       			"sensors",
        		lv_sensors_5_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
;





// Entry rule entryRuleActuatorComponent
entryRuleActuatorComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActuatorComponentRule()); }
	 iv_ruleActuatorComponent=ruleActuatorComponent 
	 { $current=$iv_ruleActuatorComponent.current; } 
	 EOF 
;

// Rule ActuatorComponent
ruleActuatorComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getActuatorComponentAccess().getActuatorComponentAction_0(),
            $current);
    }
)	otherlv_1='actuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActuatorComponentAccess().getActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActuatorComponentAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActuatorComponentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='is a ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActuatorComponentAccess().getIsAKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActuatorComponentAccess().getActuatorsActuatorParserRuleCall_3_1_0()); 
	    }
		lv_actuators_4_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActuatorComponentRule());
	        }
       		add(
       			$current, 
       			"actuators",
        		lv_actuators_4_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActuatorComponentAccess().getActuatorsActuatorParserRuleCall_3_2_0()); 
	    }
		lv_actuators_5_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActuatorComponentRule());
	        }
       		add(
       			$current, 
       			"actuators",
        		lv_actuators_5_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?)
;





// Entry rule entryRuleConditions
entryRuleConditions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionsRule()); }
	 iv_ruleConditions=ruleConditions 
	 { $current=$iv_ruleConditions.current; } 
	 EOF 
;

// Rule Conditions
ruleConditions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConditionsAccess().getConditionsAction_0(),
            $current);
    }
)	otherlv_1='Conditions' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConditionsAccess().getConditionsKeyword_1());
    }
)
;





// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); } 
	 iv_ruleEBoolean=ruleEBoolean 
	 { $current=$iv_ruleEBoolean.current.getText(); }  
	 EOF 
;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='true' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
    }

    |
	kw='false' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
    }
)
    ;





// Rule Weekdays
ruleWeekdays returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='MONDAY' 
	{
        $current = grammarAccess.getWeekdaysAccess().getMONDAYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getWeekdaysAccess().getMONDAYEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='TUESDAY' 
	{
        $current = grammarAccess.getWeekdaysAccess().getTUESDAYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getWeekdaysAccess().getTUESDAYEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='WEDENSDAY' 
	{
        $current = grammarAccess.getWeekdaysAccess().getWEDENSDAYEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getWeekdaysAccess().getWEDENSDAYEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='THURSDAY' 
	{
        $current = grammarAccess.getWeekdaysAccess().getTHURSDAYEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getWeekdaysAccess().getTHURSDAYEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='FRIDAY' 
	{
        $current = grammarAccess.getWeekdaysAccess().getFRIDAYEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getWeekdaysAccess().getFRIDAYEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='SATURDAY' 
	{
        $current = grammarAccess.getWeekdaysAccess().getSATURDAYEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getWeekdaysAccess().getSATURDAYEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='SUNDAY' 
	{
        $current = grammarAccess.getWeekdaysAccess().getSUNDAYEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getWeekdaysAccess().getSUNDAYEnumLiteralDeclaration_6()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


