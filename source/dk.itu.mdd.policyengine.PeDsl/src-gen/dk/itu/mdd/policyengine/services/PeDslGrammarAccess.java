/*
* generated by Xtext
*/

package dk.itu.mdd.policyengine.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PeDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cPredefinedRoomsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cPredefinedRoomsRoomParserRuleCall_3_0_0 = (RuleCall)cPredefinedRoomsAssignment_3_0.eContents().get(0);
		private final Assignment cPredefinedRoomsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPredefinedRoomsRoomParserRuleCall_3_1_0 = (RuleCall)cPredefinedRoomsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cBuildingsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cBuildingsBuildingParserRuleCall_4_0_0 = (RuleCall)cBuildingsAssignment_4_0.eContents().get(0);
		private final Assignment cBuildingsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cBuildingsBuildingParserRuleCall_4_1_0 = (RuleCall)cBuildingsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cStateDefinitionAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cStateDefinitionStateParserRuleCall_5_0_0 = (RuleCall)cStateDefinitionAssignment_5_0.eContents().get(0);
		private final Assignment cStateDefinitionAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cStateDefinitionStateParserRuleCall_5_1_0 = (RuleCall)cStateDefinitionAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Model:
		//	{Model} name=EString "{" (predefinedRooms+=Room predefinedRooms+=Room*)? (buildings+=Building buildings+=Building*)?
		//	(stateDefinition+=State stateDefinition+=State*)? "}";
		public ParserRule getRule() { return rule; }

		//{Model} name=EString "{" (predefinedRooms+=Room predefinedRooms+=Room*)? (buildings+=Building buildings+=Building*)?
		//(stateDefinition+=State stateDefinition+=State*)? "}"
		public Group getGroup() { return cGroup; }

		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//(predefinedRooms+=Room predefinedRooms+=Room*)?
		public Group getGroup_3() { return cGroup_3; }

		//predefinedRooms+=Room
		public Assignment getPredefinedRoomsAssignment_3_0() { return cPredefinedRoomsAssignment_3_0; }

		//Room
		public RuleCall getPredefinedRoomsRoomParserRuleCall_3_0_0() { return cPredefinedRoomsRoomParserRuleCall_3_0_0; }

		//predefinedRooms+=Room*
		public Assignment getPredefinedRoomsAssignment_3_1() { return cPredefinedRoomsAssignment_3_1; }

		//Room
		public RuleCall getPredefinedRoomsRoomParserRuleCall_3_1_0() { return cPredefinedRoomsRoomParserRuleCall_3_1_0; }

		//(buildings+=Building buildings+=Building*)?
		public Group getGroup_4() { return cGroup_4; }

		//buildings+=Building
		public Assignment getBuildingsAssignment_4_0() { return cBuildingsAssignment_4_0; }

		//Building
		public RuleCall getBuildingsBuildingParserRuleCall_4_0_0() { return cBuildingsBuildingParserRuleCall_4_0_0; }

		//buildings+=Building*
		public Assignment getBuildingsAssignment_4_1() { return cBuildingsAssignment_4_1; }

		//Building
		public RuleCall getBuildingsBuildingParserRuleCall_4_1_0() { return cBuildingsBuildingParserRuleCall_4_1_0; }

		//(stateDefinition+=State stateDefinition+=State*)?
		public Group getGroup_5() { return cGroup_5; }

		//stateDefinition+=State
		public Assignment getStateDefinitionAssignment_5_0() { return cStateDefinitionAssignment_5_0; }

		//State
		public RuleCall getStateDefinitionStateParserRuleCall_5_0_0() { return cStateDefinitionStateParserRuleCall_5_0_0; }

		//stateDefinition+=State*
		public Assignment getStateDefinitionAssignment_5_1() { return cStateDefinitionAssignment_5_1; }

		//State
		public RuleCall getStateDefinitionStateParserRuleCall_5_1_0() { return cStateDefinitionStateParserRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Actuator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLightSwitchActuatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWindowActuatorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cHumidifierActuatorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDoorActuatorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRadiatorActuatorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cAudioAlarmActuatorParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cHasIntValue_ImplParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Actuator:
		//	LightSwitchActuator | WindowActuator | HumidifierActuator | DoorActuator | RadiatorActuator | AudioAlarmActuator |
		//	HasIntValue_Impl;
		public ParserRule getRule() { return rule; }

		//LightSwitchActuator | WindowActuator | HumidifierActuator | DoorActuator | RadiatorActuator | AudioAlarmActuator |
		//HasIntValue_Impl
		public Alternatives getAlternatives() { return cAlternatives; }

		//LightSwitchActuator
		public RuleCall getLightSwitchActuatorParserRuleCall_0() { return cLightSwitchActuatorParserRuleCall_0; }

		//WindowActuator
		public RuleCall getWindowActuatorParserRuleCall_1() { return cWindowActuatorParserRuleCall_1; }

		//HumidifierActuator
		public RuleCall getHumidifierActuatorParserRuleCall_2() { return cHumidifierActuatorParserRuleCall_2; }

		//DoorActuator
		public RuleCall getDoorActuatorParserRuleCall_3() { return cDoorActuatorParserRuleCall_3; }

		//RadiatorActuator
		public RuleCall getRadiatorActuatorParserRuleCall_4() { return cRadiatorActuatorParserRuleCall_4; }

		//AudioAlarmActuator
		public RuleCall getAudioAlarmActuatorParserRuleCall_5() { return cAudioAlarmActuatorParserRuleCall_5; }

		//HasIntValue_Impl
		public RuleCall getHasIntValue_ImplParserRuleCall_6() { return cHasIntValue_ImplParserRuleCall_6; }
	}

	public class SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Sensor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMotionSensorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTemperatureSensorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPressureSensorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTouchSensorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLightSensorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSmokeSensorParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCO2SensorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cInfraredLightSensorParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cHasIntegerValue_ImplParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cHumiditySensorParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//Sensor:
		//	MotionSensor | TemperatureSensor | PressureSensor | TouchSensor | LightSensor | SmokeSensor | CO2Sensor |
		//	InfraredLightSensor | HasIntegerValue_Impl | HumiditySensor;
		public ParserRule getRule() { return rule; }

		//MotionSensor | TemperatureSensor | PressureSensor | TouchSensor | LightSensor | SmokeSensor | CO2Sensor |
		//InfraredLightSensor | HasIntegerValue_Impl | HumiditySensor
		public Alternatives getAlternatives() { return cAlternatives; }

		//MotionSensor
		public RuleCall getMotionSensorParserRuleCall_0() { return cMotionSensorParserRuleCall_0; }

		//TemperatureSensor
		public RuleCall getTemperatureSensorParserRuleCall_1() { return cTemperatureSensorParserRuleCall_1; }

		//PressureSensor
		public RuleCall getPressureSensorParserRuleCall_2() { return cPressureSensorParserRuleCall_2; }

		//TouchSensor
		public RuleCall getTouchSensorParserRuleCall_3() { return cTouchSensorParserRuleCall_3; }

		//LightSensor
		public RuleCall getLightSensorParserRuleCall_4() { return cLightSensorParserRuleCall_4; }

		//SmokeSensor
		public RuleCall getSmokeSensorParserRuleCall_5() { return cSmokeSensorParserRuleCall_5; }

		//CO2Sensor
		public RuleCall getCO2SensorParserRuleCall_6() { return cCO2SensorParserRuleCall_6; }

		//InfraredLightSensor
		public RuleCall getInfraredLightSensorParserRuleCall_7() { return cInfraredLightSensorParserRuleCall_7; }

		//HasIntegerValue_Impl
		public RuleCall getHasIntegerValue_ImplParserRuleCall_8() { return cHasIntegerValue_ImplParserRuleCall_8; }

		//HumiditySensor
		public RuleCall getHumiditySensorParserRuleCall_9() { return cHumiditySensorParserRuleCall_9; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class BuildingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Building");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBuildingAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBuildingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cDeclareSensorsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cDeclareSensorsSensorComponentParserRuleCall_4_0_0 = (RuleCall)cDeclareSensorsAssignment_4_0.eContents().get(0);
		private final Assignment cDeclareSensorsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDeclareSensorsSensorComponentParserRuleCall_4_1_0 = (RuleCall)cDeclareSensorsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cDeclareActuatorsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cDeclareActuatorsActuatorComponentParserRuleCall_5_0_0 = (RuleCall)cDeclareActuatorsAssignment_5_0.eContents().get(0);
		private final Assignment cDeclareActuatorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDeclareActuatorsActuatorComponentParserRuleCall_5_1_0 = (RuleCall)cDeclareActuatorsAssignment_5_1.eContents().get(0);
		private final Assignment cCtsSystemAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cCtsSystemCTSParserRuleCall_6_0 = (RuleCall)cCtsSystemAssignment_6.eContents().get(0);
		private final Assignment cAccessControlAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cAccessControlAccessControlParserRuleCall_7_0 = (RuleCall)cAccessControlAssignment_7.eContents().get(0);
		private final Assignment cCalendarSystemAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCalendarSystemCalendarSystemParserRuleCall_8_0 = (RuleCall)cCalendarSystemAssignment_8.eContents().get(0);
		private final Assignment cMeetingScheduleSystemAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_9_0 = (RuleCall)cMeetingScheduleSystemAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cFloorsAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cFloorsFloorParserRuleCall_10_0_0 = (RuleCall)cFloorsAssignment_10_0.eContents().get(0);
		private final Assignment cFloorsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cFloorsFloorParserRuleCall_10_1_0 = (RuleCall)cFloorsAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Building:
		//	{Building} "building" name=EString "{" (declareSensors+=SensorComponent declareSensors+=SensorComponent*)?
		//	(declareActuators+=ActuatorComponent declareActuators+=ActuatorComponent*)? ctsSystem=CTS?
		//	accessControl=AccessControl? calendarSystem=CalendarSystem? meetingScheduleSystem=MeetingScheduleSystem?
		//	(floors+=Floor floors+=Floor*)? "}";
		public ParserRule getRule() { return rule; }

		//{Building} "building" name=EString "{" (declareSensors+=SensorComponent declareSensors+=SensorComponent*)?
		//(declareActuators+=ActuatorComponent declareActuators+=ActuatorComponent*)? ctsSystem=CTS? accessControl=AccessControl?
		//calendarSystem=CalendarSystem? meetingScheduleSystem=MeetingScheduleSystem? (floors+=Floor floors+=Floor*)? "}"
		public Group getGroup() { return cGroup; }

		//{Building}
		public Action getBuildingAction_0() { return cBuildingAction_0; }

		//"building"
		public Keyword getBuildingKeyword_1() { return cBuildingKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(declareSensors+=SensorComponent declareSensors+=SensorComponent*)?
		public Group getGroup_4() { return cGroup_4; }

		//declareSensors+=SensorComponent
		public Assignment getDeclareSensorsAssignment_4_0() { return cDeclareSensorsAssignment_4_0; }

		//SensorComponent
		public RuleCall getDeclareSensorsSensorComponentParserRuleCall_4_0_0() { return cDeclareSensorsSensorComponentParserRuleCall_4_0_0; }

		//declareSensors+=SensorComponent*
		public Assignment getDeclareSensorsAssignment_4_1() { return cDeclareSensorsAssignment_4_1; }

		//SensorComponent
		public RuleCall getDeclareSensorsSensorComponentParserRuleCall_4_1_0() { return cDeclareSensorsSensorComponentParserRuleCall_4_1_0; }

		//(declareActuators+=ActuatorComponent declareActuators+=ActuatorComponent*)?
		public Group getGroup_5() { return cGroup_5; }

		//declareActuators+=ActuatorComponent
		public Assignment getDeclareActuatorsAssignment_5_0() { return cDeclareActuatorsAssignment_5_0; }

		//ActuatorComponent
		public RuleCall getDeclareActuatorsActuatorComponentParserRuleCall_5_0_0() { return cDeclareActuatorsActuatorComponentParserRuleCall_5_0_0; }

		//declareActuators+=ActuatorComponent*
		public Assignment getDeclareActuatorsAssignment_5_1() { return cDeclareActuatorsAssignment_5_1; }

		//ActuatorComponent
		public RuleCall getDeclareActuatorsActuatorComponentParserRuleCall_5_1_0() { return cDeclareActuatorsActuatorComponentParserRuleCall_5_1_0; }

		//ctsSystem=CTS?
		public Assignment getCtsSystemAssignment_6() { return cCtsSystemAssignment_6; }

		//CTS
		public RuleCall getCtsSystemCTSParserRuleCall_6_0() { return cCtsSystemCTSParserRuleCall_6_0; }

		//accessControl=AccessControl?
		public Assignment getAccessControlAssignment_7() { return cAccessControlAssignment_7; }

		//AccessControl
		public RuleCall getAccessControlAccessControlParserRuleCall_7_0() { return cAccessControlAccessControlParserRuleCall_7_0; }

		//calendarSystem=CalendarSystem?
		public Assignment getCalendarSystemAssignment_8() { return cCalendarSystemAssignment_8; }

		//CalendarSystem
		public RuleCall getCalendarSystemCalendarSystemParserRuleCall_8_0() { return cCalendarSystemCalendarSystemParserRuleCall_8_0; }

		//meetingScheduleSystem=MeetingScheduleSystem?
		public Assignment getMeetingScheduleSystemAssignment_9() { return cMeetingScheduleSystemAssignment_9; }

		//MeetingScheduleSystem
		public RuleCall getMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_9_0() { return cMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_9_0; }

		//(floors+=Floor floors+=Floor*)?
		public Group getGroup_10() { return cGroup_10; }

		//floors+=Floor
		public Assignment getFloorsAssignment_10_0() { return cFloorsAssignment_10_0; }

		//Floor
		public RuleCall getFloorsFloorParserRuleCall_10_0_0() { return cFloorsFloorParserRuleCall_10_0_0; }

		//floors+=Floor*
		public Assignment getFloorsAssignment_10_1() { return cFloorsAssignment_10_1; }

		//Floor
		public RuleCall getFloorsFloorParserRuleCall_10_1_0() { return cFloorsFloorParserRuleCall_10_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class RoomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Room");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRoomAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRoomKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIsAKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cExtendsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cExtendsRoomCrossReference_3_1_0 = (CrossReference)cExtendsAssignment_3_1.eContents().get(0);
		private final RuleCall cExtendsRoomEStringParserRuleCall_3_1_0_1 = (RuleCall)cExtendsRoomCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cDeclareSensorAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cDeclareSensorSensorComponentParserRuleCall_5_0_0 = (RuleCall)cDeclareSensorAssignment_5_0.eContents().get(0);
		private final Assignment cDeclareSensorAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDeclareSensorSensorComponentParserRuleCall_5_1_0 = (RuleCall)cDeclareSensorAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cDeclareActuatorAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cDeclareActuatorActuatorComponentParserRuleCall_6_0_0 = (RuleCall)cDeclareActuatorAssignment_6_0.eContents().get(0);
		private final Assignment cDeclareActuatorAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDeclareActuatorActuatorComponentParserRuleCall_6_1_0 = (RuleCall)cDeclareActuatorAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Room:
		//	{Room} "room" name=EString ("is a " extends=[Room|EString])? "{" (declareSensor+=SensorComponent
		//	declareSensor+=SensorComponent*)? (declareActuator+=ActuatorComponent declareActuator+=ActuatorComponent*)? "}";
		public ParserRule getRule() { return rule; }

		//{Room} "room" name=EString ("is a " extends=[Room|EString])? "{" (declareSensor+=SensorComponent
		//declareSensor+=SensorComponent*)? (declareActuator+=ActuatorComponent declareActuator+=ActuatorComponent*)? "}"
		public Group getGroup() { return cGroup; }

		//{Room}
		public Action getRoomAction_0() { return cRoomAction_0; }

		//"room"
		public Keyword getRoomKeyword_1() { return cRoomKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//("is a " extends=[Room|EString])?
		public Group getGroup_3() { return cGroup_3; }

		//"is a "
		public Keyword getIsAKeyword_3_0() { return cIsAKeyword_3_0; }

		//extends=[Room|EString]
		public Assignment getExtendsAssignment_3_1() { return cExtendsAssignment_3_1; }

		//[Room|EString]
		public CrossReference getExtendsRoomCrossReference_3_1_0() { return cExtendsRoomCrossReference_3_1_0; }

		//EString
		public RuleCall getExtendsRoomEStringParserRuleCall_3_1_0_1() { return cExtendsRoomEStringParserRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//(declareSensor+=SensorComponent declareSensor+=SensorComponent*)?
		public Group getGroup_5() { return cGroup_5; }

		//declareSensor+=SensorComponent
		public Assignment getDeclareSensorAssignment_5_0() { return cDeclareSensorAssignment_5_0; }

		//SensorComponent
		public RuleCall getDeclareSensorSensorComponentParserRuleCall_5_0_0() { return cDeclareSensorSensorComponentParserRuleCall_5_0_0; }

		//declareSensor+=SensorComponent*
		public Assignment getDeclareSensorAssignment_5_1() { return cDeclareSensorAssignment_5_1; }

		//SensorComponent
		public RuleCall getDeclareSensorSensorComponentParserRuleCall_5_1_0() { return cDeclareSensorSensorComponentParserRuleCall_5_1_0; }

		//(declareActuator+=ActuatorComponent declareActuator+=ActuatorComponent*)?
		public Group getGroup_6() { return cGroup_6; }

		//declareActuator+=ActuatorComponent
		public Assignment getDeclareActuatorAssignment_6_0() { return cDeclareActuatorAssignment_6_0; }

		//ActuatorComponent
		public RuleCall getDeclareActuatorActuatorComponentParserRuleCall_6_0_0() { return cDeclareActuatorActuatorComponentParserRuleCall_6_0_0; }

		//declareActuator+=ActuatorComponent*
		public Assignment getDeclareActuatorAssignment_6_1() { return cDeclareActuatorAssignment_6_1; }

		//ActuatorComponent
		public RuleCall getDeclareActuatorActuatorComponentParserRuleCall_6_1_0() { return cDeclareActuatorActuatorComponentParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cUsesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cUsesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cUsesActuatorParserRuleCall_3_1_0 = (RuleCall)cUsesAssignment_3_1.eContents().get(0);
		private final Assignment cUsesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cUsesActuatorParserRuleCall_3_2_0 = (RuleCall)cUsesAssignment_3_2.eContents().get(0);
		
		//State:
		//	{State} "State" name=EString ("uses " uses+=Actuator uses+=Actuator*)?;
		public ParserRule getRule() { return rule; }

		//{State} "State" name=EString ("uses " uses+=Actuator uses+=Actuator*)?
		public Group getGroup() { return cGroup; }

		//{State}
		public Action getStateAction_0() { return cStateAction_0; }

		//"State"
		public Keyword getStateKeyword_1() { return cStateKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//("uses " uses+=Actuator uses+=Actuator*)?
		public Group getGroup_3() { return cGroup_3; }

		//"uses "
		public Keyword getUsesKeyword_3_0() { return cUsesKeyword_3_0; }

		//uses+=Actuator
		public Assignment getUsesAssignment_3_1() { return cUsesAssignment_3_1; }

		//Actuator
		public RuleCall getUsesActuatorParserRuleCall_3_1_0() { return cUsesActuatorParserRuleCall_3_1_0; }

		//uses+=Actuator*
		public Assignment getUsesAssignment_3_2() { return cUsesAssignment_3_2; }

		//Actuator
		public RuleCall getUsesActuatorParserRuleCall_3_2_0() { return cUsesActuatorParserRuleCall_3_2_0; }
	}

	public class CTSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CTS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCTSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCTSKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTemperatureSensorsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTemperatureSensorsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTemperatureSensorsSensorParserRuleCall_3_2_0 = (RuleCall)cTemperatureSensorsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cTemperatureSensorsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cTemperatureSensorsSensorParserRuleCall_3_3_1_0 = (RuleCall)cTemperatureSensorsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCtsActuatorsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cCtsActuatorsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cCtsActuatorsActuatorParserRuleCall_4_2_0 = (RuleCall)cCtsActuatorsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cCtsActuatorsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cCtsActuatorsActuatorParserRuleCall_4_3_1_0 = (RuleCall)cCtsActuatorsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CTS:
		//	{CTS} "CTS" "{" ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
		//	("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{CTS} "CTS" "{" ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
		//("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{CTS}
		public Action getCTSAction_0() { return cCTSAction_0; }

		//"CTS"
		public Keyword getCTSKeyword_1() { return cCTSKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"temperatureSensors"
		public Keyword getTemperatureSensorsKeyword_3_0() { return cTemperatureSensorsKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//temperatureSensors+=Sensor
		public Assignment getTemperatureSensorsAssignment_3_2() { return cTemperatureSensorsAssignment_3_2; }

		//Sensor
		public RuleCall getTemperatureSensorsSensorParserRuleCall_3_2_0() { return cTemperatureSensorsSensorParserRuleCall_3_2_0; }

		//("," temperatureSensors+=Sensor)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//temperatureSensors+=Sensor
		public Assignment getTemperatureSensorsAssignment_3_3_1() { return cTemperatureSensorsAssignment_3_3_1; }

		//Sensor
		public RuleCall getTemperatureSensorsSensorParserRuleCall_3_3_1_0() { return cTemperatureSensorsSensorParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"ctsActuators"
		public Keyword getCtsActuatorsKeyword_4_0() { return cCtsActuatorsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//ctsActuators+=Actuator
		public Assignment getCtsActuatorsAssignment_4_2() { return cCtsActuatorsAssignment_4_2; }

		//Actuator
		public RuleCall getCtsActuatorsActuatorParserRuleCall_4_2_0() { return cCtsActuatorsActuatorParserRuleCall_4_2_0; }

		//("," ctsActuators+=Actuator)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//ctsActuators+=Actuator
		public Assignment getCtsActuatorsAssignment_4_3_1() { return cCtsActuatorsAssignment_4_3_1; }

		//Actuator
		public RuleCall getCtsActuatorsActuatorParserRuleCall_4_3_1_0() { return cCtsActuatorsActuatorParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class AccessControlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AccessControl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAccessControlAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAccessControlKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAccessControlSensorsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cAccessControlSensorsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAccessControlSensorsSensorParserRuleCall_3_2_0 = (RuleCall)cAccessControlSensorsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cAccessControlSensorsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cAccessControlSensorsSensorParserRuleCall_3_3_1_0 = (RuleCall)cAccessControlSensorsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAccessControlDoorLockActuatorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAccessControlDoorLockActuatorAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0 = (RuleCall)cAccessControlDoorLockActuatorAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAccessControlDoorLockActuatorAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0 = (RuleCall)cAccessControlDoorLockActuatorAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AccessControl:
		//	{AccessControl} "AccessControl" "{" ("accessControlSensors" "{" accessControlSensors+=Sensor (","
		//	accessControlSensors+=Sensor)* "}")? ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
		//	accessControlDoorLockActuator+=Actuator)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{AccessControl} "AccessControl" "{" ("accessControlSensors" "{" accessControlSensors+=Sensor (","
		//accessControlSensors+=Sensor)* "}")? ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
		//accessControlDoorLockActuator+=Actuator)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{AccessControl}
		public Action getAccessControlAction_0() { return cAccessControlAction_0; }

		//"AccessControl"
		public Keyword getAccessControlKeyword_1() { return cAccessControlKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("accessControlSensors" "{" accessControlSensors+=Sensor ("," accessControlSensors+=Sensor)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"accessControlSensors"
		public Keyword getAccessControlSensorsKeyword_3_0() { return cAccessControlSensorsKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//accessControlSensors+=Sensor
		public Assignment getAccessControlSensorsAssignment_3_2() { return cAccessControlSensorsAssignment_3_2; }

		//Sensor
		public RuleCall getAccessControlSensorsSensorParserRuleCall_3_2_0() { return cAccessControlSensorsSensorParserRuleCall_3_2_0; }

		//("," accessControlSensors+=Sensor)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//accessControlSensors+=Sensor
		public Assignment getAccessControlSensorsAssignment_3_3_1() { return cAccessControlSensorsAssignment_3_3_1; }

		//Sensor
		public RuleCall getAccessControlSensorsSensorParserRuleCall_3_3_1_0() { return cAccessControlSensorsSensorParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
		//accessControlDoorLockActuator+=Actuator)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"accessControlDoorLockActuator"
		public Keyword getAccessControlDoorLockActuatorKeyword_4_0() { return cAccessControlDoorLockActuatorKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//accessControlDoorLockActuator+=Actuator
		public Assignment getAccessControlDoorLockActuatorAssignment_4_2() { return cAccessControlDoorLockActuatorAssignment_4_2; }

		//Actuator
		public RuleCall getAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0() { return cAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0; }

		//("," accessControlDoorLockActuator+=Actuator)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//accessControlDoorLockActuator+=Actuator
		public Assignment getAccessControlDoorLockActuatorAssignment_4_3_1() { return cAccessControlDoorLockActuatorAssignment_4_3_1; }

		//Actuator
		public RuleCall getAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0() { return cAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class CalendarSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CalendarSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCalendarSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCalendarSystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CalendarSystem:
		//	{CalendarSystem} "CalendarSystem";
		public ParserRule getRule() { return rule; }

		//{CalendarSystem} "CalendarSystem"
		public Group getGroup() { return cGroup; }

		//{CalendarSystem}
		public Action getCalendarSystemAction_0() { return cCalendarSystemAction_0; }

		//"CalendarSystem"
		public Keyword getCalendarSystemKeyword_1() { return cCalendarSystemKeyword_1; }
	}

	public class MeetingScheduleSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MeetingScheduleSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMeetingScheduleSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMeetingScheduleSystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MeetingScheduleSystem:
		//	{MeetingScheduleSystem} "MeetingScheduleSystem";
		public ParserRule getRule() { return rule; }

		//{MeetingScheduleSystem} "MeetingScheduleSystem"
		public Group getGroup() { return cGroup; }

		//{MeetingScheduleSystem}
		public Action getMeetingScheduleSystemAction_0() { return cMeetingScheduleSystemAction_0; }

		//"MeetingScheduleSystem"
		public Keyword getMeetingScheduleSystemKeyword_1() { return cMeetingScheduleSystemKeyword_1; }
	}

	public class FloorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Floor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFloorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFloorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cDeclareSensorsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cDeclareSensorsSensorComponentParserRuleCall_4_0_0 = (RuleCall)cDeclareSensorsAssignment_4_0.eContents().get(0);
		private final Assignment cDeclareSensorsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDeclareSensorsSensorComponentParserRuleCall_4_1_0 = (RuleCall)cDeclareSensorsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cDeclareActuatorsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cDeclareActuatorsActuatorComponentParserRuleCall_5_0_0 = (RuleCall)cDeclareActuatorsAssignment_5_0.eContents().get(0);
		private final Assignment cDeclareActuatorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDeclareActuatorsActuatorComponentParserRuleCall_5_1_0 = (RuleCall)cDeclareActuatorsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cRoomsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cRoomsRoomParserRuleCall_6_0_0 = (RuleCall)cRoomsAssignment_6_0.eContents().get(0);
		private final Assignment cRoomsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRoomsRoomParserRuleCall_6_1_0 = (RuleCall)cRoomsAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Floor:
		//	{Floor} "floor" name=EString "{" (declareSensors+=SensorComponent declareSensors+=SensorComponent*)?
		//	(declareActuators+=ActuatorComponent declareActuators+=ActuatorComponent*)? (rooms+=Room rooms+=Room*)? "}";
		public ParserRule getRule() { return rule; }

		//{Floor} "floor" name=EString "{" (declareSensors+=SensorComponent declareSensors+=SensorComponent*)?
		//(declareActuators+=ActuatorComponent declareActuators+=ActuatorComponent*)? (rooms+=Room rooms+=Room*)? "}"
		public Group getGroup() { return cGroup; }

		//{Floor}
		public Action getFloorAction_0() { return cFloorAction_0; }

		//"floor"
		public Keyword getFloorKeyword_1() { return cFloorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(declareSensors+=SensorComponent declareSensors+=SensorComponent*)?
		public Group getGroup_4() { return cGroup_4; }

		//declareSensors+=SensorComponent
		public Assignment getDeclareSensorsAssignment_4_0() { return cDeclareSensorsAssignment_4_0; }

		//SensorComponent
		public RuleCall getDeclareSensorsSensorComponentParserRuleCall_4_0_0() { return cDeclareSensorsSensorComponentParserRuleCall_4_0_0; }

		//declareSensors+=SensorComponent*
		public Assignment getDeclareSensorsAssignment_4_1() { return cDeclareSensorsAssignment_4_1; }

		//SensorComponent
		public RuleCall getDeclareSensorsSensorComponentParserRuleCall_4_1_0() { return cDeclareSensorsSensorComponentParserRuleCall_4_1_0; }

		//(declareActuators+=ActuatorComponent declareActuators+=ActuatorComponent*)?
		public Group getGroup_5() { return cGroup_5; }

		//declareActuators+=ActuatorComponent
		public Assignment getDeclareActuatorsAssignment_5_0() { return cDeclareActuatorsAssignment_5_0; }

		//ActuatorComponent
		public RuleCall getDeclareActuatorsActuatorComponentParserRuleCall_5_0_0() { return cDeclareActuatorsActuatorComponentParserRuleCall_5_0_0; }

		//declareActuators+=ActuatorComponent*
		public Assignment getDeclareActuatorsAssignment_5_1() { return cDeclareActuatorsAssignment_5_1; }

		//ActuatorComponent
		public RuleCall getDeclareActuatorsActuatorComponentParserRuleCall_5_1_0() { return cDeclareActuatorsActuatorComponentParserRuleCall_5_1_0; }

		//(rooms+=Room rooms+=Room*)?
		public Group getGroup_6() { return cGroup_6; }

		//rooms+=Room
		public Assignment getRoomsAssignment_6_0() { return cRoomsAssignment_6_0; }

		//Room
		public RuleCall getRoomsRoomParserRuleCall_6_0_0() { return cRoomsRoomParserRuleCall_6_0_0; }

		//rooms+=Room*
		public Assignment getRoomsAssignment_6_1() { return cRoomsAssignment_6_1; }

		//Room
		public RuleCall getRoomsRoomParserRuleCall_6_1_0() { return cRoomsRoomParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}

	public class SensorComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SensorComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSensorComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIsAKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cSensorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cSensorsSensorParserRuleCall_3_1_0 = (RuleCall)cSensorsAssignment_3_1.eContents().get(0);
		private final Assignment cSensorsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cSensorsSensorParserRuleCall_3_2_0 = (RuleCall)cSensorsAssignment_3_2.eContents().get(0);
		
		//SensorComponent:
		//	{SensorComponent} "sensor " name=EString ("is a " sensors+=Sensor sensors+=Sensor*)?;
		public ParserRule getRule() { return rule; }

		//{SensorComponent} "sensor " name=EString ("is a " sensors+=Sensor sensors+=Sensor*)?
		public Group getGroup() { return cGroup; }

		//{SensorComponent}
		public Action getSensorComponentAction_0() { return cSensorComponentAction_0; }

		//"sensor "
		public Keyword getSensorKeyword_1() { return cSensorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//("is a " sensors+=Sensor sensors+=Sensor*)?
		public Group getGroup_3() { return cGroup_3; }

		//"is a "
		public Keyword getIsAKeyword_3_0() { return cIsAKeyword_3_0; }

		//sensors+=Sensor
		public Assignment getSensorsAssignment_3_1() { return cSensorsAssignment_3_1; }

		//Sensor
		public RuleCall getSensorsSensorParserRuleCall_3_1_0() { return cSensorsSensorParserRuleCall_3_1_0; }

		//sensors+=Sensor*
		public Assignment getSensorsAssignment_3_2() { return cSensorsAssignment_3_2; }

		//Sensor
		public RuleCall getSensorsSensorParserRuleCall_3_2_0() { return cSensorsSensorParserRuleCall_3_2_0; }
	}

	public class ActuatorComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActuatorComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActuatorComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cIsAKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActuatorsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cActuatorsActuatorParserRuleCall_3_1_0 = (RuleCall)cActuatorsAssignment_3_1.eContents().get(0);
		private final Assignment cActuatorsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cActuatorsActuatorParserRuleCall_3_2_0 = (RuleCall)cActuatorsAssignment_3_2.eContents().get(0);
		
		//ActuatorComponent:
		//	{ActuatorComponent} "actuator" name=EString ("is a " actuators+=Actuator actuators+=Actuator*)?;
		public ParserRule getRule() { return rule; }

		//{ActuatorComponent} "actuator" name=EString ("is a " actuators+=Actuator actuators+=Actuator*)?
		public Group getGroup() { return cGroup; }

		//{ActuatorComponent}
		public Action getActuatorComponentAction_0() { return cActuatorComponentAction_0; }

		//"actuator"
		public Keyword getActuatorKeyword_1() { return cActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//("is a " actuators+=Actuator actuators+=Actuator*)?
		public Group getGroup_3() { return cGroup_3; }

		//"is a "
		public Keyword getIsAKeyword_3_0() { return cIsAKeyword_3_0; }

		//actuators+=Actuator
		public Assignment getActuatorsAssignment_3_1() { return cActuatorsAssignment_3_1; }

		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_3_1_0() { return cActuatorsActuatorParserRuleCall_3_1_0; }

		//actuators+=Actuator*
		public Assignment getActuatorsAssignment_3_2() { return cActuatorsAssignment_3_2; }

		//Actuator
		public RuleCall getActuatorsActuatorParserRuleCall_3_2_0() { return cActuatorsActuatorParserRuleCall_3_2_0; }
	}

	public class MotionSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MotionSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMotionSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMotionSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//MotionSensor:
		//	{MotionSensor} "MotionSensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{MotionSensor} "MotionSensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{MotionSensor}
		public Action getMotionSensorAction_0() { return cMotionSensorAction_0; }

		//"MotionSensor"
		public Keyword getMotionSensorKeyword_1() { return cMotionSensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class TemperatureSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TemperatureSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTemperatureSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTemperatureSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//TemperatureSensor:
		//	{TemperatureSensor} "TemperatureSensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{TemperatureSensor} "TemperatureSensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{TemperatureSensor}
		public Action getTemperatureSensorAction_0() { return cTemperatureSensorAction_0; }

		//"TemperatureSensor"
		public Keyword getTemperatureSensorKeyword_1() { return cTemperatureSensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class PressureSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PressureSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPressureSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPressureSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//PressureSensor:
		//	{PressureSensor} "PressureSensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{PressureSensor} "PressureSensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{PressureSensor}
		public Action getPressureSensorAction_0() { return cPressureSensorAction_0; }

		//"PressureSensor"
		public Keyword getPressureSensorKeyword_1() { return cPressureSensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class TouchSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TouchSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTouchSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTouchSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//TouchSensor:
		//	{TouchSensor} "TouchSensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{TouchSensor} "TouchSensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{TouchSensor}
		public Action getTouchSensorAction_0() { return cTouchSensorAction_0; }

		//"TouchSensor"
		public Keyword getTouchSensorKeyword_1() { return cTouchSensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class LightSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LightSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLightSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLightSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//LightSensor:
		//	{LightSensor} "LightSensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{LightSensor} "LightSensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{LightSensor}
		public Action getLightSensorAction_0() { return cLightSensorAction_0; }

		//"LightSensor"
		public Keyword getLightSensorKeyword_1() { return cLightSensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class SmokeSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SmokeSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSmokeSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSmokeSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//SmokeSensor:
		//	{SmokeSensor} "SmokeSensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{SmokeSensor} "SmokeSensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{SmokeSensor}
		public Action getSmokeSensorAction_0() { return cSmokeSensorAction_0; }

		//"SmokeSensor"
		public Keyword getSmokeSensorKeyword_1() { return cSmokeSensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class CO2SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CO2Sensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCO2SensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCO2SensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//CO2Sensor:
		//	{CO2Sensor} "CO2Sensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{CO2Sensor} "CO2Sensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{CO2Sensor}
		public Action getCO2SensorAction_0() { return cCO2SensorAction_0; }

		//"CO2Sensor"
		public Keyword getCO2SensorKeyword_1() { return cCO2SensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class InfraredLightSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InfraredLightSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInfraredLightSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInfraredLightSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//InfraredLightSensor:
		//	{InfraredLightSensor} "InfraredLightSensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{InfraredLightSensor} "InfraredLightSensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{InfraredLightSensor}
		public Action getInfraredLightSensorAction_0() { return cInfraredLightSensorAction_0; }

		//"InfraredLightSensor"
		public Keyword getInfraredLightSensorKeyword_1() { return cInfraredLightSensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class HasIntegerValue_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasIntegerValue_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHasIntegerValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHasIntegerValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//HasIntegerValue_Impl returns HasIntegerValue:
		//	{HasIntegerValue} "HasIntegerValue" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{HasIntegerValue} "HasIntegerValue" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{HasIntegerValue}
		public Action getHasIntegerValueAction_0() { return cHasIntegerValueAction_0; }

		//"HasIntegerValue"
		public Keyword getHasIntegerValueKeyword_1() { return cHasIntegerValueKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class HumiditySensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HumiditySensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHumiditySensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHumiditySensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//HumiditySensor:
		//	{HumiditySensor} "HumiditySensor" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{HumiditySensor} "HumiditySensor" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{HumiditySensor}
		public Action getHumiditySensorAction_0() { return cHumiditySensorAction_0; }

		//"HumiditySensor"
		public Keyword getHumiditySensorKeyword_1() { return cHumiditySensorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class LightSwitchActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LightSwitchActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLightSwitchActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLightSwitchActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//LightSwitchActuator:
		//	{LightSwitchActuator} "LightSwitchActuator" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{LightSwitchActuator} "LightSwitchActuator" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{LightSwitchActuator}
		public Action getLightSwitchActuatorAction_0() { return cLightSwitchActuatorAction_0; }

		//"LightSwitchActuator"
		public Keyword getLightSwitchActuatorKeyword_1() { return cLightSwitchActuatorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class WindowActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WindowActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWindowActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWindowActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//WindowActuator:
		//	{WindowActuator} "WindowActuator" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{WindowActuator} "WindowActuator" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{WindowActuator}
		public Action getWindowActuatorAction_0() { return cWindowActuatorAction_0; }

		//"WindowActuator"
		public Keyword getWindowActuatorKeyword_1() { return cWindowActuatorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class HumidifierActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HumidifierActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHumidifierActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHumidifierActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//HumidifierActuator:
		//	{HumidifierActuator} "HumidifierActuator" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{HumidifierActuator} "HumidifierActuator" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{HumidifierActuator}
		public Action getHumidifierActuatorAction_0() { return cHumidifierActuatorAction_0; }

		//"HumidifierActuator"
		public Keyword getHumidifierActuatorKeyword_1() { return cHumidifierActuatorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class DoorActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DoorActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDoorActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDoorActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//DoorActuator:
		//	{DoorActuator} "DoorActuator" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{DoorActuator} "DoorActuator" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{DoorActuator}
		public Action getDoorActuatorAction_0() { return cDoorActuatorAction_0; }

		//"DoorActuator"
		public Keyword getDoorActuatorKeyword_1() { return cDoorActuatorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class RadiatorActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RadiatorActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRadiatorActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRadiatorActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//RadiatorActuator:
		//	{RadiatorActuator} "RadiatorActuator" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{RadiatorActuator} "RadiatorActuator" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{RadiatorActuator}
		public Action getRadiatorActuatorAction_0() { return cRadiatorActuatorAction_0; }

		//"RadiatorActuator"
		public Keyword getRadiatorActuatorKeyword_1() { return cRadiatorActuatorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class AudioAlarmActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AudioAlarmActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAudioAlarmActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAudioAlarmActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//AudioAlarmActuator:
		//	{AudioAlarmActuator} "AudioAlarmActuator" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{AudioAlarmActuator} "AudioAlarmActuator" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{AudioAlarmActuator}
		public Action getAudioAlarmActuatorAction_0() { return cAudioAlarmActuatorAction_0; }

		//"AudioAlarmActuator"
		public Keyword getAudioAlarmActuatorKeyword_1() { return cAudioAlarmActuatorKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}

	public class HasIntValue_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasIntValue_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHasIntValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHasIntValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cValueStateKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Assignment cValueStateAssignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cValueStateEIntParserRuleCall_2_3_0 = (RuleCall)cValueStateAssignment_2_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		
		//HasIntValue_Impl returns HasIntValue:
		//	{HasIntValue} "HasIntValue" ("{" "valueState" "=" valueState=EInt "}")?;
		public ParserRule getRule() { return rule; }

		//{HasIntValue} "HasIntValue" ("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup() { return cGroup; }

		//{HasIntValue}
		public Action getHasIntValueAction_0() { return cHasIntValueAction_0; }

		//"HasIntValue"
		public Keyword getHasIntValueKeyword_1() { return cHasIntValueKeyword_1; }

		//("{" "valueState" "=" valueState=EInt "}")?
		public Group getGroup_2() { return cGroup_2; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2_0() { return cLeftCurlyBracketKeyword_2_0; }

		//"valueState"
		public Keyword getValueStateKeyword_2_1() { return cValueStateKeyword_2_1; }

		//"="
		public Keyword getEqualsSignKeyword_2_2() { return cEqualsSignKeyword_2_2; }

		//valueState=EInt
		public Assignment getValueStateAssignment_2_3() { return cValueStateAssignment_2_3; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_2_3_0() { return cValueStateEIntParserRuleCall_2_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2_4() { return cRightCurlyBracketKeyword_2_4; }
	}
	
	
	private ModelElements pModel;
	private ActuatorElements pActuator;
	private SensorElements pSensor;
	private EStringElements pEString;
	private BuildingElements pBuilding;
	private RoomElements pRoom;
	private StateElements pState;
	private CTSElements pCTS;
	private AccessControlElements pAccessControl;
	private CalendarSystemElements pCalendarSystem;
	private MeetingScheduleSystemElements pMeetingScheduleSystem;
	private FloorElements pFloor;
	private SensorComponentElements pSensorComponent;
	private ActuatorComponentElements pActuatorComponent;
	private MotionSensorElements pMotionSensor;
	private TemperatureSensorElements pTemperatureSensor;
	private PressureSensorElements pPressureSensor;
	private TouchSensorElements pTouchSensor;
	private LightSensorElements pLightSensor;
	private SmokeSensorElements pSmokeSensor;
	private CO2SensorElements pCO2Sensor;
	private InfraredLightSensorElements pInfraredLightSensor;
	private HasIntegerValue_ImplElements pHasIntegerValue_Impl;
	private HumiditySensorElements pHumiditySensor;
	private EIntElements pEInt;
	private LightSwitchActuatorElements pLightSwitchActuator;
	private WindowActuatorElements pWindowActuator;
	private HumidifierActuatorElements pHumidifierActuator;
	private DoorActuatorElements pDoorActuator;
	private RadiatorActuatorElements pRadiatorActuator;
	private AudioAlarmActuatorElements pAudioAlarmActuator;
	private HasIntValue_ImplElements pHasIntValue_Impl;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public PeDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("dk.itu.mdd.policyengine.PeDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	{Model} name=EString "{" (predefinedRooms+=Room predefinedRooms+=Room*)? (buildings+=Building buildings+=Building*)?
	//	(stateDefinition+=State stateDefinition+=State*)? "}";
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Actuator:
	//	LightSwitchActuator | WindowActuator | HumidifierActuator | DoorActuator | RadiatorActuator | AudioAlarmActuator |
	//	HasIntValue_Impl;
	public ActuatorElements getActuatorAccess() {
		return (pActuator != null) ? pActuator : (pActuator = new ActuatorElements());
	}
	
	public ParserRule getActuatorRule() {
		return getActuatorAccess().getRule();
	}

	//Sensor:
	//	MotionSensor | TemperatureSensor | PressureSensor | TouchSensor | LightSensor | SmokeSensor | CO2Sensor |
	//	InfraredLightSensor | HasIntegerValue_Impl | HumiditySensor;
	public SensorElements getSensorAccess() {
		return (pSensor != null) ? pSensor : (pSensor = new SensorElements());
	}
	
	public ParserRule getSensorRule() {
		return getSensorAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//Building:
	//	{Building} "building" name=EString "{" (declareSensors+=SensorComponent declareSensors+=SensorComponent*)?
	//	(declareActuators+=ActuatorComponent declareActuators+=ActuatorComponent*)? ctsSystem=CTS?
	//	accessControl=AccessControl? calendarSystem=CalendarSystem? meetingScheduleSystem=MeetingScheduleSystem?
	//	(floors+=Floor floors+=Floor*)? "}";
	public BuildingElements getBuildingAccess() {
		return (pBuilding != null) ? pBuilding : (pBuilding = new BuildingElements());
	}
	
	public ParserRule getBuildingRule() {
		return getBuildingAccess().getRule();
	}

	//Room:
	//	{Room} "room" name=EString ("is a " extends=[Room|EString])? "{" (declareSensor+=SensorComponent
	//	declareSensor+=SensorComponent*)? (declareActuator+=ActuatorComponent declareActuator+=ActuatorComponent*)? "}";
	public RoomElements getRoomAccess() {
		return (pRoom != null) ? pRoom : (pRoom = new RoomElements());
	}
	
	public ParserRule getRoomRule() {
		return getRoomAccess().getRule();
	}

	//State:
	//	{State} "State" name=EString ("uses " uses+=Actuator uses+=Actuator*)?;
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//CTS:
	//	{CTS} "CTS" "{" ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
	//	("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")? "}";
	public CTSElements getCTSAccess() {
		return (pCTS != null) ? pCTS : (pCTS = new CTSElements());
	}
	
	public ParserRule getCTSRule() {
		return getCTSAccess().getRule();
	}

	//AccessControl:
	//	{AccessControl} "AccessControl" "{" ("accessControlSensors" "{" accessControlSensors+=Sensor (","
	//	accessControlSensors+=Sensor)* "}")? ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
	//	accessControlDoorLockActuator+=Actuator)* "}")? "}";
	public AccessControlElements getAccessControlAccess() {
		return (pAccessControl != null) ? pAccessControl : (pAccessControl = new AccessControlElements());
	}
	
	public ParserRule getAccessControlRule() {
		return getAccessControlAccess().getRule();
	}

	//CalendarSystem:
	//	{CalendarSystem} "CalendarSystem";
	public CalendarSystemElements getCalendarSystemAccess() {
		return (pCalendarSystem != null) ? pCalendarSystem : (pCalendarSystem = new CalendarSystemElements());
	}
	
	public ParserRule getCalendarSystemRule() {
		return getCalendarSystemAccess().getRule();
	}

	//MeetingScheduleSystem:
	//	{MeetingScheduleSystem} "MeetingScheduleSystem";
	public MeetingScheduleSystemElements getMeetingScheduleSystemAccess() {
		return (pMeetingScheduleSystem != null) ? pMeetingScheduleSystem : (pMeetingScheduleSystem = new MeetingScheduleSystemElements());
	}
	
	public ParserRule getMeetingScheduleSystemRule() {
		return getMeetingScheduleSystemAccess().getRule();
	}

	//Floor:
	//	{Floor} "floor" name=EString "{" (declareSensors+=SensorComponent declareSensors+=SensorComponent*)?
	//	(declareActuators+=ActuatorComponent declareActuators+=ActuatorComponent*)? (rooms+=Room rooms+=Room*)? "}";
	public FloorElements getFloorAccess() {
		return (pFloor != null) ? pFloor : (pFloor = new FloorElements());
	}
	
	public ParserRule getFloorRule() {
		return getFloorAccess().getRule();
	}

	//SensorComponent:
	//	{SensorComponent} "sensor " name=EString ("is a " sensors+=Sensor sensors+=Sensor*)?;
	public SensorComponentElements getSensorComponentAccess() {
		return (pSensorComponent != null) ? pSensorComponent : (pSensorComponent = new SensorComponentElements());
	}
	
	public ParserRule getSensorComponentRule() {
		return getSensorComponentAccess().getRule();
	}

	//ActuatorComponent:
	//	{ActuatorComponent} "actuator" name=EString ("is a " actuators+=Actuator actuators+=Actuator*)?;
	public ActuatorComponentElements getActuatorComponentAccess() {
		return (pActuatorComponent != null) ? pActuatorComponent : (pActuatorComponent = new ActuatorComponentElements());
	}
	
	public ParserRule getActuatorComponentRule() {
		return getActuatorComponentAccess().getRule();
	}

	//MotionSensor:
	//	{MotionSensor} "MotionSensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public MotionSensorElements getMotionSensorAccess() {
		return (pMotionSensor != null) ? pMotionSensor : (pMotionSensor = new MotionSensorElements());
	}
	
	public ParserRule getMotionSensorRule() {
		return getMotionSensorAccess().getRule();
	}

	//TemperatureSensor:
	//	{TemperatureSensor} "TemperatureSensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public TemperatureSensorElements getTemperatureSensorAccess() {
		return (pTemperatureSensor != null) ? pTemperatureSensor : (pTemperatureSensor = new TemperatureSensorElements());
	}
	
	public ParserRule getTemperatureSensorRule() {
		return getTemperatureSensorAccess().getRule();
	}

	//PressureSensor:
	//	{PressureSensor} "PressureSensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public PressureSensorElements getPressureSensorAccess() {
		return (pPressureSensor != null) ? pPressureSensor : (pPressureSensor = new PressureSensorElements());
	}
	
	public ParserRule getPressureSensorRule() {
		return getPressureSensorAccess().getRule();
	}

	//TouchSensor:
	//	{TouchSensor} "TouchSensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public TouchSensorElements getTouchSensorAccess() {
		return (pTouchSensor != null) ? pTouchSensor : (pTouchSensor = new TouchSensorElements());
	}
	
	public ParserRule getTouchSensorRule() {
		return getTouchSensorAccess().getRule();
	}

	//LightSensor:
	//	{LightSensor} "LightSensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public LightSensorElements getLightSensorAccess() {
		return (pLightSensor != null) ? pLightSensor : (pLightSensor = new LightSensorElements());
	}
	
	public ParserRule getLightSensorRule() {
		return getLightSensorAccess().getRule();
	}

	//SmokeSensor:
	//	{SmokeSensor} "SmokeSensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public SmokeSensorElements getSmokeSensorAccess() {
		return (pSmokeSensor != null) ? pSmokeSensor : (pSmokeSensor = new SmokeSensorElements());
	}
	
	public ParserRule getSmokeSensorRule() {
		return getSmokeSensorAccess().getRule();
	}

	//CO2Sensor:
	//	{CO2Sensor} "CO2Sensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public CO2SensorElements getCO2SensorAccess() {
		return (pCO2Sensor != null) ? pCO2Sensor : (pCO2Sensor = new CO2SensorElements());
	}
	
	public ParserRule getCO2SensorRule() {
		return getCO2SensorAccess().getRule();
	}

	//InfraredLightSensor:
	//	{InfraredLightSensor} "InfraredLightSensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public InfraredLightSensorElements getInfraredLightSensorAccess() {
		return (pInfraredLightSensor != null) ? pInfraredLightSensor : (pInfraredLightSensor = new InfraredLightSensorElements());
	}
	
	public ParserRule getInfraredLightSensorRule() {
		return getInfraredLightSensorAccess().getRule();
	}

	//HasIntegerValue_Impl returns HasIntegerValue:
	//	{HasIntegerValue} "HasIntegerValue" ("{" "valueState" "=" valueState=EInt "}")?;
	public HasIntegerValue_ImplElements getHasIntegerValue_ImplAccess() {
		return (pHasIntegerValue_Impl != null) ? pHasIntegerValue_Impl : (pHasIntegerValue_Impl = new HasIntegerValue_ImplElements());
	}
	
	public ParserRule getHasIntegerValue_ImplRule() {
		return getHasIntegerValue_ImplAccess().getRule();
	}

	//HumiditySensor:
	//	{HumiditySensor} "HumiditySensor" ("{" "valueState" "=" valueState=EInt "}")?;
	public HumiditySensorElements getHumiditySensorAccess() {
		return (pHumiditySensor != null) ? pHumiditySensor : (pHumiditySensor = new HumiditySensorElements());
	}
	
	public ParserRule getHumiditySensorRule() {
		return getHumiditySensorAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return (pEInt != null) ? pEInt : (pEInt = new EIntElements());
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//LightSwitchActuator:
	//	{LightSwitchActuator} "LightSwitchActuator" ("{" "valueState" "=" valueState=EInt "}")?;
	public LightSwitchActuatorElements getLightSwitchActuatorAccess() {
		return (pLightSwitchActuator != null) ? pLightSwitchActuator : (pLightSwitchActuator = new LightSwitchActuatorElements());
	}
	
	public ParserRule getLightSwitchActuatorRule() {
		return getLightSwitchActuatorAccess().getRule();
	}

	//WindowActuator:
	//	{WindowActuator} "WindowActuator" ("{" "valueState" "=" valueState=EInt "}")?;
	public WindowActuatorElements getWindowActuatorAccess() {
		return (pWindowActuator != null) ? pWindowActuator : (pWindowActuator = new WindowActuatorElements());
	}
	
	public ParserRule getWindowActuatorRule() {
		return getWindowActuatorAccess().getRule();
	}

	//HumidifierActuator:
	//	{HumidifierActuator} "HumidifierActuator" ("{" "valueState" "=" valueState=EInt "}")?;
	public HumidifierActuatorElements getHumidifierActuatorAccess() {
		return (pHumidifierActuator != null) ? pHumidifierActuator : (pHumidifierActuator = new HumidifierActuatorElements());
	}
	
	public ParserRule getHumidifierActuatorRule() {
		return getHumidifierActuatorAccess().getRule();
	}

	//DoorActuator:
	//	{DoorActuator} "DoorActuator" ("{" "valueState" "=" valueState=EInt "}")?;
	public DoorActuatorElements getDoorActuatorAccess() {
		return (pDoorActuator != null) ? pDoorActuator : (pDoorActuator = new DoorActuatorElements());
	}
	
	public ParserRule getDoorActuatorRule() {
		return getDoorActuatorAccess().getRule();
	}

	//RadiatorActuator:
	//	{RadiatorActuator} "RadiatorActuator" ("{" "valueState" "=" valueState=EInt "}")?;
	public RadiatorActuatorElements getRadiatorActuatorAccess() {
		return (pRadiatorActuator != null) ? pRadiatorActuator : (pRadiatorActuator = new RadiatorActuatorElements());
	}
	
	public ParserRule getRadiatorActuatorRule() {
		return getRadiatorActuatorAccess().getRule();
	}

	//AudioAlarmActuator:
	//	{AudioAlarmActuator} "AudioAlarmActuator" ("{" "valueState" "=" valueState=EInt "}")?;
	public AudioAlarmActuatorElements getAudioAlarmActuatorAccess() {
		return (pAudioAlarmActuator != null) ? pAudioAlarmActuator : (pAudioAlarmActuator = new AudioAlarmActuatorElements());
	}
	
	public ParserRule getAudioAlarmActuatorRule() {
		return getAudioAlarmActuatorAccess().getRule();
	}

	//HasIntValue_Impl returns HasIntValue:
	//	{HasIntValue} "HasIntValue" ("{" "valueState" "=" valueState=EInt "}")?;
	public HasIntValue_ImplElements getHasIntValue_ImplAccess() {
		return (pHasIntValue_Impl != null) ? pHasIntValue_Impl : (pHasIntValue_Impl = new HasIntValue_ImplElements());
	}
	
	public ParserRule getHasIntValue_ImplRule() {
		return getHasIntValue_ImplAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
