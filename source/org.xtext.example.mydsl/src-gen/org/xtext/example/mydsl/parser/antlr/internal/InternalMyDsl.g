/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelAccess().getModelAction_0(),
            $current);
    }
)	otherlv_1='model' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getModelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='actuators' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getModelAccess().getActuatorsKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getActuatorsActuatorCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='sensors' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModelAccess().getSensorsKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getSensorsSensorCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDefineComponentsModelDefinedComponentsParserRuleCall_6_0_0()); 
	    }
		lv_defineComponents_8_0=ruleModelDefinedComponents		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"defineComponents",
        		lv_defineComponents_8_0, 
        		"ModelDefinedComponents");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getDefineComponentsModelDefinedComponentsParserRuleCall_6_1_0()); 
	    }
		lv_defineComponents_9_0=ruleModelDefinedComponents		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"defineComponents",
        		lv_defineComponents_9_0, 
        		"ModelDefinedComponents");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBuildingsBuildingParserRuleCall_7_0_0()); 
	    }
		lv_buildings_10_0=ruleBuilding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"buildings",
        		lv_buildings_10_0, 
        		"Building");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBuildingsBuildingParserRuleCall_7_1_0()); 
	    }
		lv_buildings_11_0=ruleBuilding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"buildings",
        		lv_buildings_11_0, 
        		"Building");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	 iv_ruleActuator=ruleActuator 
	 { $current=$iv_ruleActuator.current; } 
	 EOF 
;

// Rule Actuator
ruleActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getLightSwitchActuatorParserRuleCall_0()); 
    }
    this_LightSwitchActuator_0=ruleLightSwitchActuator
    { 
        $current = $this_LightSwitchActuator_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getWindowActuatorParserRuleCall_1()); 
    }
    this_WindowActuator_1=ruleWindowActuator
    { 
        $current = $this_WindowActuator_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getHumidifierActuatorParserRuleCall_2()); 
    }
    this_HumidifierActuator_2=ruleHumidifierActuator
    { 
        $current = $this_HumidifierActuator_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getDoorActuatorParserRuleCall_3()); 
    }
    this_DoorActuator_3=ruleDoorActuator
    { 
        $current = $this_DoorActuator_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getSMSActuatorParserRuleCall_4()); 
    }
    this_SMSActuator_4=ruleSMSActuator
    { 
        $current = $this_SMSActuator_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getRadiatorActuatorParserRuleCall_5()); 
    }
    this_RadiatorActuator_5=ruleRadiatorActuator
    { 
        $current = $this_RadiatorActuator_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getDatabaseActuatorParserRuleCall_6()); 
    }
    this_DatabaseActuator_6=ruleDatabaseActuator
    { 
        $current = $this_DatabaseActuator_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getAudioAlarmActuatorParserRuleCall_7()); 
    }
    this_AudioAlarmActuator_7=ruleAudioAlarmActuator
    { 
        $current = $this_AudioAlarmActuator_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getSetsOpenCloseState_ImplParserRuleCall_8()); 
    }
    this_SetsOpenCloseState_Impl_8=ruleSetsOpenCloseState_Impl
    { 
        $current = $this_SetsOpenCloseState_Impl_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getSetsOnOffState_ImplParserRuleCall_9()); 
    }
    this_SetsOnOffState_Impl_9=ruleSetsOnOffState_Impl
    { 
        $current = $this_SetsOnOffState_Impl_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActuatorAccess().getSetStringState_ImplParserRuleCall_10()); 
    }
    this_SetStringState_Impl_10=ruleSetStringState_Impl
    { 
        $current = $this_SetStringState_Impl_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	 iv_ruleSensor=ruleSensor 
	 { $current=$iv_ruleSensor.current; } 
	 EOF 
;

// Rule Sensor
ruleSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getMotionSensorParserRuleCall_0()); 
    }
    this_MotionSensor_0=ruleMotionSensor
    { 
        $current = $this_MotionSensor_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getTemperatureSensorParserRuleCall_1()); 
    }
    this_TemperatureSensor_1=ruleTemperatureSensor
    { 
        $current = $this_TemperatureSensor_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getPressureSensorParserRuleCall_2()); 
    }
    this_PressureSensor_2=rulePressureSensor
    { 
        $current = $this_PressureSensor_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getTouchSensorParserRuleCall_3()); 
    }
    this_TouchSensor_3=ruleTouchSensor
    { 
        $current = $this_TouchSensor_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getLightSensorParserRuleCall_4()); 
    }
    this_LightSensor_4=ruleLightSensor
    { 
        $current = $this_LightSensor_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getSmokeSensorParserRuleCall_5()); 
    }
    this_SmokeSensor_5=ruleSmokeSensor
    { 
        $current = $this_SmokeSensor_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getCO2SensorParserRuleCall_6()); 
    }
    this_CO2Sensor_6=ruleCO2Sensor
    { 
        $current = $this_CO2Sensor_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getInfraredLightSensorParserRuleCall_7()); 
    }
    this_InfraredLightSensor_7=ruleInfraredLightSensor
    { 
        $current = $this_InfraredLightSensor_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getHasIntegerValue_ImplParserRuleCall_8()); 
    }
    this_HasIntegerValue_Impl_8=ruleHasIntegerValue_Impl
    { 
        $current = $this_HasIntegerValue_Impl_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getHasBooleanValue_ImplParserRuleCall_9()); 
    }
    this_HasBooleanValue_Impl_9=ruleHasBooleanValue_Impl
    { 
        $current = $this_HasBooleanValue_Impl_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSensorAccess().getHumiditySensorParserRuleCall_10()); 
    }
    this_HumiditySensor_10=ruleHumiditySensor
    { 
        $current = $this_HumiditySensor_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleBuilding
entryRuleBuilding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBuildingRule()); }
	 iv_ruleBuilding=ruleBuilding 
	 { $current=$iv_ruleBuilding.current; } 
	 EOF 
;

// Rule Building
ruleBuilding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBuildingAccess().getBuildingAction_0(),
            $current);
    }
)	otherlv_1='dec' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBuildingAccess().getDecKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBuildingAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='actuators' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBuildingAccess().getActuatorsKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBuildingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getActuatorsActuatorCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='sensors' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBuildingAccess().getSensorsKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBuildingRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getSensorsSensorCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_8='ctsSystem' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBuildingAccess().getCtsSystemKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getCtsSystemCTSParserRuleCall_6_1_0()); 
	    }
		lv_ctsSystem_9_0=ruleCTS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"ctsSystem",
        		lv_ctsSystem_9_0, 
        		"CTS");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='accessControl' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBuildingAccess().getAccessControlKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getAccessControlAccessControlParserRuleCall_7_1_0()); 
	    }
		lv_accessControl_11_0=ruleAccessControl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"accessControl",
        		lv_accessControl_11_0, 
        		"AccessControl");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='calendarSystem' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBuildingAccess().getCalendarSystemKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getCalendarSystemCalendarSystemParserRuleCall_8_1_0()); 
	    }
		lv_calendarSystem_13_0=ruleCalendarSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"calendarSystem",
        		lv_calendarSystem_13_0, 
        		"CalendarSystem");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='meetingScheduleSystem' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBuildingAccess().getMeetingScheduleSystemKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_9_1_0()); 
	    }
		lv_meetingScheduleSystem_15_0=ruleMeetingScheduleSystem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		set(
       			$current, 
       			"meetingScheduleSystem",
        		lv_meetingScheduleSystem_15_0, 
        		"MeetingScheduleSystem");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getDeclareComponentsComponentParserRuleCall_10_0_0()); 
	    }
		lv_declareComponents_16_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		add(
       			$current, 
       			"declareComponents",
        		lv_declareComponents_16_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBuildingAccess().getDeclareComponentsComponentParserRuleCall_10_1_0()); 
	    }
		lv_declareComponents_17_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuildingRule());
	        }
       		add(
       			$current, 
       			"declareComponents",
        		lv_declareComponents_17_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getBuildingAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleModelDefinedComponents
entryRuleModelDefinedComponents returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelDefinedComponentsRule()); }
	 iv_ruleModelDefinedComponents=ruleModelDefinedComponents 
	 { $current=$iv_ruleModelDefinedComponents.current; } 
	 EOF 
;

// Rule ModelDefinedComponents
ruleModelDefinedComponents returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getModelDefinedComponentsAccess().getModelDefinedComponentsAction_0(),
            $current);
    }
)	otherlv_1='def' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelDefinedComponentsAccess().getDefKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelDefinedComponentsAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelDefinedComponentsRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelDefinedComponentsAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelDefinedComponentsAccess().getDeclareComponentsComponentParserRuleCall_4_0_0()); 
	    }
		lv_declareComponents_4_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelDefinedComponentsRule());
	        }
       		add(
       			$current, 
       			"declareComponents",
        		lv_declareComponents_4_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModelDefinedComponentsAccess().getDeclareComponentsComponentParserRuleCall_4_1_0()); 
	    }
		lv_declareComponents_5_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelDefinedComponentsRule());
	        }
       		add(
       			$current, 
       			"declareComponents",
        		lv_declareComponents_5_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getModelDefinedComponentsAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleLightSwitchActuator
entryRuleLightSwitchActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLightSwitchActuatorRule()); }
	 iv_ruleLightSwitchActuator=ruleLightSwitchActuator 
	 { $current=$iv_ruleLightSwitchActuator.current; } 
	 EOF 
;

// Rule LightSwitchActuator
ruleLightSwitchActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorAction_0(),
            $current);
    }
)	otherlv_1='LightSwitchActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLightSwitchActuatorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLightSwitchActuatorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLightSwitchActuatorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLightSwitchActuatorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLightSwitchActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleOnOff		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLightSwitchActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"OnOff");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLightSwitchActuatorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleWindowActuator
entryRuleWindowActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWindowActuatorRule()); }
	 iv_ruleWindowActuator=ruleWindowActuator 
	 { $current=$iv_ruleWindowActuator.current; } 
	 EOF 
;

// Rule WindowActuator
ruleWindowActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getWindowActuatorAccess().getWindowActuatorAction_0(),
            $current);
    }
)	otherlv_1='WindowActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWindowActuatorAccess().getWindowActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWindowActuatorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWindowActuatorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWindowActuatorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWindowActuatorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWindowActuatorAccess().getValueStateOpenCloseParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleOpenClose		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWindowActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"OpenClose");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getWindowActuatorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleHumidifierActuator
entryRuleHumidifierActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHumidifierActuatorRule()); }
	 iv_ruleHumidifierActuator=ruleHumidifierActuator 
	 { $current=$iv_ruleHumidifierActuator.current; } 
	 EOF 
;

// Rule HumidifierActuator
ruleHumidifierActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorAction_0(),
            $current);
    }
)	otherlv_1='HumidifierActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHumidifierActuatorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHumidifierActuatorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHumidifierActuatorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHumidifierActuatorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHumidifierActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleOnOff		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHumidifierActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"OnOff");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHumidifierActuatorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDoorActuator
entryRuleDoorActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoorActuatorRule()); }
	 iv_ruleDoorActuator=ruleDoorActuator 
	 { $current=$iv_ruleDoorActuator.current; } 
	 EOF 
;

// Rule DoorActuator
ruleDoorActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDoorActuatorAccess().getDoorActuatorAction_0(),
            $current);
    }
)	otherlv_1='DoorActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDoorActuatorAccess().getDoorActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoorActuatorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoorActuatorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDoorActuatorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDoorActuatorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoorActuatorAccess().getValueStateOpenCloseParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleOpenClose		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoorActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"OpenClose");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDoorActuatorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSMSActuator
entryRuleSMSActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSMSActuatorRule()); }
	 iv_ruleSMSActuator=ruleSMSActuator 
	 { $current=$iv_ruleSMSActuator.current; } 
	 EOF 
;

// Rule SMSActuator
ruleSMSActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSMSActuatorAccess().getSMSActuatorAction_0(),
            $current);
    }
)	otherlv_1='SMSActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSMSActuatorAccess().getSMSActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSMSActuatorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSMSActuatorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSMSActuatorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSMSActuatorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSMSActuatorAccess().getValueStateEStringParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSMSActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSMSActuatorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleRadiatorActuator
entryRuleRadiatorActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRadiatorActuatorRule()); }
	 iv_ruleRadiatorActuator=ruleRadiatorActuator 
	 { $current=$iv_ruleRadiatorActuator.current; } 
	 EOF 
;

// Rule RadiatorActuator
ruleRadiatorActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorAction_0(),
            $current);
    }
)	otherlv_1='RadiatorActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRadiatorActuatorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadiatorActuatorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRadiatorActuatorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRadiatorActuatorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRadiatorActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleOnOff		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRadiatorActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"OnOff");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRadiatorActuatorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDatabaseActuator
entryRuleDatabaseActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatabaseActuatorRule()); }
	 iv_ruleDatabaseActuator=ruleDatabaseActuator 
	 { $current=$iv_ruleDatabaseActuator.current; } 
	 EOF 
;

// Rule DatabaseActuator
ruleDatabaseActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDatabaseActuatorAccess().getDatabaseActuatorAction_0(),
            $current);
    }
)	otherlv_1='DatabaseActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDatabaseActuatorAccess().getDatabaseActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabaseActuatorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabaseActuatorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDatabaseActuatorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDatabaseActuatorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatabaseActuatorAccess().getValueStateEStringParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatabaseActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDatabaseActuatorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAudioAlarmActuator
entryRuleAudioAlarmActuator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAudioAlarmActuatorRule()); }
	 iv_ruleAudioAlarmActuator=ruleAudioAlarmActuator 
	 { $current=$iv_ruleAudioAlarmActuator.current; } 
	 EOF 
;

// Rule AudioAlarmActuator
ruleAudioAlarmActuator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorAction_0(),
            $current);
    }
)	otherlv_1='AudioAlarmActuator' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAudioAlarmActuatorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAudioAlarmActuatorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAudioAlarmActuatorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAudioAlarmActuatorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAudioAlarmActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleOnOff		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAudioAlarmActuatorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"OnOff");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAudioAlarmActuatorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSetsOpenCloseState_Impl
entryRuleSetsOpenCloseState_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetsOpenCloseState_ImplRule()); }
	 iv_ruleSetsOpenCloseState_Impl=ruleSetsOpenCloseState_Impl 
	 { $current=$iv_ruleSetsOpenCloseState_Impl.current; } 
	 EOF 
;

// Rule SetsOpenCloseState_Impl
ruleSetsOpenCloseState_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSetsOpenCloseState_ImplAccess().getSetsOpenCloseStateAction_0(),
            $current);
    }
)	otherlv_1='SetsOpenCloseState' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetsOpenCloseState_ImplAccess().getSetsOpenCloseStateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetsOpenCloseState_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetsOpenCloseState_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetsOpenCloseState_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetsOpenCloseState_ImplAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetsOpenCloseState_ImplAccess().getValueStateOpenCloseParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleOpenClose		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetsOpenCloseState_ImplRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"OpenClose");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetsOpenCloseState_ImplAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSetsOnOffState_Impl
entryRuleSetsOnOffState_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetsOnOffState_ImplRule()); }
	 iv_ruleSetsOnOffState_Impl=ruleSetsOnOffState_Impl 
	 { $current=$iv_ruleSetsOnOffState_Impl.current; } 
	 EOF 
;

// Rule SetsOnOffState_Impl
ruleSetsOnOffState_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSetsOnOffState_ImplAccess().getSetsOnOffStateAction_0(),
            $current);
    }
)	otherlv_1='SetsOnOffState' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetsOnOffState_ImplAccess().getSetsOnOffStateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetsOnOffState_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetsOnOffState_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetsOnOffState_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetsOnOffState_ImplAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetsOnOffState_ImplAccess().getValueStateOnOffParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleOnOff		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetsOnOffState_ImplRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"OnOff");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetsOnOffState_ImplAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSetStringState_Impl
entryRuleSetStringState_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSetStringState_ImplRule()); }
	 iv_ruleSetStringState_Impl=ruleSetStringState_Impl 
	 { $current=$iv_ruleSetStringState_Impl.current; } 
	 EOF 
;

// Rule SetStringState_Impl
ruleSetStringState_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSetStringState_ImplAccess().getSetStringStateAction_0(),
            $current);
    }
)	otherlv_1='SetStringState' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSetStringState_ImplAccess().getSetStringStateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetStringState_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetStringState_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSetStringState_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSetStringState_ImplAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSetStringState_ImplAccess().getValueStateEStringParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSetStringState_ImplRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSetStringState_ImplAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleOnOff
entryRuleOnOff returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOnOffRule()); } 
	 iv_ruleOnOff=ruleOnOff 
	 { $current=$iv_ruleOnOff.current.getText(); }  
	 EOF 
;

// Rule OnOff
ruleOnOff returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='OnOff' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOnOffAccess().getOnOffKeyword()); 
    }

    ;





// Entry rule entryRuleOpenClose
entryRuleOpenClose returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpenCloseRule()); } 
	 iv_ruleOpenClose=ruleOpenClose 
	 { $current=$iv_ruleOpenClose.current.getText(); }  
	 EOF 
;

// Rule OpenClose
ruleOpenClose returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='OpenClose' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getOpenCloseAccess().getOpenCloseKeyword()); 
    }

    ;





// Entry rule entryRuleMotionSensor
entryRuleMotionSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMotionSensorRule()); }
	 iv_ruleMotionSensor=ruleMotionSensor 
	 { $current=$iv_ruleMotionSensor.current; } 
	 EOF 
;

// Rule MotionSensor
ruleMotionSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMotionSensorAccess().getMotionSensorAction_0(),
            $current);
    }
)(
(
		lv_valueState_1_0=	'valueState' 
    {
        newLeafNode(lv_valueState_1_0, grammarAccess.getMotionSensorAccess().getValueStateValueStateKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMotionSensorRule());
	        }
       		setWithLastConsumed($current, "valueState", true, "valueState");
	    }

)
)?	otherlv_2='MotionSensor' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMotionSensorAccess().getMotionSensorKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMotionSensorAccess().getNameEStringParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMotionSensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTemperatureSensor
entryRuleTemperatureSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemperatureSensorRule()); }
	 iv_ruleTemperatureSensor=ruleTemperatureSensor 
	 { $current=$iv_ruleTemperatureSensor.current; } 
	 EOF 
;

// Rule TemperatureSensor
ruleTemperatureSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTemperatureSensorAccess().getTemperatureSensorAction_0(),
            $current);
    }
)	otherlv_1='TemperatureSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemperatureSensorAccess().getTemperatureSensorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemperatureSensorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemperatureSensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTemperatureSensorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemperatureSensorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemperatureSensorAccess().getValueStateEIntParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemperatureSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTemperatureSensorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulePressureSensor
entryRulePressureSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPressureSensorRule()); }
	 iv_rulePressureSensor=rulePressureSensor 
	 { $current=$iv_rulePressureSensor.current; } 
	 EOF 
;

// Rule PressureSensor
rulePressureSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPressureSensorAccess().getPressureSensorAction_0(),
            $current);
    }
)	otherlv_1='PressureSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPressureSensorAccess().getPressureSensorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPressureSensorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPressureSensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPressureSensorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPressureSensorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPressureSensorAccess().getValueStateEIntParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPressureSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPressureSensorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleTouchSensor
entryRuleTouchSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTouchSensorRule()); }
	 iv_ruleTouchSensor=ruleTouchSensor 
	 { $current=$iv_ruleTouchSensor.current; } 
	 EOF 
;

// Rule TouchSensor
ruleTouchSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTouchSensorAccess().getTouchSensorAction_0(),
            $current);
    }
)(
(
		lv_valueState_1_0=	'valueState' 
    {
        newLeafNode(lv_valueState_1_0, grammarAccess.getTouchSensorAccess().getValueStateValueStateKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTouchSensorRule());
	        }
       		setWithLastConsumed($current, "valueState", true, "valueState");
	    }

)
)?	otherlv_2='TouchSensor' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTouchSensorAccess().getTouchSensorKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTouchSensorAccess().getNameEStringParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTouchSensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLightSensor
entryRuleLightSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLightSensorRule()); }
	 iv_ruleLightSensor=ruleLightSensor 
	 { $current=$iv_ruleLightSensor.current; } 
	 EOF 
;

// Rule LightSensor
ruleLightSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLightSensorAccess().getLightSensorAction_0(),
            $current);
    }
)	otherlv_1='LightSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLightSensorAccess().getLightSensorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLightSensorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLightSensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLightSensorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLightSensorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLightSensorAccess().getValueStateEIntParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLightSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLightSensorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSmokeSensor
entryRuleSmokeSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSmokeSensorRule()); }
	 iv_ruleSmokeSensor=ruleSmokeSensor 
	 { $current=$iv_ruleSmokeSensor.current; } 
	 EOF 
;

// Rule SmokeSensor
ruleSmokeSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSmokeSensorAccess().getSmokeSensorAction_0(),
            $current);
    }
)	otherlv_1='SmokeSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSmokeSensorAccess().getSmokeSensorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmokeSensorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmokeSensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSmokeSensorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSmokeSensorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSmokeSensorAccess().getValueStateEIntParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSmokeSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSmokeSensorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCO2Sensor
entryRuleCO2Sensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCO2SensorRule()); }
	 iv_ruleCO2Sensor=ruleCO2Sensor 
	 { $current=$iv_ruleCO2Sensor.current; } 
	 EOF 
;

// Rule CO2Sensor
ruleCO2Sensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCO2SensorAccess().getCO2SensorAction_0(),
            $current);
    }
)	otherlv_1='CO2Sensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCO2SensorAccess().getCO2SensorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCO2SensorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCO2SensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCO2SensorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCO2SensorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCO2SensorAccess().getValueStateEIntParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCO2SensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCO2SensorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleInfraredLightSensor
entryRuleInfraredLightSensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInfraredLightSensorRule()); }
	 iv_ruleInfraredLightSensor=ruleInfraredLightSensor 
	 { $current=$iv_ruleInfraredLightSensor.current; } 
	 EOF 
;

// Rule InfraredLightSensor
ruleInfraredLightSensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorAction_0(),
            $current);
    }
)	otherlv_1='InfraredLightSensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfraredLightSensorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfraredLightSensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInfraredLightSensorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInfraredLightSensorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInfraredLightSensorAccess().getValueStateEIntParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInfraredLightSensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInfraredLightSensorAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleHasIntegerValue_Impl
entryRuleHasIntegerValue_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasIntegerValue_ImplRule()); }
	 iv_ruleHasIntegerValue_Impl=ruleHasIntegerValue_Impl 
	 { $current=$iv_ruleHasIntegerValue_Impl.current; } 
	 EOF 
;

// Rule HasIntegerValue_Impl
ruleHasIntegerValue_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHasIntegerValue_ImplAccess().getHasIntegerValueAction_0(),
            $current);
    }
)	otherlv_1='HasIntegerValue' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHasIntegerValue_ImplAccess().getHasIntegerValueKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHasIntegerValue_ImplAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasIntegerValue_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHasIntegerValue_ImplAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHasIntegerValue_ImplAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHasIntegerValue_ImplAccess().getValueStateEIntParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasIntegerValue_ImplRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHasIntegerValue_ImplAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleHasBooleanValue_Impl
entryRuleHasBooleanValue_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHasBooleanValue_ImplRule()); }
	 iv_ruleHasBooleanValue_Impl=ruleHasBooleanValue_Impl 
	 { $current=$iv_ruleHasBooleanValue_Impl.current; } 
	 EOF 
;

// Rule HasBooleanValue_Impl
ruleHasBooleanValue_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHasBooleanValue_ImplAccess().getHasBooleanValueAction_0(),
            $current);
    }
)(
(
		lv_valueState_1_0=	'valueState' 
    {
        newLeafNode(lv_valueState_1_0, grammarAccess.getHasBooleanValue_ImplAccess().getValueStateValueStateKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHasBooleanValue_ImplRule());
	        }
       		setWithLastConsumed($current, "valueState", true, "valueState");
	    }

)
)?	otherlv_2='HasBooleanValue' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHasBooleanValue_ImplAccess().getHasBooleanValueKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHasBooleanValue_ImplAccess().getNameEStringParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHasBooleanValue_ImplRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleHumiditySensor
entryRuleHumiditySensor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHumiditySensorRule()); }
	 iv_ruleHumiditySensor=ruleHumiditySensor 
	 { $current=$iv_ruleHumiditySensor.current; } 
	 EOF 
;

// Rule HumiditySensor
ruleHumiditySensor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getHumiditySensorAccess().getHumiditySensorAction_0(),
            $current);
    }
)	otherlv_1='HumiditySensor' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHumiditySensorAccess().getHumiditySensorKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHumiditySensorAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHumiditySensorRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHumiditySensorAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='valueState' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHumiditySensorAccess().getValueStateKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHumiditySensorAccess().getValueStateEIntParserRuleCall_4_1_0()); 
	    }
		lv_valueState_5_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHumiditySensorRule());
	        }
       		set(
       			$current, 
       			"valueState",
        		lv_valueState_5_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getHumiditySensorAccess().getRightCurlyBracketKeyword_5());
    }
)
;







// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleCTS
entryRuleCTS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCTSRule()); }
	 iv_ruleCTS=ruleCTS 
	 { $current=$iv_ruleCTS.current; } 
	 EOF 
;

// Rule CTS
ruleCTS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCTSAccess().getCTSAction_0(),
            $current);
    }
)	otherlv_1='CTS' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCTSAccess().getCTSKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='temperatureSensors' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCTSAccess().getTemperatureSensorsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCTSAccess().getTemperatureSensorsSensorParserRuleCall_3_2_0()); 
	    }
		lv_temperatureSensors_5_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCTSRule());
	        }
       		add(
       			$current, 
       			"temperatureSensors",
        		lv_temperatureSensors_5_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCTSAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCTSAccess().getTemperatureSensorsSensorParserRuleCall_3_3_1_0()); 
	    }
		lv_temperatureSensors_7_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCTSRule());
	        }
       		add(
       			$current, 
       			"temperatureSensors",
        		lv_temperatureSensors_7_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='ctsActuators' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCTSAccess().getCtsActuatorsKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCTSAccess().getCtsActuatorsActuatorParserRuleCall_4_2_0()); 
	    }
		lv_ctsActuators_11_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCTSRule());
	        }
       		add(
       			$current, 
       			"ctsActuators",
        		lv_ctsActuators_11_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCTSAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCTSAccess().getCtsActuatorsActuatorParserRuleCall_4_3_1_0()); 
	    }
		lv_ctsActuators_13_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCTSRule());
	        }
       		add(
       			$current, 
       			"ctsActuators",
        		lv_ctsActuators_13_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_4_4());
    }
)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAccessControl
entryRuleAccessControl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAccessControlRule()); }
	 iv_ruleAccessControl=ruleAccessControl 
	 { $current=$iv_ruleAccessControl.current; } 
	 EOF 
;

// Rule AccessControl
ruleAccessControl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAccessControlAccess().getAccessControlAction_0(),
            $current);
    }
)	otherlv_1='AccessControl' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAccessControlAccess().getAccessControlKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='accessControlSensors' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAccessControlAccess().getAccessControlSensorsKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessControlAccess().getAccessControlSensorsSensorParserRuleCall_3_2_0()); 
	    }
		lv_accessControlSensors_5_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessControlRule());
	        }
       		add(
       			$current, 
       			"accessControlSensors",
        		lv_accessControlSensors_5_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAccessControlAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessControlAccess().getAccessControlSensorsSensorParserRuleCall_3_3_1_0()); 
	    }
		lv_accessControlSensors_7_0=ruleSensor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessControlRule());
	        }
       		add(
       			$current, 
       			"accessControlSensors",
        		lv_accessControlSensors_7_0, 
        		"Sensor");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_3_4());
    }
)?(	otherlv_9='accessControlDoorLockActuator' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorKeyword_4_0());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0()); 
	    }
		lv_accessControlDoorLockActuator_11_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessControlRule());
	        }
       		add(
       			$current, 
       			"accessControlDoorLockActuator",
        		lv_accessControlDoorLockActuator_11_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAccessControlAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0()); 
	    }
		lv_accessControlDoorLockActuator_13_0=ruleActuator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAccessControlRule());
	        }
       		add(
       			$current, 
       			"accessControlDoorLockActuator",
        		lv_accessControlDoorLockActuator_13_0, 
        		"Actuator");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_4_4());
    }
)?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCalendarSystem
entryRuleCalendarSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCalendarSystemRule()); }
	 iv_ruleCalendarSystem=ruleCalendarSystem 
	 { $current=$iv_ruleCalendarSystem.current; } 
	 EOF 
;

// Rule CalendarSystem
ruleCalendarSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCalendarSystemAccess().getCalendarSystemAction_0(),
            $current);
    }
)	otherlv_1='CalendarSystem' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCalendarSystemAccess().getCalendarSystemKeyword_1());
    }
)
;





// Entry rule entryRuleMeetingScheduleSystem
entryRuleMeetingScheduleSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMeetingScheduleSystemRule()); }
	 iv_ruleMeetingScheduleSystem=ruleMeetingScheduleSystem 
	 { $current=$iv_ruleMeetingScheduleSystem.current; } 
	 EOF 
;

// Rule MeetingScheduleSystem
ruleMeetingScheduleSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMeetingScheduleSystemAccess().getMeetingScheduleSystemAction_0(),
            $current);
    }
)	otherlv_1='MeetingScheduleSystem' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMeetingScheduleSystemAccess().getMeetingScheduleSystemKeyword_1());
    }
)
;





// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	 iv_ruleComponent=ruleComponent 
	 { $current=$iv_ruleComponent.current; } 
	 EOF 
;

// Rule Component
ruleComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getComponentAccess().getComponentAction_0(),
            $current);
    }
)	otherlv_1='dec' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getDecKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='sensors' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getSensorsKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getSensorsSensorCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='actuators' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getComponentAccess().getActuatorsKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getActuatorsActuatorCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getDeclareComponentsComponentParserRuleCall_6_0_0()); 
	    }
		lv_declareComponents_8_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"declareComponents",
        		lv_declareComponents_8_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getDeclareComponentsComponentParserRuleCall_6_1_0()); 
	    }
		lv_declareComponents_9_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"declareComponents",
        		lv_declareComponents_9_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_10=':' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getComponentAccess().getColonKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getExtendsComponentParserRuleCall_7_1_0()); 
	    }
		lv_extends_11_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"extends",
        		lv_extends_11_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getExtendsComponentParserRuleCall_7_2_0()); 
	    }
		lv_extends_12_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"extends",
        		lv_extends_12_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_8());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


