/*
* generated by Xtext
*/

package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cActuatorsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActuatorsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cActuatorsActuatorCrossReference_4_1_0 = (CrossReference)cActuatorsAssignment_4_1.eContents().get(0);
		private final RuleCall cActuatorsActuatorEStringParserRuleCall_4_1_0_1 = (RuleCall)cActuatorsActuatorCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSensorsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSensorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSensorsSensorCrossReference_5_1_0 = (CrossReference)cSensorsAssignment_5_1.eContents().get(0);
		private final RuleCall cSensorsSensorEStringParserRuleCall_5_1_0_1 = (RuleCall)cSensorsSensorCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cDefineComponentsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cDefineComponentsModelDefinedComponentsParserRuleCall_6_0_0 = (RuleCall)cDefineComponentsAssignment_6_0.eContents().get(0);
		private final Assignment cDefineComponentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDefineComponentsModelDefinedComponentsParserRuleCall_6_1_0 = (RuleCall)cDefineComponentsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Assignment cBuildingsAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final RuleCall cBuildingsBuildingParserRuleCall_7_0_0 = (RuleCall)cBuildingsAssignment_7_0.eContents().get(0);
		private final Assignment cBuildingsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cBuildingsBuildingParserRuleCall_7_1_0 = (RuleCall)cBuildingsAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Model:
		//	{Model} "model" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
		//	(defineComponents+=ModelDefinedComponents defineComponents+=ModelDefinedComponents*)? (buildings+=Building
		//	buildings+=Building*)? "}";
		public ParserRule getRule() { return rule; }

		//{Model} "model" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
		//(defineComponents+=ModelDefinedComponents defineComponents+=ModelDefinedComponents*)? (buildings+=Building
		//buildings+=Building*)? "}"
		public Group getGroup() { return cGroup; }

		//{Model}
		public Action getModelAction_0() { return cModelAction_0; }

		//"model"
		public Keyword getModelKeyword_1() { return cModelKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("actuators" actuators=[Actuator|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"actuators"
		public Keyword getActuatorsKeyword_4_0() { return cActuatorsKeyword_4_0; }

		//actuators=[Actuator|EString]
		public Assignment getActuatorsAssignment_4_1() { return cActuatorsAssignment_4_1; }

		//[Actuator|EString]
		public CrossReference getActuatorsActuatorCrossReference_4_1_0() { return cActuatorsActuatorCrossReference_4_1_0; }

		//EString
		public RuleCall getActuatorsActuatorEStringParserRuleCall_4_1_0_1() { return cActuatorsActuatorEStringParserRuleCall_4_1_0_1; }

		//("sensors" sensors=[Sensor|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"sensors"
		public Keyword getSensorsKeyword_5_0() { return cSensorsKeyword_5_0; }

		//sensors=[Sensor|EString]
		public Assignment getSensorsAssignment_5_1() { return cSensorsAssignment_5_1; }

		//[Sensor|EString]
		public CrossReference getSensorsSensorCrossReference_5_1_0() { return cSensorsSensorCrossReference_5_1_0; }

		//EString
		public RuleCall getSensorsSensorEStringParserRuleCall_5_1_0_1() { return cSensorsSensorEStringParserRuleCall_5_1_0_1; }

		//(defineComponents+=ModelDefinedComponents defineComponents+=ModelDefinedComponents*)?
		public Group getGroup_6() { return cGroup_6; }

		//defineComponents+=ModelDefinedComponents
		public Assignment getDefineComponentsAssignment_6_0() { return cDefineComponentsAssignment_6_0; }

		//ModelDefinedComponents
		public RuleCall getDefineComponentsModelDefinedComponentsParserRuleCall_6_0_0() { return cDefineComponentsModelDefinedComponentsParserRuleCall_6_0_0; }

		//defineComponents+=ModelDefinedComponents*
		public Assignment getDefineComponentsAssignment_6_1() { return cDefineComponentsAssignment_6_1; }

		//ModelDefinedComponents
		public RuleCall getDefineComponentsModelDefinedComponentsParserRuleCall_6_1_0() { return cDefineComponentsModelDefinedComponentsParserRuleCall_6_1_0; }

		//(buildings+=Building buildings+=Building*)?
		public Group getGroup_7() { return cGroup_7; }

		//buildings+=Building
		public Assignment getBuildingsAssignment_7_0() { return cBuildingsAssignment_7_0; }

		//Building
		public RuleCall getBuildingsBuildingParserRuleCall_7_0_0() { return cBuildingsBuildingParserRuleCall_7_0_0; }

		//buildings+=Building*
		public Assignment getBuildingsAssignment_7_1() { return cBuildingsAssignment_7_1; }

		//Building
		public RuleCall getBuildingsBuildingParserRuleCall_7_1_0() { return cBuildingsBuildingParserRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Actuator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLightSwitchActuatorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWindowActuatorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cHumidifierActuatorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDoorActuatorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSMSActuatorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRadiatorActuatorParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDatabaseActuatorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cAudioAlarmActuatorParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cSetsOpenCloseState_ImplParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cSetsOnOffState_ImplParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cSetStringState_ImplParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//Actuator:
		//	LightSwitchActuator | WindowActuator | HumidifierActuator | DoorActuator | SMSActuator | RadiatorActuator |
		//	DatabaseActuator | AudioAlarmActuator | SetsOpenCloseState_Impl | SetsOnOffState_Impl | SetStringState_Impl;
		public ParserRule getRule() { return rule; }

		//LightSwitchActuator | WindowActuator | HumidifierActuator | DoorActuator | SMSActuator | RadiatorActuator |
		//DatabaseActuator | AudioAlarmActuator | SetsOpenCloseState_Impl | SetsOnOffState_Impl | SetStringState_Impl
		public Alternatives getAlternatives() { return cAlternatives; }

		//LightSwitchActuator
		public RuleCall getLightSwitchActuatorParserRuleCall_0() { return cLightSwitchActuatorParserRuleCall_0; }

		//WindowActuator
		public RuleCall getWindowActuatorParserRuleCall_1() { return cWindowActuatorParserRuleCall_1; }

		//HumidifierActuator
		public RuleCall getHumidifierActuatorParserRuleCall_2() { return cHumidifierActuatorParserRuleCall_2; }

		//DoorActuator
		public RuleCall getDoorActuatorParserRuleCall_3() { return cDoorActuatorParserRuleCall_3; }

		//SMSActuator
		public RuleCall getSMSActuatorParserRuleCall_4() { return cSMSActuatorParserRuleCall_4; }

		//RadiatorActuator
		public RuleCall getRadiatorActuatorParserRuleCall_5() { return cRadiatorActuatorParserRuleCall_5; }

		//DatabaseActuator
		public RuleCall getDatabaseActuatorParserRuleCall_6() { return cDatabaseActuatorParserRuleCall_6; }

		//AudioAlarmActuator
		public RuleCall getAudioAlarmActuatorParserRuleCall_7() { return cAudioAlarmActuatorParserRuleCall_7; }

		//SetsOpenCloseState_Impl
		public RuleCall getSetsOpenCloseState_ImplParserRuleCall_8() { return cSetsOpenCloseState_ImplParserRuleCall_8; }

		//SetsOnOffState_Impl
		public RuleCall getSetsOnOffState_ImplParserRuleCall_9() { return cSetsOnOffState_ImplParserRuleCall_9; }

		//SetStringState_Impl
		public RuleCall getSetStringState_ImplParserRuleCall_10() { return cSetStringState_ImplParserRuleCall_10; }
	}

	public class SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Sensor");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMotionSensorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTemperatureSensorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPressureSensorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTouchSensorParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLightSensorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cSmokeSensorParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCO2SensorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cInfraredLightSensorParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cHasIntegerValue_ImplParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cHasBooleanValue_ImplParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cHumiditySensorParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//Sensor:
		//	MotionSensor | TemperatureSensor | PressureSensor | TouchSensor | LightSensor | SmokeSensor | CO2Sensor |
		//	InfraredLightSensor | HasIntegerValue_Impl | HasBooleanValue_Impl | HumiditySensor;
		public ParserRule getRule() { return rule; }

		//MotionSensor | TemperatureSensor | PressureSensor | TouchSensor | LightSensor | SmokeSensor | CO2Sensor |
		//InfraredLightSensor | HasIntegerValue_Impl | HasBooleanValue_Impl | HumiditySensor
		public Alternatives getAlternatives() { return cAlternatives; }

		//MotionSensor
		public RuleCall getMotionSensorParserRuleCall_0() { return cMotionSensorParserRuleCall_0; }

		//TemperatureSensor
		public RuleCall getTemperatureSensorParserRuleCall_1() { return cTemperatureSensorParserRuleCall_1; }

		//PressureSensor
		public RuleCall getPressureSensorParserRuleCall_2() { return cPressureSensorParserRuleCall_2; }

		//TouchSensor
		public RuleCall getTouchSensorParserRuleCall_3() { return cTouchSensorParserRuleCall_3; }

		//LightSensor
		public RuleCall getLightSensorParserRuleCall_4() { return cLightSensorParserRuleCall_4; }

		//SmokeSensor
		public RuleCall getSmokeSensorParserRuleCall_5() { return cSmokeSensorParserRuleCall_5; }

		//CO2Sensor
		public RuleCall getCO2SensorParserRuleCall_6() { return cCO2SensorParserRuleCall_6; }

		//InfraredLightSensor
		public RuleCall getInfraredLightSensorParserRuleCall_7() { return cInfraredLightSensorParserRuleCall_7; }

		//HasIntegerValue_Impl
		public RuleCall getHasIntegerValue_ImplParserRuleCall_8() { return cHasIntegerValue_ImplParserRuleCall_8; }

		//HasBooleanValue_Impl
		public RuleCall getHasBooleanValue_ImplParserRuleCall_9() { return cHasBooleanValue_ImplParserRuleCall_9; }

		//HumiditySensor
		public RuleCall getHumiditySensorParserRuleCall_10() { return cHumiditySensorParserRuleCall_10; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class BuildingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Building");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBuildingAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDecKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cActuatorsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActuatorsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cActuatorsActuatorCrossReference_4_1_0 = (CrossReference)cActuatorsAssignment_4_1.eContents().get(0);
		private final RuleCall cActuatorsActuatorEStringParserRuleCall_4_1_0_1 = (RuleCall)cActuatorsActuatorCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSensorsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSensorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSensorsSensorCrossReference_5_1_0 = (CrossReference)cSensorsAssignment_5_1.eContents().get(0);
		private final RuleCall cSensorsSensorEStringParserRuleCall_5_1_0_1 = (RuleCall)cSensorsSensorCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCtsSystemKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCtsSystemAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCtsSystemCTSParserRuleCall_6_1_0 = (RuleCall)cCtsSystemAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAccessControlKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cAccessControlAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cAccessControlAccessControlParserRuleCall_7_1_0 = (RuleCall)cAccessControlAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCalendarSystemKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cCalendarSystemAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cCalendarSystemCalendarSystemParserRuleCall_8_1_0 = (RuleCall)cCalendarSystemAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cMeetingScheduleSystemKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cMeetingScheduleSystemAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_9_1_0 = (RuleCall)cMeetingScheduleSystemAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cDeclareComponentsAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cDeclareComponentsComponentParserRuleCall_10_0_0 = (RuleCall)cDeclareComponentsAssignment_10_0.eContents().get(0);
		private final Assignment cDeclareComponentsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cDeclareComponentsComponentParserRuleCall_10_1_0 = (RuleCall)cDeclareComponentsAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Building:
		//	{Building} "dec" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
		//	("ctsSystem" ctsSystem=CTS)? ("accessControl" accessControl=AccessControl)? ("calendarSystem"
		//	calendarSystem=CalendarSystem)? ("meetingScheduleSystem" meetingScheduleSystem=MeetingScheduleSystem)?
		//	(declareComponents+=Component declareComponents+=Component*)? "}";
		public ParserRule getRule() { return rule; }

		//{Building} "dec" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
		//("ctsSystem" ctsSystem=CTS)? ("accessControl" accessControl=AccessControl)? ("calendarSystem"
		//calendarSystem=CalendarSystem)? ("meetingScheduleSystem" meetingScheduleSystem=MeetingScheduleSystem)?
		//(declareComponents+=Component declareComponents+=Component*)? "}"
		public Group getGroup() { return cGroup; }

		//{Building}
		public Action getBuildingAction_0() { return cBuildingAction_0; }

		//"dec"
		public Keyword getDecKeyword_1() { return cDecKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("actuators" actuators=[Actuator|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"actuators"
		public Keyword getActuatorsKeyword_4_0() { return cActuatorsKeyword_4_0; }

		//actuators=[Actuator|EString]
		public Assignment getActuatorsAssignment_4_1() { return cActuatorsAssignment_4_1; }

		//[Actuator|EString]
		public CrossReference getActuatorsActuatorCrossReference_4_1_0() { return cActuatorsActuatorCrossReference_4_1_0; }

		//EString
		public RuleCall getActuatorsActuatorEStringParserRuleCall_4_1_0_1() { return cActuatorsActuatorEStringParserRuleCall_4_1_0_1; }

		//("sensors" sensors=[Sensor|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"sensors"
		public Keyword getSensorsKeyword_5_0() { return cSensorsKeyword_5_0; }

		//sensors=[Sensor|EString]
		public Assignment getSensorsAssignment_5_1() { return cSensorsAssignment_5_1; }

		//[Sensor|EString]
		public CrossReference getSensorsSensorCrossReference_5_1_0() { return cSensorsSensorCrossReference_5_1_0; }

		//EString
		public RuleCall getSensorsSensorEStringParserRuleCall_5_1_0_1() { return cSensorsSensorEStringParserRuleCall_5_1_0_1; }

		//("ctsSystem" ctsSystem=CTS)?
		public Group getGroup_6() { return cGroup_6; }

		//"ctsSystem"
		public Keyword getCtsSystemKeyword_6_0() { return cCtsSystemKeyword_6_0; }

		//ctsSystem=CTS
		public Assignment getCtsSystemAssignment_6_1() { return cCtsSystemAssignment_6_1; }

		//CTS
		public RuleCall getCtsSystemCTSParserRuleCall_6_1_0() { return cCtsSystemCTSParserRuleCall_6_1_0; }

		//("accessControl" accessControl=AccessControl)?
		public Group getGroup_7() { return cGroup_7; }

		//"accessControl"
		public Keyword getAccessControlKeyword_7_0() { return cAccessControlKeyword_7_0; }

		//accessControl=AccessControl
		public Assignment getAccessControlAssignment_7_1() { return cAccessControlAssignment_7_1; }

		//AccessControl
		public RuleCall getAccessControlAccessControlParserRuleCall_7_1_0() { return cAccessControlAccessControlParserRuleCall_7_1_0; }

		//("calendarSystem" calendarSystem=CalendarSystem)?
		public Group getGroup_8() { return cGroup_8; }

		//"calendarSystem"
		public Keyword getCalendarSystemKeyword_8_0() { return cCalendarSystemKeyword_8_0; }

		//calendarSystem=CalendarSystem
		public Assignment getCalendarSystemAssignment_8_1() { return cCalendarSystemAssignment_8_1; }

		//CalendarSystem
		public RuleCall getCalendarSystemCalendarSystemParserRuleCall_8_1_0() { return cCalendarSystemCalendarSystemParserRuleCall_8_1_0; }

		//("meetingScheduleSystem" meetingScheduleSystem=MeetingScheduleSystem)?
		public Group getGroup_9() { return cGroup_9; }

		//"meetingScheduleSystem"
		public Keyword getMeetingScheduleSystemKeyword_9_0() { return cMeetingScheduleSystemKeyword_9_0; }

		//meetingScheduleSystem=MeetingScheduleSystem
		public Assignment getMeetingScheduleSystemAssignment_9_1() { return cMeetingScheduleSystemAssignment_9_1; }

		//MeetingScheduleSystem
		public RuleCall getMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_9_1_0() { return cMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_9_1_0; }

		//(declareComponents+=Component declareComponents+=Component*)?
		public Group getGroup_10() { return cGroup_10; }

		//declareComponents+=Component
		public Assignment getDeclareComponentsAssignment_10_0() { return cDeclareComponentsAssignment_10_0; }

		//Component
		public RuleCall getDeclareComponentsComponentParserRuleCall_10_0_0() { return cDeclareComponentsComponentParserRuleCall_10_0_0; }

		//declareComponents+=Component*
		public Assignment getDeclareComponentsAssignment_10_1() { return cDeclareComponentsAssignment_10_1; }

		//Component
		public RuleCall getDeclareComponentsComponentParserRuleCall_10_1_0() { return cDeclareComponentsComponentParserRuleCall_10_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class ModelDefinedComponentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelDefinedComponents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelDefinedComponentsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cDeclareComponentsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cDeclareComponentsComponentParserRuleCall_4_0_0 = (RuleCall)cDeclareComponentsAssignment_4_0.eContents().get(0);
		private final Assignment cDeclareComponentsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDeclareComponentsComponentParserRuleCall_4_1_0 = (RuleCall)cDeclareComponentsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ModelDefinedComponents:
		//	{ModelDefinedComponents} "def" name=EString "{" (declareComponents+=Component declareComponents+=Component*)? "}";
		public ParserRule getRule() { return rule; }

		//{ModelDefinedComponents} "def" name=EString "{" (declareComponents+=Component declareComponents+=Component*)? "}"
		public Group getGroup() { return cGroup; }

		//{ModelDefinedComponents}
		public Action getModelDefinedComponentsAction_0() { return cModelDefinedComponentsAction_0; }

		//"def"
		public Keyword getDefKeyword_1() { return cDefKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//(declareComponents+=Component declareComponents+=Component*)?
		public Group getGroup_4() { return cGroup_4; }

		//declareComponents+=Component
		public Assignment getDeclareComponentsAssignment_4_0() { return cDeclareComponentsAssignment_4_0; }

		//Component
		public RuleCall getDeclareComponentsComponentParserRuleCall_4_0_0() { return cDeclareComponentsComponentParserRuleCall_4_0_0; }

		//declareComponents+=Component*
		public Assignment getDeclareComponentsAssignment_4_1() { return cDeclareComponentsAssignment_4_1; }

		//Component
		public RuleCall getDeclareComponentsComponentParserRuleCall_4_1_0() { return cDeclareComponentsComponentParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class LightSwitchActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LightSwitchActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLightSwitchActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLightSwitchActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateOnOffParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//LightSwitchActuator:
		//	{LightSwitchActuator} "LightSwitchActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
		public ParserRule getRule() { return rule; }

		//{LightSwitchActuator} "LightSwitchActuator" name=EString "{" ("valueState" valueState=OnOff)? "}"
		public Group getGroup() { return cGroup; }

		//{LightSwitchActuator}
		public Action getLightSwitchActuatorAction_0() { return cLightSwitchActuatorAction_0; }

		//"LightSwitchActuator"
		public Keyword getLightSwitchActuatorKeyword_1() { return cLightSwitchActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=OnOff)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=OnOff
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//OnOff
		public RuleCall getValueStateOnOffParserRuleCall_4_1_0() { return cValueStateOnOffParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class WindowActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WindowActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWindowActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cWindowActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateOpenCloseParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//WindowActuator:
		//	{WindowActuator} "WindowActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}";
		public ParserRule getRule() { return rule; }

		//{WindowActuator} "WindowActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}"
		public Group getGroup() { return cGroup; }

		//{WindowActuator}
		public Action getWindowActuatorAction_0() { return cWindowActuatorAction_0; }

		//"WindowActuator"
		public Keyword getWindowActuatorKeyword_1() { return cWindowActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=OpenClose)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=OpenClose
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//OpenClose
		public RuleCall getValueStateOpenCloseParserRuleCall_4_1_0() { return cValueStateOpenCloseParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class HumidifierActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HumidifierActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHumidifierActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHumidifierActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateOnOffParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//HumidifierActuator:
		//	{HumidifierActuator} "HumidifierActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
		public ParserRule getRule() { return rule; }

		//{HumidifierActuator} "HumidifierActuator" name=EString "{" ("valueState" valueState=OnOff)? "}"
		public Group getGroup() { return cGroup; }

		//{HumidifierActuator}
		public Action getHumidifierActuatorAction_0() { return cHumidifierActuatorAction_0; }

		//"HumidifierActuator"
		public Keyword getHumidifierActuatorKeyword_1() { return cHumidifierActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=OnOff)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=OnOff
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//OnOff
		public RuleCall getValueStateOnOffParserRuleCall_4_1_0() { return cValueStateOnOffParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class DoorActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DoorActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDoorActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDoorActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateOpenCloseParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DoorActuator:
		//	{DoorActuator} "DoorActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}";
		public ParserRule getRule() { return rule; }

		//{DoorActuator} "DoorActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}"
		public Group getGroup() { return cGroup; }

		//{DoorActuator}
		public Action getDoorActuatorAction_0() { return cDoorActuatorAction_0; }

		//"DoorActuator"
		public Keyword getDoorActuatorKeyword_1() { return cDoorActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=OpenClose)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=OpenClose
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//OpenClose
		public RuleCall getValueStateOpenCloseParserRuleCall_4_1_0() { return cValueStateOpenCloseParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SMSActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SMSActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSMSActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSMSActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEStringParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SMSActuator:
		//	{SMSActuator} "SMSActuator" name=EString "{" ("valueState" valueState=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{SMSActuator} "SMSActuator" name=EString "{" ("valueState" valueState=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{SMSActuator}
		public Action getSMSActuatorAction_0() { return cSMSActuatorAction_0; }

		//"SMSActuator"
		public Keyword getSMSActuatorKeyword_1() { return cSMSActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EString
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EString
		public RuleCall getValueStateEStringParserRuleCall_4_1_0() { return cValueStateEStringParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class RadiatorActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "RadiatorActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRadiatorActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRadiatorActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateOnOffParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//RadiatorActuator:
		//	{RadiatorActuator} "RadiatorActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
		public ParserRule getRule() { return rule; }

		//{RadiatorActuator} "RadiatorActuator" name=EString "{" ("valueState" valueState=OnOff)? "}"
		public Group getGroup() { return cGroup; }

		//{RadiatorActuator}
		public Action getRadiatorActuatorAction_0() { return cRadiatorActuatorAction_0; }

		//"RadiatorActuator"
		public Keyword getRadiatorActuatorKeyword_1() { return cRadiatorActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=OnOff)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=OnOff
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//OnOff
		public RuleCall getValueStateOnOffParserRuleCall_4_1_0() { return cValueStateOnOffParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class DatabaseActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DatabaseActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDatabaseActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDatabaseActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEStringParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//DatabaseActuator:
		//	{DatabaseActuator} "DatabaseActuator" name=EString "{" ("valueState" valueState=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{DatabaseActuator} "DatabaseActuator" name=EString "{" ("valueState" valueState=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{DatabaseActuator}
		public Action getDatabaseActuatorAction_0() { return cDatabaseActuatorAction_0; }

		//"DatabaseActuator"
		public Keyword getDatabaseActuatorKeyword_1() { return cDatabaseActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EString
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EString
		public RuleCall getValueStateEStringParserRuleCall_4_1_0() { return cValueStateEStringParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class AudioAlarmActuatorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AudioAlarmActuator");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAudioAlarmActuatorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAudioAlarmActuatorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateOnOffParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AudioAlarmActuator:
		//	{AudioAlarmActuator} "AudioAlarmActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
		public ParserRule getRule() { return rule; }

		//{AudioAlarmActuator} "AudioAlarmActuator" name=EString "{" ("valueState" valueState=OnOff)? "}"
		public Group getGroup() { return cGroup; }

		//{AudioAlarmActuator}
		public Action getAudioAlarmActuatorAction_0() { return cAudioAlarmActuatorAction_0; }

		//"AudioAlarmActuator"
		public Keyword getAudioAlarmActuatorKeyword_1() { return cAudioAlarmActuatorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=OnOff)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=OnOff
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//OnOff
		public RuleCall getValueStateOnOffParserRuleCall_4_1_0() { return cValueStateOnOffParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SetsOpenCloseState_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SetsOpenCloseState_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSetsOpenCloseStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSetsOpenCloseStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateOpenCloseParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SetsOpenCloseState_Impl returns SetsOpenCloseState:
		//	{SetsOpenCloseState} "SetsOpenCloseState" name=EString "{" ("valueState" valueState=OpenClose)? "}";
		public ParserRule getRule() { return rule; }

		//{SetsOpenCloseState} "SetsOpenCloseState" name=EString "{" ("valueState" valueState=OpenClose)? "}"
		public Group getGroup() { return cGroup; }

		//{SetsOpenCloseState}
		public Action getSetsOpenCloseStateAction_0() { return cSetsOpenCloseStateAction_0; }

		//"SetsOpenCloseState"
		public Keyword getSetsOpenCloseStateKeyword_1() { return cSetsOpenCloseStateKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=OpenClose)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=OpenClose
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//OpenClose
		public RuleCall getValueStateOpenCloseParserRuleCall_4_1_0() { return cValueStateOpenCloseParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SetsOnOffState_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SetsOnOffState_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSetsOnOffStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSetsOnOffStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateOnOffParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SetsOnOffState_Impl returns SetsOnOffState:
		//	{SetsOnOffState} "SetsOnOffState" name=EString "{" ("valueState" valueState=OnOff)? "}";
		public ParserRule getRule() { return rule; }

		//{SetsOnOffState} "SetsOnOffState" name=EString "{" ("valueState" valueState=OnOff)? "}"
		public Group getGroup() { return cGroup; }

		//{SetsOnOffState}
		public Action getSetsOnOffStateAction_0() { return cSetsOnOffStateAction_0; }

		//"SetsOnOffState"
		public Keyword getSetsOnOffStateKeyword_1() { return cSetsOnOffStateKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=OnOff)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=OnOff
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//OnOff
		public RuleCall getValueStateOnOffParserRuleCall_4_1_0() { return cValueStateOnOffParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SetStringState_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SetStringState_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSetStringStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSetStringStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEStringParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SetStringState_Impl returns SetStringState:
		//	{SetStringState} "SetStringState" name=EString "{" ("valueState" valueState=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{SetStringState} "SetStringState" name=EString "{" ("valueState" valueState=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{SetStringState}
		public Action getSetStringStateAction_0() { return cSetStringStateAction_0; }

		//"SetStringState"
		public Keyword getSetStringStateKeyword_1() { return cSetStringStateKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EString
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EString
		public RuleCall getValueStateEStringParserRuleCall_4_1_0() { return cValueStateEStringParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class OnOffElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OnOff");
		private final Keyword cOnOffKeyword = (Keyword)rule.eContents().get(1);
		
		/// * TODO: implement this rule and an appropriate IValueConverter * / OnOff:
		//	"OnOff";
		public ParserRule getRule() { return rule; }

		//"OnOff"
		public Keyword getOnOffKeyword() { return cOnOffKeyword; }
	}

	public class OpenCloseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OpenClose");
		private final Keyword cOpenCloseKeyword = (Keyword)rule.eContents().get(1);
		
		/// * TODO: implement this rule and an appropriate IValueConverter * / OpenClose:
		//	"OpenClose";
		public ParserRule getRule() { return rule; }

		//"OpenClose"
		public Keyword getOpenCloseKeyword() { return cOpenCloseKeyword; }
	}

	public class MotionSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MotionSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMotionSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueStateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cValueStateValueStateKeyword_1_0 = (Keyword)cValueStateAssignment_1.eContents().get(0);
		private final Keyword cMotionSensorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//MotionSensor:
		//	{MotionSensor} valueState?="valueState"? "MotionSensor" name=EString;
		public ParserRule getRule() { return rule; }

		//{MotionSensor} valueState?="valueState"? "MotionSensor" name=EString
		public Group getGroup() { return cGroup; }

		//{MotionSensor}
		public Action getMotionSensorAction_0() { return cMotionSensorAction_0; }

		//valueState?="valueState"?
		public Assignment getValueStateAssignment_1() { return cValueStateAssignment_1; }

		//"valueState"
		public Keyword getValueStateValueStateKeyword_1_0() { return cValueStateValueStateKeyword_1_0; }

		//"MotionSensor"
		public Keyword getMotionSensorKeyword_2() { return cMotionSensorKeyword_2; }

		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}

	public class TemperatureSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TemperatureSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTemperatureSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTemperatureSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEIntParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//TemperatureSensor:
		//	{TemperatureSensor} "TemperatureSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
		public ParserRule getRule() { return rule; }

		//{TemperatureSensor} "TemperatureSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
		public Group getGroup() { return cGroup; }

		//{TemperatureSensor}
		public Action getTemperatureSensorAction_0() { return cTemperatureSensorAction_0; }

		//"TemperatureSensor"
		public Keyword getTemperatureSensorKeyword_1() { return cTemperatureSensorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EInt
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_4_1_0() { return cValueStateEIntParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class PressureSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PressureSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPressureSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPressureSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEIntParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PressureSensor:
		//	{PressureSensor} "PressureSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
		public ParserRule getRule() { return rule; }

		//{PressureSensor} "PressureSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
		public Group getGroup() { return cGroup; }

		//{PressureSensor}
		public Action getPressureSensorAction_0() { return cPressureSensorAction_0; }

		//"PressureSensor"
		public Keyword getPressureSensorKeyword_1() { return cPressureSensorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EInt
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_4_1_0() { return cValueStateEIntParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class TouchSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TouchSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTouchSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueStateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cValueStateValueStateKeyword_1_0 = (Keyword)cValueStateAssignment_1.eContents().get(0);
		private final Keyword cTouchSensorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//TouchSensor:
		//	{TouchSensor} valueState?="valueState"? "TouchSensor" name=EString;
		public ParserRule getRule() { return rule; }

		//{TouchSensor} valueState?="valueState"? "TouchSensor" name=EString
		public Group getGroup() { return cGroup; }

		//{TouchSensor}
		public Action getTouchSensorAction_0() { return cTouchSensorAction_0; }

		//valueState?="valueState"?
		public Assignment getValueStateAssignment_1() { return cValueStateAssignment_1; }

		//"valueState"
		public Keyword getValueStateValueStateKeyword_1_0() { return cValueStateValueStateKeyword_1_0; }

		//"TouchSensor"
		public Keyword getTouchSensorKeyword_2() { return cTouchSensorKeyword_2; }

		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}

	public class LightSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LightSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLightSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLightSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEIntParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//LightSensor:
		//	{LightSensor} "LightSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
		public ParserRule getRule() { return rule; }

		//{LightSensor} "LightSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
		public Group getGroup() { return cGroup; }

		//{LightSensor}
		public Action getLightSensorAction_0() { return cLightSensorAction_0; }

		//"LightSensor"
		public Keyword getLightSensorKeyword_1() { return cLightSensorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EInt
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_4_1_0() { return cValueStateEIntParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class SmokeSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SmokeSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSmokeSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSmokeSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEIntParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//SmokeSensor:
		//	{SmokeSensor} "SmokeSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
		public ParserRule getRule() { return rule; }

		//{SmokeSensor} "SmokeSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
		public Group getGroup() { return cGroup; }

		//{SmokeSensor}
		public Action getSmokeSensorAction_0() { return cSmokeSensorAction_0; }

		//"SmokeSensor"
		public Keyword getSmokeSensorKeyword_1() { return cSmokeSensorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EInt
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_4_1_0() { return cValueStateEIntParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class CO2SensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CO2Sensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCO2SensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCO2SensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEIntParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CO2Sensor:
		//	{CO2Sensor} "CO2Sensor" name=EString "{" ("valueState" valueState=EInt)? "}";
		public ParserRule getRule() { return rule; }

		//{CO2Sensor} "CO2Sensor" name=EString "{" ("valueState" valueState=EInt)? "}"
		public Group getGroup() { return cGroup; }

		//{CO2Sensor}
		public Action getCO2SensorAction_0() { return cCO2SensorAction_0; }

		//"CO2Sensor"
		public Keyword getCO2SensorKeyword_1() { return cCO2SensorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EInt
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_4_1_0() { return cValueStateEIntParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class InfraredLightSensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InfraredLightSensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInfraredLightSensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInfraredLightSensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEIntParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//InfraredLightSensor:
		//	{InfraredLightSensor} "InfraredLightSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
		public ParserRule getRule() { return rule; }

		//{InfraredLightSensor} "InfraredLightSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
		public Group getGroup() { return cGroup; }

		//{InfraredLightSensor}
		public Action getInfraredLightSensorAction_0() { return cInfraredLightSensorAction_0; }

		//"InfraredLightSensor"
		public Keyword getInfraredLightSensorKeyword_1() { return cInfraredLightSensorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EInt
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_4_1_0() { return cValueStateEIntParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class HasIntegerValue_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasIntegerValue_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHasIntegerValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHasIntegerValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEIntParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//HasIntegerValue_Impl returns HasIntegerValue:
		//	{HasIntegerValue} "HasIntegerValue" name=EString "{" ("valueState" valueState=EInt)? "}";
		public ParserRule getRule() { return rule; }

		//{HasIntegerValue} "HasIntegerValue" name=EString "{" ("valueState" valueState=EInt)? "}"
		public Group getGroup() { return cGroup; }

		//{HasIntegerValue}
		public Action getHasIntegerValueAction_0() { return cHasIntegerValueAction_0; }

		//"HasIntegerValue"
		public Keyword getHasIntegerValueKeyword_1() { return cHasIntegerValueKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EInt
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_4_1_0() { return cValueStateEIntParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class HasBooleanValue_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HasBooleanValue_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHasBooleanValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueStateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cValueStateValueStateKeyword_1_0 = (Keyword)cValueStateAssignment_1.eContents().get(0);
		private final Keyword cHasBooleanValueKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//HasBooleanValue_Impl returns HasBooleanValue:
		//	{HasBooleanValue} valueState?="valueState"? "HasBooleanValue" name=EString;
		public ParserRule getRule() { return rule; }

		//{HasBooleanValue} valueState?="valueState"? "HasBooleanValue" name=EString
		public Group getGroup() { return cGroup; }

		//{HasBooleanValue}
		public Action getHasBooleanValueAction_0() { return cHasBooleanValueAction_0; }

		//valueState?="valueState"?
		public Assignment getValueStateAssignment_1() { return cValueStateAssignment_1; }

		//"valueState"
		public Keyword getValueStateValueStateKeyword_1_0() { return cValueStateValueStateKeyword_1_0; }

		//"HasBooleanValue"
		public Keyword getHasBooleanValueKeyword_2() { return cHasBooleanValueKeyword_2; }

		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
	}

	public class HumiditySensorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HumiditySensor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHumiditySensorAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHumiditySensorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueStateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueStateAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueStateEIntParserRuleCall_4_1_0 = (RuleCall)cValueStateAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//HumiditySensor:
		//	{HumiditySensor} "HumiditySensor" name=EString "{" ("valueState" valueState=EInt)? "}";
		public ParserRule getRule() { return rule; }

		//{HumiditySensor} "HumiditySensor" name=EString "{" ("valueState" valueState=EInt)? "}"
		public Group getGroup() { return cGroup; }

		//{HumiditySensor}
		public Action getHumiditySensorAction_0() { return cHumiditySensorAction_0; }

		//"HumiditySensor"
		public Keyword getHumiditySensorKeyword_1() { return cHumiditySensorKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("valueState" valueState=EInt)?
		public Group getGroup_4() { return cGroup_4; }

		//"valueState"
		public Keyword getValueStateKeyword_4_0() { return cValueStateKeyword_4_0; }

		//valueState=EInt
		public Assignment getValueStateAssignment_4_1() { return cValueStateAssignment_4_1; }

		//EInt
		public RuleCall getValueStateEIntParserRuleCall_4_1_0() { return cValueStateEIntParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}

	public class CTSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CTS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCTSAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCTSKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTemperatureSensorsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cTemperatureSensorsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cTemperatureSensorsSensorParserRuleCall_3_2_0 = (RuleCall)cTemperatureSensorsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cTemperatureSensorsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cTemperatureSensorsSensorParserRuleCall_3_3_1_0 = (RuleCall)cTemperatureSensorsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCtsActuatorsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cCtsActuatorsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cCtsActuatorsActuatorParserRuleCall_4_2_0 = (RuleCall)cCtsActuatorsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cCtsActuatorsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cCtsActuatorsActuatorParserRuleCall_4_3_1_0 = (RuleCall)cCtsActuatorsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CTS:
		//	{CTS} "CTS" "{" ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
		//	("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{CTS} "CTS" "{" ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
		//("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{CTS}
		public Action getCTSAction_0() { return cCTSAction_0; }

		//"CTS"
		public Keyword getCTSKeyword_1() { return cCTSKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"temperatureSensors"
		public Keyword getTemperatureSensorsKeyword_3_0() { return cTemperatureSensorsKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//temperatureSensors+=Sensor
		public Assignment getTemperatureSensorsAssignment_3_2() { return cTemperatureSensorsAssignment_3_2; }

		//Sensor
		public RuleCall getTemperatureSensorsSensorParserRuleCall_3_2_0() { return cTemperatureSensorsSensorParserRuleCall_3_2_0; }

		//("," temperatureSensors+=Sensor)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//temperatureSensors+=Sensor
		public Assignment getTemperatureSensorsAssignment_3_3_1() { return cTemperatureSensorsAssignment_3_3_1; }

		//Sensor
		public RuleCall getTemperatureSensorsSensorParserRuleCall_3_3_1_0() { return cTemperatureSensorsSensorParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"ctsActuators"
		public Keyword getCtsActuatorsKeyword_4_0() { return cCtsActuatorsKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//ctsActuators+=Actuator
		public Assignment getCtsActuatorsAssignment_4_2() { return cCtsActuatorsAssignment_4_2; }

		//Actuator
		public RuleCall getCtsActuatorsActuatorParserRuleCall_4_2_0() { return cCtsActuatorsActuatorParserRuleCall_4_2_0; }

		//("," ctsActuators+=Actuator)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//ctsActuators+=Actuator
		public Assignment getCtsActuatorsAssignment_4_3_1() { return cCtsActuatorsAssignment_4_3_1; }

		//Actuator
		public RuleCall getCtsActuatorsActuatorParserRuleCall_4_3_1_0() { return cCtsActuatorsActuatorParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class AccessControlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AccessControl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAccessControlAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAccessControlKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAccessControlSensorsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cAccessControlSensorsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAccessControlSensorsSensorParserRuleCall_3_2_0 = (RuleCall)cAccessControlSensorsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cAccessControlSensorsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cAccessControlSensorsSensorParserRuleCall_3_3_1_0 = (RuleCall)cAccessControlSensorsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAccessControlDoorLockActuatorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAccessControlDoorLockActuatorAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0 = (RuleCall)cAccessControlDoorLockActuatorAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAccessControlDoorLockActuatorAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0 = (RuleCall)cAccessControlDoorLockActuatorAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AccessControl:
		//	{AccessControl} "AccessControl" "{" ("accessControlSensors" "{" accessControlSensors+=Sensor (","
		//	accessControlSensors+=Sensor)* "}")? ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
		//	accessControlDoorLockActuator+=Actuator)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{AccessControl} "AccessControl" "{" ("accessControlSensors" "{" accessControlSensors+=Sensor (","
		//accessControlSensors+=Sensor)* "}")? ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
		//accessControlDoorLockActuator+=Actuator)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{AccessControl}
		public Action getAccessControlAction_0() { return cAccessControlAction_0; }

		//"AccessControl"
		public Keyword getAccessControlKeyword_1() { return cAccessControlKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("accessControlSensors" "{" accessControlSensors+=Sensor ("," accessControlSensors+=Sensor)* "}")?
		public Group getGroup_3() { return cGroup_3; }

		//"accessControlSensors"
		public Keyword getAccessControlSensorsKeyword_3_0() { return cAccessControlSensorsKeyword_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }

		//accessControlSensors+=Sensor
		public Assignment getAccessControlSensorsAssignment_3_2() { return cAccessControlSensorsAssignment_3_2; }

		//Sensor
		public RuleCall getAccessControlSensorsSensorParserRuleCall_3_2_0() { return cAccessControlSensorsSensorParserRuleCall_3_2_0; }

		//("," accessControlSensors+=Sensor)*
		public Group getGroup_3_3() { return cGroup_3_3; }

		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }

		//accessControlSensors+=Sensor
		public Assignment getAccessControlSensorsAssignment_3_3_1() { return cAccessControlSensorsAssignment_3_3_1; }

		//Sensor
		public RuleCall getAccessControlSensorsSensorParserRuleCall_3_3_1_0() { return cAccessControlSensorsSensorParserRuleCall_3_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }

		//("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
		//accessControlDoorLockActuator+=Actuator)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"accessControlDoorLockActuator"
		public Keyword getAccessControlDoorLockActuatorKeyword_4_0() { return cAccessControlDoorLockActuatorKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//accessControlDoorLockActuator+=Actuator
		public Assignment getAccessControlDoorLockActuatorAssignment_4_2() { return cAccessControlDoorLockActuatorAssignment_4_2; }

		//Actuator
		public RuleCall getAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0() { return cAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0; }

		//("," accessControlDoorLockActuator+=Actuator)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//accessControlDoorLockActuator+=Actuator
		public Assignment getAccessControlDoorLockActuatorAssignment_4_3_1() { return cAccessControlDoorLockActuatorAssignment_4_3_1; }

		//Actuator
		public RuleCall getAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0() { return cAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class CalendarSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CalendarSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCalendarSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCalendarSystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CalendarSystem:
		//	{CalendarSystem} "CalendarSystem";
		public ParserRule getRule() { return rule; }

		//{CalendarSystem} "CalendarSystem"
		public Group getGroup() { return cGroup; }

		//{CalendarSystem}
		public Action getCalendarSystemAction_0() { return cCalendarSystemAction_0; }

		//"CalendarSystem"
		public Keyword getCalendarSystemKeyword_1() { return cCalendarSystemKeyword_1; }
	}

	public class MeetingScheduleSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MeetingScheduleSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMeetingScheduleSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMeetingScheduleSystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MeetingScheduleSystem:
		//	{MeetingScheduleSystem} "MeetingScheduleSystem";
		public ParserRule getRule() { return rule; }

		//{MeetingScheduleSystem} "MeetingScheduleSystem"
		public Group getGroup() { return cGroup; }

		//{MeetingScheduleSystem}
		public Action getMeetingScheduleSystemAction_0() { return cMeetingScheduleSystemAction_0; }

		//"MeetingScheduleSystem"
		public Keyword getMeetingScheduleSystemKeyword_1() { return cMeetingScheduleSystemKeyword_1; }
	}

	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDecKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSensorsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSensorsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSensorsSensorCrossReference_4_1_0 = (CrossReference)cSensorsAssignment_4_1.eContents().get(0);
		private final RuleCall cSensorsSensorEStringParserRuleCall_4_1_0_1 = (RuleCall)cSensorsSensorCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cActuatorsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cActuatorsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cActuatorsActuatorCrossReference_5_1_0 = (CrossReference)cActuatorsAssignment_5_1.eContents().get(0);
		private final RuleCall cActuatorsActuatorEStringParserRuleCall_5_1_0_1 = (RuleCall)cActuatorsActuatorCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cDeclareComponentsAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cDeclareComponentsComponentParserRuleCall_6_0_0 = (RuleCall)cDeclareComponentsAssignment_6_0.eContents().get(0);
		private final Assignment cDeclareComponentsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDeclareComponentsComponentParserRuleCall_6_1_0 = (RuleCall)cDeclareComponentsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cColonKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cExtendsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cExtendsComponentParserRuleCall_7_1_0 = (RuleCall)cExtendsAssignment_7_1.eContents().get(0);
		private final Assignment cExtendsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cExtendsComponentParserRuleCall_7_2_0 = (RuleCall)cExtendsAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Component:
		//	{Component} "dec" name=EString "{" ("sensors" sensors=[Sensor|EString])? ("actuators" actuators=[Actuator|EString])?
		//	(declareComponents+=Component declareComponents+=Component*)? (":" extends+=Component extends+=Component*)? "}";
		public ParserRule getRule() { return rule; }

		//{Component} "dec" name=EString "{" ("sensors" sensors=[Sensor|EString])? ("actuators" actuators=[Actuator|EString])?
		//(declareComponents+=Component declareComponents+=Component*)? (":" extends+=Component extends+=Component*)? "}"
		public Group getGroup() { return cGroup; }

		//{Component}
		public Action getComponentAction_0() { return cComponentAction_0; }

		//"dec"
		public Keyword getDecKeyword_1() { return cDecKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//("sensors" sensors=[Sensor|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"sensors"
		public Keyword getSensorsKeyword_4_0() { return cSensorsKeyword_4_0; }

		//sensors=[Sensor|EString]
		public Assignment getSensorsAssignment_4_1() { return cSensorsAssignment_4_1; }

		//[Sensor|EString]
		public CrossReference getSensorsSensorCrossReference_4_1_0() { return cSensorsSensorCrossReference_4_1_0; }

		//EString
		public RuleCall getSensorsSensorEStringParserRuleCall_4_1_0_1() { return cSensorsSensorEStringParserRuleCall_4_1_0_1; }

		//("actuators" actuators=[Actuator|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"actuators"
		public Keyword getActuatorsKeyword_5_0() { return cActuatorsKeyword_5_0; }

		//actuators=[Actuator|EString]
		public Assignment getActuatorsAssignment_5_1() { return cActuatorsAssignment_5_1; }

		//[Actuator|EString]
		public CrossReference getActuatorsActuatorCrossReference_5_1_0() { return cActuatorsActuatorCrossReference_5_1_0; }

		//EString
		public RuleCall getActuatorsActuatorEStringParserRuleCall_5_1_0_1() { return cActuatorsActuatorEStringParserRuleCall_5_1_0_1; }

		//(declareComponents+=Component declareComponents+=Component*)?
		public Group getGroup_6() { return cGroup_6; }

		//declareComponents+=Component
		public Assignment getDeclareComponentsAssignment_6_0() { return cDeclareComponentsAssignment_6_0; }

		//Component
		public RuleCall getDeclareComponentsComponentParserRuleCall_6_0_0() { return cDeclareComponentsComponentParserRuleCall_6_0_0; }

		//declareComponents+=Component*
		public Assignment getDeclareComponentsAssignment_6_1() { return cDeclareComponentsAssignment_6_1; }

		//Component
		public RuleCall getDeclareComponentsComponentParserRuleCall_6_1_0() { return cDeclareComponentsComponentParserRuleCall_6_1_0; }

		//(":" extends+=Component extends+=Component*)?
		public Group getGroup_7() { return cGroup_7; }

		//":"
		public Keyword getColonKeyword_7_0() { return cColonKeyword_7_0; }

		//extends+=Component
		public Assignment getExtendsAssignment_7_1() { return cExtendsAssignment_7_1; }

		//Component
		public RuleCall getExtendsComponentParserRuleCall_7_1_0() { return cExtendsComponentParserRuleCall_7_1_0; }

		//extends+=Component*
		public Assignment getExtendsAssignment_7_2() { return cExtendsAssignment_7_2; }

		//Component
		public RuleCall getExtendsComponentParserRuleCall_7_2_0() { return cExtendsComponentParserRuleCall_7_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	
	private ModelElements pModel;
	private ActuatorElements pActuator;
	private SensorElements pSensor;
	private EStringElements pEString;
	private BuildingElements pBuilding;
	private ModelDefinedComponentsElements pModelDefinedComponents;
	private LightSwitchActuatorElements pLightSwitchActuator;
	private WindowActuatorElements pWindowActuator;
	private HumidifierActuatorElements pHumidifierActuator;
	private DoorActuatorElements pDoorActuator;
	private SMSActuatorElements pSMSActuator;
	private RadiatorActuatorElements pRadiatorActuator;
	private DatabaseActuatorElements pDatabaseActuator;
	private AudioAlarmActuatorElements pAudioAlarmActuator;
	private SetsOpenCloseState_ImplElements pSetsOpenCloseState_Impl;
	private SetsOnOffState_ImplElements pSetsOnOffState_Impl;
	private SetStringState_ImplElements pSetStringState_Impl;
	private OnOffElements pOnOff;
	private OpenCloseElements pOpenClose;
	private MotionSensorElements pMotionSensor;
	private TemperatureSensorElements pTemperatureSensor;
	private PressureSensorElements pPressureSensor;
	private TouchSensorElements pTouchSensor;
	private LightSensorElements pLightSensor;
	private SmokeSensorElements pSmokeSensor;
	private CO2SensorElements pCO2Sensor;
	private InfraredLightSensorElements pInfraredLightSensor;
	private HasIntegerValue_ImplElements pHasIntegerValue_Impl;
	private HasBooleanValue_ImplElements pHasBooleanValue_Impl;
	private HumiditySensorElements pHumiditySensor;
	private EBooleanElements pEBoolean;
	private EIntElements pEInt;
	private CTSElements pCTS;
	private AccessControlElements pAccessControl;
	private CalendarSystemElements pCalendarSystem;
	private MeetingScheduleSystemElements pMeetingScheduleSystem;
	private ComponentElements pComponent;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	{Model} "model" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
	//	(defineComponents+=ModelDefinedComponents defineComponents+=ModelDefinedComponents*)? (buildings+=Building
	//	buildings+=Building*)? "}";
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Actuator:
	//	LightSwitchActuator | WindowActuator | HumidifierActuator | DoorActuator | SMSActuator | RadiatorActuator |
	//	DatabaseActuator | AudioAlarmActuator | SetsOpenCloseState_Impl | SetsOnOffState_Impl | SetStringState_Impl;
	public ActuatorElements getActuatorAccess() {
		return (pActuator != null) ? pActuator : (pActuator = new ActuatorElements());
	}
	
	public ParserRule getActuatorRule() {
		return getActuatorAccess().getRule();
	}

	//Sensor:
	//	MotionSensor | TemperatureSensor | PressureSensor | TouchSensor | LightSensor | SmokeSensor | CO2Sensor |
	//	InfraredLightSensor | HasIntegerValue_Impl | HasBooleanValue_Impl | HumiditySensor;
	public SensorElements getSensorAccess() {
		return (pSensor != null) ? pSensor : (pSensor = new SensorElements());
	}
	
	public ParserRule getSensorRule() {
		return getSensorAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//Building:
	//	{Building} "dec" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
	//	("ctsSystem" ctsSystem=CTS)? ("accessControl" accessControl=AccessControl)? ("calendarSystem"
	//	calendarSystem=CalendarSystem)? ("meetingScheduleSystem" meetingScheduleSystem=MeetingScheduleSystem)?
	//	(declareComponents+=Component declareComponents+=Component*)? "}";
	public BuildingElements getBuildingAccess() {
		return (pBuilding != null) ? pBuilding : (pBuilding = new BuildingElements());
	}
	
	public ParserRule getBuildingRule() {
		return getBuildingAccess().getRule();
	}

	//ModelDefinedComponents:
	//	{ModelDefinedComponents} "def" name=EString "{" (declareComponents+=Component declareComponents+=Component*)? "}";
	public ModelDefinedComponentsElements getModelDefinedComponentsAccess() {
		return (pModelDefinedComponents != null) ? pModelDefinedComponents : (pModelDefinedComponents = new ModelDefinedComponentsElements());
	}
	
	public ParserRule getModelDefinedComponentsRule() {
		return getModelDefinedComponentsAccess().getRule();
	}

	//LightSwitchActuator:
	//	{LightSwitchActuator} "LightSwitchActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
	public LightSwitchActuatorElements getLightSwitchActuatorAccess() {
		return (pLightSwitchActuator != null) ? pLightSwitchActuator : (pLightSwitchActuator = new LightSwitchActuatorElements());
	}
	
	public ParserRule getLightSwitchActuatorRule() {
		return getLightSwitchActuatorAccess().getRule();
	}

	//WindowActuator:
	//	{WindowActuator} "WindowActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}";
	public WindowActuatorElements getWindowActuatorAccess() {
		return (pWindowActuator != null) ? pWindowActuator : (pWindowActuator = new WindowActuatorElements());
	}
	
	public ParserRule getWindowActuatorRule() {
		return getWindowActuatorAccess().getRule();
	}

	//HumidifierActuator:
	//	{HumidifierActuator} "HumidifierActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
	public HumidifierActuatorElements getHumidifierActuatorAccess() {
		return (pHumidifierActuator != null) ? pHumidifierActuator : (pHumidifierActuator = new HumidifierActuatorElements());
	}
	
	public ParserRule getHumidifierActuatorRule() {
		return getHumidifierActuatorAccess().getRule();
	}

	//DoorActuator:
	//	{DoorActuator} "DoorActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}";
	public DoorActuatorElements getDoorActuatorAccess() {
		return (pDoorActuator != null) ? pDoorActuator : (pDoorActuator = new DoorActuatorElements());
	}
	
	public ParserRule getDoorActuatorRule() {
		return getDoorActuatorAccess().getRule();
	}

	//SMSActuator:
	//	{SMSActuator} "SMSActuator" name=EString "{" ("valueState" valueState=EString)? "}";
	public SMSActuatorElements getSMSActuatorAccess() {
		return (pSMSActuator != null) ? pSMSActuator : (pSMSActuator = new SMSActuatorElements());
	}
	
	public ParserRule getSMSActuatorRule() {
		return getSMSActuatorAccess().getRule();
	}

	//RadiatorActuator:
	//	{RadiatorActuator} "RadiatorActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
	public RadiatorActuatorElements getRadiatorActuatorAccess() {
		return (pRadiatorActuator != null) ? pRadiatorActuator : (pRadiatorActuator = new RadiatorActuatorElements());
	}
	
	public ParserRule getRadiatorActuatorRule() {
		return getRadiatorActuatorAccess().getRule();
	}

	//DatabaseActuator:
	//	{DatabaseActuator} "DatabaseActuator" name=EString "{" ("valueState" valueState=EString)? "}";
	public DatabaseActuatorElements getDatabaseActuatorAccess() {
		return (pDatabaseActuator != null) ? pDatabaseActuator : (pDatabaseActuator = new DatabaseActuatorElements());
	}
	
	public ParserRule getDatabaseActuatorRule() {
		return getDatabaseActuatorAccess().getRule();
	}

	//AudioAlarmActuator:
	//	{AudioAlarmActuator} "AudioAlarmActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
	public AudioAlarmActuatorElements getAudioAlarmActuatorAccess() {
		return (pAudioAlarmActuator != null) ? pAudioAlarmActuator : (pAudioAlarmActuator = new AudioAlarmActuatorElements());
	}
	
	public ParserRule getAudioAlarmActuatorRule() {
		return getAudioAlarmActuatorAccess().getRule();
	}

	//SetsOpenCloseState_Impl returns SetsOpenCloseState:
	//	{SetsOpenCloseState} "SetsOpenCloseState" name=EString "{" ("valueState" valueState=OpenClose)? "}";
	public SetsOpenCloseState_ImplElements getSetsOpenCloseState_ImplAccess() {
		return (pSetsOpenCloseState_Impl != null) ? pSetsOpenCloseState_Impl : (pSetsOpenCloseState_Impl = new SetsOpenCloseState_ImplElements());
	}
	
	public ParserRule getSetsOpenCloseState_ImplRule() {
		return getSetsOpenCloseState_ImplAccess().getRule();
	}

	//SetsOnOffState_Impl returns SetsOnOffState:
	//	{SetsOnOffState} "SetsOnOffState" name=EString "{" ("valueState" valueState=OnOff)? "}";
	public SetsOnOffState_ImplElements getSetsOnOffState_ImplAccess() {
		return (pSetsOnOffState_Impl != null) ? pSetsOnOffState_Impl : (pSetsOnOffState_Impl = new SetsOnOffState_ImplElements());
	}
	
	public ParserRule getSetsOnOffState_ImplRule() {
		return getSetsOnOffState_ImplAccess().getRule();
	}

	//SetStringState_Impl returns SetStringState:
	//	{SetStringState} "SetStringState" name=EString "{" ("valueState" valueState=EString)? "}";
	public SetStringState_ImplElements getSetStringState_ImplAccess() {
		return (pSetStringState_Impl != null) ? pSetStringState_Impl : (pSetStringState_Impl = new SetStringState_ImplElements());
	}
	
	public ParserRule getSetStringState_ImplRule() {
		return getSetStringState_ImplAccess().getRule();
	}

	/// * TODO: implement this rule and an appropriate IValueConverter * / OnOff:
	//	"OnOff";
	public OnOffElements getOnOffAccess() {
		return (pOnOff != null) ? pOnOff : (pOnOff = new OnOffElements());
	}
	
	public ParserRule getOnOffRule() {
		return getOnOffAccess().getRule();
	}

	/// * TODO: implement this rule and an appropriate IValueConverter * / OpenClose:
	//	"OpenClose";
	public OpenCloseElements getOpenCloseAccess() {
		return (pOpenClose != null) ? pOpenClose : (pOpenClose = new OpenCloseElements());
	}
	
	public ParserRule getOpenCloseRule() {
		return getOpenCloseAccess().getRule();
	}

	//MotionSensor:
	//	{MotionSensor} valueState?="valueState"? "MotionSensor" name=EString;
	public MotionSensorElements getMotionSensorAccess() {
		return (pMotionSensor != null) ? pMotionSensor : (pMotionSensor = new MotionSensorElements());
	}
	
	public ParserRule getMotionSensorRule() {
		return getMotionSensorAccess().getRule();
	}

	//TemperatureSensor:
	//	{TemperatureSensor} "TemperatureSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
	public TemperatureSensorElements getTemperatureSensorAccess() {
		return (pTemperatureSensor != null) ? pTemperatureSensor : (pTemperatureSensor = new TemperatureSensorElements());
	}
	
	public ParserRule getTemperatureSensorRule() {
		return getTemperatureSensorAccess().getRule();
	}

	//PressureSensor:
	//	{PressureSensor} "PressureSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
	public PressureSensorElements getPressureSensorAccess() {
		return (pPressureSensor != null) ? pPressureSensor : (pPressureSensor = new PressureSensorElements());
	}
	
	public ParserRule getPressureSensorRule() {
		return getPressureSensorAccess().getRule();
	}

	//TouchSensor:
	//	{TouchSensor} valueState?="valueState"? "TouchSensor" name=EString;
	public TouchSensorElements getTouchSensorAccess() {
		return (pTouchSensor != null) ? pTouchSensor : (pTouchSensor = new TouchSensorElements());
	}
	
	public ParserRule getTouchSensorRule() {
		return getTouchSensorAccess().getRule();
	}

	//LightSensor:
	//	{LightSensor} "LightSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
	public LightSensorElements getLightSensorAccess() {
		return (pLightSensor != null) ? pLightSensor : (pLightSensor = new LightSensorElements());
	}
	
	public ParserRule getLightSensorRule() {
		return getLightSensorAccess().getRule();
	}

	//SmokeSensor:
	//	{SmokeSensor} "SmokeSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
	public SmokeSensorElements getSmokeSensorAccess() {
		return (pSmokeSensor != null) ? pSmokeSensor : (pSmokeSensor = new SmokeSensorElements());
	}
	
	public ParserRule getSmokeSensorRule() {
		return getSmokeSensorAccess().getRule();
	}

	//CO2Sensor:
	//	{CO2Sensor} "CO2Sensor" name=EString "{" ("valueState" valueState=EInt)? "}";
	public CO2SensorElements getCO2SensorAccess() {
		return (pCO2Sensor != null) ? pCO2Sensor : (pCO2Sensor = new CO2SensorElements());
	}
	
	public ParserRule getCO2SensorRule() {
		return getCO2SensorAccess().getRule();
	}

	//InfraredLightSensor:
	//	{InfraredLightSensor} "InfraredLightSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
	public InfraredLightSensorElements getInfraredLightSensorAccess() {
		return (pInfraredLightSensor != null) ? pInfraredLightSensor : (pInfraredLightSensor = new InfraredLightSensorElements());
	}
	
	public ParserRule getInfraredLightSensorRule() {
		return getInfraredLightSensorAccess().getRule();
	}

	//HasIntegerValue_Impl returns HasIntegerValue:
	//	{HasIntegerValue} "HasIntegerValue" name=EString "{" ("valueState" valueState=EInt)? "}";
	public HasIntegerValue_ImplElements getHasIntegerValue_ImplAccess() {
		return (pHasIntegerValue_Impl != null) ? pHasIntegerValue_Impl : (pHasIntegerValue_Impl = new HasIntegerValue_ImplElements());
	}
	
	public ParserRule getHasIntegerValue_ImplRule() {
		return getHasIntegerValue_ImplAccess().getRule();
	}

	//HasBooleanValue_Impl returns HasBooleanValue:
	//	{HasBooleanValue} valueState?="valueState"? "HasBooleanValue" name=EString;
	public HasBooleanValue_ImplElements getHasBooleanValue_ImplAccess() {
		return (pHasBooleanValue_Impl != null) ? pHasBooleanValue_Impl : (pHasBooleanValue_Impl = new HasBooleanValue_ImplElements());
	}
	
	public ParserRule getHasBooleanValue_ImplRule() {
		return getHasBooleanValue_ImplAccess().getRule();
	}

	//HumiditySensor:
	//	{HumiditySensor} "HumiditySensor" name=EString "{" ("valueState" valueState=EInt)? "}";
	public HumiditySensorElements getHumiditySensorAccess() {
		return (pHumiditySensor != null) ? pHumiditySensor : (pHumiditySensor = new HumiditySensorElements());
	}
	
	public ParserRule getHumiditySensorRule() {
		return getHumiditySensorAccess().getRule();
	}

	//EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return (pEBoolean != null) ? pEBoolean : (pEBoolean = new EBooleanElements());
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return (pEInt != null) ? pEInt : (pEInt = new EIntElements());
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//CTS:
	//	{CTS} "CTS" "{" ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
	//	("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")? "}";
	public CTSElements getCTSAccess() {
		return (pCTS != null) ? pCTS : (pCTS = new CTSElements());
	}
	
	public ParserRule getCTSRule() {
		return getCTSAccess().getRule();
	}

	//AccessControl:
	//	{AccessControl} "AccessControl" "{" ("accessControlSensors" "{" accessControlSensors+=Sensor (","
	//	accessControlSensors+=Sensor)* "}")? ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
	//	accessControlDoorLockActuator+=Actuator)* "}")? "}";
	public AccessControlElements getAccessControlAccess() {
		return (pAccessControl != null) ? pAccessControl : (pAccessControl = new AccessControlElements());
	}
	
	public ParserRule getAccessControlRule() {
		return getAccessControlAccess().getRule();
	}

	//CalendarSystem:
	//	{CalendarSystem} "CalendarSystem";
	public CalendarSystemElements getCalendarSystemAccess() {
		return (pCalendarSystem != null) ? pCalendarSystem : (pCalendarSystem = new CalendarSystemElements());
	}
	
	public ParserRule getCalendarSystemRule() {
		return getCalendarSystemAccess().getRule();
	}

	//MeetingScheduleSystem:
	//	{MeetingScheduleSystem} "MeetingScheduleSystem";
	public MeetingScheduleSystemElements getMeetingScheduleSystemAccess() {
		return (pMeetingScheduleSystem != null) ? pMeetingScheduleSystem : (pMeetingScheduleSystem = new MeetingScheduleSystemElements());
	}
	
	public ParserRule getMeetingScheduleSystemRule() {
		return getMeetingScheduleSystemAccess().getRule();
	}

	//Component:
	//	{Component} "dec" name=EString "{" ("sensors" sensors=[Sensor|EString])? ("actuators" actuators=[Actuator|EString])?
	//	(declareComponents+=Component declareComponents+=Component*)? (":" extends+=Component extends+=Component*)? "}";
	public ComponentElements getComponentAccess() {
		return (pComponent != null) ? pComponent : (pComponent = new ComponentElements());
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
