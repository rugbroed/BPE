/*
* generated by Xtext
*/
package org.xtext.example.mydsl.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.xtext.example.mydsl.services.MyDslGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class MyDslParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private MyDslGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Group(this, this, 0, inst);
			case 1: return new Actuator_Alternatives(this, this, 1, inst);
			case 2: return new Sensor_Alternatives(this, this, 2, inst);
			case 3: return new Building_Group(this, this, 3, inst);
			case 4: return new ModelDefinedComponents_Group(this, this, 4, inst);
			case 5: return new LightSwitchActuator_Group(this, this, 5, inst);
			case 6: return new WindowActuator_Group(this, this, 6, inst);
			case 7: return new HumidifierActuator_Group(this, this, 7, inst);
			case 8: return new DoorActuator_Group(this, this, 8, inst);
			case 9: return new SMSActuator_Group(this, this, 9, inst);
			case 10: return new RadiatorActuator_Group(this, this, 10, inst);
			case 11: return new DatabaseActuator_Group(this, this, 11, inst);
			case 12: return new AudioAlarmActuator_Group(this, this, 12, inst);
			case 13: return new SetsOpenCloseState_Impl_Group(this, this, 13, inst);
			case 14: return new SetsOnOffState_Impl_Group(this, this, 14, inst);
			case 15: return new SetStringState_Impl_Group(this, this, 15, inst);
			case 16: return new MotionSensor_Group(this, this, 16, inst);
			case 17: return new TemperatureSensor_Group(this, this, 17, inst);
			case 18: return new PressureSensor_Group(this, this, 18, inst);
			case 19: return new TouchSensor_Group(this, this, 19, inst);
			case 20: return new LightSensor_Group(this, this, 20, inst);
			case 21: return new SmokeSensor_Group(this, this, 21, inst);
			case 22: return new CO2Sensor_Group(this, this, 22, inst);
			case 23: return new InfraredLightSensor_Group(this, this, 23, inst);
			case 24: return new HasIntegerValue_Impl_Group(this, this, 24, inst);
			case 25: return new HasBooleanValue_Impl_Group(this, this, 25, inst);
			case 26: return new HumiditySensor_Group(this, this, 26, inst);
			case 27: return new CTS_Group(this, this, 27, inst);
			case 28: return new AccessControl_Group(this, this, 28, inst);
			case 29: return new CalendarSystem_Group(this, this, 29, inst);
			case 30: return new MeetingScheduleSystem_Group(this, this, 30, inst);
			case 31: return new Component_Group(this, this, 31, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Model ****************
 *
 * Model:
 * 	{Model} "model" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
 * 	(defineComponents+=ModelDefinedComponents defineComponents+=ModelDefinedComponents*)? (buildings+=Building
 * 	buildings+=Building*)? "}";
 *
 **/

// {Model} "model" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
// (defineComponents+=ModelDefinedComponents defineComponents+=ModelDefinedComponents*)? (buildings+=Building
// buildings+=Building*)? "}"
protected class Model_Group extends GroupToken {
	
	public Model_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelAccess().getModelAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Model}
protected class Model_ModelAction_0 extends ActionToken  {

	public Model_ModelAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getModelAccess().getModelAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "model"
protected class Model_ModelKeyword_1 extends KeywordToken  {
	
	public Model_ModelKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getModelKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_ModelAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Model_NameAssignment_2 extends AssignmentToken  {
	
	public Model_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_ModelKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getModelAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Model_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Model_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("actuators" actuators=[Actuator|EString])?
protected class Model_Group_4 extends GroupToken {
	
	public Model_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_ActuatorsAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "actuators"
protected class Model_ActuatorsKeyword_4_0 extends KeywordToken  {
	
	public Model_ActuatorsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getActuatorsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// actuators=[Actuator|EString]
protected class Model_ActuatorsAssignment_4_1 extends AssignmentToken  {
	
	public Model_ActuatorsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getActuatorsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_ActuatorsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actuators",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actuators");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelAccess().getActuatorsActuatorCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getModelAccess().getActuatorsActuatorCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("sensors" sensors=[Sensor|EString])?
protected class Model_Group_5 extends GroupToken {
	
	public Model_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_SensorsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sensors"
protected class Model_SensorsKeyword_5_0 extends KeywordToken  {
	
	public Model_SensorsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getSensorsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// sensors=[Sensor|EString]
protected class Model_SensorsAssignment_5_1 extends AssignmentToken  {
	
	public Model_SensorsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getSensorsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_SensorsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sensors",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sensors");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelAccess().getSensorsSensorCrossReference_5_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getModelAccess().getSensorsSensorCrossReference_5_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// (defineComponents+=ModelDefinedComponents defineComponents+=ModelDefinedComponents*)?
protected class Model_Group_6 extends GroupToken {
	
	public Model_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_DefineComponentsAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_DefineComponentsAssignment_6_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// defineComponents+=ModelDefinedComponents
protected class Model_DefineComponentsAssignment_6_0 extends AssignmentToken  {
	
	public Model_DefineComponentsAssignment_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getDefineComponentsAssignment_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelDefinedComponents_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defineComponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defineComponents");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelDefinedComponentsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getDefineComponentsModelDefinedComponentsParserRuleCall_6_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Model_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Model_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// defineComponents+=ModelDefinedComponents*
protected class Model_DefineComponentsAssignment_6_1 extends AssignmentToken  {
	
	public Model_DefineComponentsAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getDefineComponentsAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelDefinedComponents_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("defineComponents",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("defineComponents");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelDefinedComponentsRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getDefineComponentsModelDefinedComponentsParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_DefineComponentsAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Model_DefineComponentsAssignment_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (buildings+=Building buildings+=Building*)?
protected class Model_Group_7 extends GroupToken {
	
	public Model_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_BuildingsAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_BuildingsAssignment_7_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// buildings+=Building
protected class Model_BuildingsAssignment_7_0 extends AssignmentToken  {
	
	public Model_BuildingsAssignment_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getBuildingsAssignment_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("buildings",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("buildings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBuildingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getBuildingsBuildingParserRuleCall_7_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Model_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Model_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new Model_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// buildings+=Building*
protected class Model_BuildingsAssignment_7_1 extends AssignmentToken  {
	
	public Model_BuildingsAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelAccess().getBuildingsAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("buildings",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("buildings");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBuildingRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelAccess().getBuildingsBuildingParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Model_BuildingsAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Model_BuildingsAssignment_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Model_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public Model_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Model_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Model_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Model_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Model_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Model_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule Model ****************/


/************ begin Rule Actuator ****************
 *
 * Actuator:
 * 	LightSwitchActuator | WindowActuator | HumidifierActuator | DoorActuator | SMSActuator | RadiatorActuator |
 * 	DatabaseActuator | AudioAlarmActuator | SetsOpenCloseState_Impl | SetsOnOffState_Impl | SetStringState_Impl;
 *
 **/

// LightSwitchActuator | WindowActuator | HumidifierActuator | DoorActuator | SMSActuator | RadiatorActuator |
// DatabaseActuator | AudioAlarmActuator | SetsOpenCloseState_Impl | SetsOnOffState_Impl | SetStringState_Impl
protected class Actuator_Alternatives extends AlternativesToken {

	public Actuator_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getActuatorAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Actuator_LightSwitchActuatorParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Actuator_WindowActuatorParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Actuator_HumidifierActuatorParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Actuator_DoorActuatorParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Actuator_SMSActuatorParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Actuator_RadiatorActuatorParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Actuator_DatabaseActuatorParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Actuator_AudioAlarmActuatorParserRuleCall_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Actuator_SetsOpenCloseState_ImplParserRuleCall_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Actuator_SetsOnOffState_ImplParserRuleCall_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Actuator_SetStringState_ImplParserRuleCall_10(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDatabaseActuatorAccess().getDatabaseActuatorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getDoorActuatorAccess().getDoorActuatorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSMSActuatorAccess().getSMSActuatorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSetStringState_ImplAccess().getSetStringStateAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSetsOnOffState_ImplAccess().getSetsOnOffStateAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSetsOpenCloseState_ImplAccess().getSetsOpenCloseStateAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getWindowActuatorAccess().getWindowActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// LightSwitchActuator
protected class Actuator_LightSwitchActuatorParserRuleCall_0 extends RuleCallToken {
	
	public Actuator_LightSwitchActuatorParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getLightSwitchActuatorParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(LightSwitchActuator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// WindowActuator
protected class Actuator_WindowActuatorParserRuleCall_1 extends RuleCallToken {
	
	public Actuator_WindowActuatorParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getWindowActuatorParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getWindowActuatorAccess().getWindowActuatorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(WindowActuator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// HumidifierActuator
protected class Actuator_HumidifierActuatorParserRuleCall_2 extends RuleCallToken {
	
	public Actuator_HumidifierActuatorParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getHumidifierActuatorParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(HumidifierActuator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DoorActuator
protected class Actuator_DoorActuatorParserRuleCall_3 extends RuleCallToken {
	
	public Actuator_DoorActuatorParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getDoorActuatorParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDoorActuatorAccess().getDoorActuatorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(DoorActuator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// SMSActuator
protected class Actuator_SMSActuatorParserRuleCall_4 extends RuleCallToken {
	
	public Actuator_SMSActuatorParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getSMSActuatorParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSMSActuatorAccess().getSMSActuatorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(SMSActuator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// RadiatorActuator
protected class Actuator_RadiatorActuatorParserRuleCall_5 extends RuleCallToken {
	
	public Actuator_RadiatorActuatorParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getRadiatorActuatorParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(RadiatorActuator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// DatabaseActuator
protected class Actuator_DatabaseActuatorParserRuleCall_6 extends RuleCallToken {
	
	public Actuator_DatabaseActuatorParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getDatabaseActuatorParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDatabaseActuatorAccess().getDatabaseActuatorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(DatabaseActuator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// AudioAlarmActuator
protected class Actuator_AudioAlarmActuatorParserRuleCall_7 extends RuleCallToken {
	
	public Actuator_AudioAlarmActuatorParserRuleCall_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getAudioAlarmActuatorParserRuleCall_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(AudioAlarmActuator_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// SetsOpenCloseState_Impl
protected class Actuator_SetsOpenCloseState_ImplParserRuleCall_8 extends RuleCallToken {
	
	public Actuator_SetsOpenCloseState_ImplParserRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getSetsOpenCloseState_ImplParserRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetsOpenCloseState_ImplAccess().getSetsOpenCloseStateAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(SetsOpenCloseState_Impl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// SetsOnOffState_Impl
protected class Actuator_SetsOnOffState_ImplParserRuleCall_9 extends RuleCallToken {
	
	public Actuator_SetsOnOffState_ImplParserRuleCall_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getSetsOnOffState_ImplParserRuleCall_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetsOnOffState_ImplAccess().getSetsOnOffStateAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(SetsOnOffState_Impl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// SetStringState_Impl
protected class Actuator_SetStringState_ImplParserRuleCall_10 extends RuleCallToken {
	
	public Actuator_SetStringState_ImplParserRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getActuatorAccess().getSetStringState_ImplParserRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetStringState_ImplAccess().getSetStringStateAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(SetStringState_Impl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Actuator ****************/


/************ begin Rule Sensor ****************
 *
 * Sensor:
 * 	MotionSensor | TemperatureSensor | PressureSensor | TouchSensor | LightSensor | SmokeSensor | CO2Sensor |
 * 	InfraredLightSensor | HasIntegerValue_Impl | HasBooleanValue_Impl | HumiditySensor;
 *
 **/

// MotionSensor | TemperatureSensor | PressureSensor | TouchSensor | LightSensor | SmokeSensor | CO2Sensor |
// InfraredLightSensor | HasIntegerValue_Impl | HasBooleanValue_Impl | HumiditySensor
protected class Sensor_Alternatives extends AlternativesToken {

	public Sensor_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getSensorAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sensor_MotionSensorParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Sensor_TemperatureSensorParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Sensor_PressureSensorParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Sensor_TouchSensorParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Sensor_LightSensorParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Sensor_SmokeSensorParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Sensor_CO2SensorParserRuleCall_6(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Sensor_InfraredLightSensorParserRuleCall_7(lastRuleCallOrigin, this, 7, inst);
			case 8: return new Sensor_HasIntegerValue_ImplParserRuleCall_8(lastRuleCallOrigin, this, 8, inst);
			case 9: return new Sensor_HasBooleanValue_ImplParserRuleCall_9(lastRuleCallOrigin, this, 9, inst);
			case 10: return new Sensor_HumiditySensorParserRuleCall_10(lastRuleCallOrigin, this, 10, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCO2SensorAccess().getCO2SensorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getHasBooleanValue_ImplAccess().getHasBooleanValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getHasIntegerValue_ImplAccess().getHasIntegerValueAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getHumiditySensorAccess().getHumiditySensorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLightSensorAccess().getLightSensorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getMotionSensorAccess().getMotionSensorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getPressureSensorAccess().getPressureSensorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSmokeSensorAccess().getSmokeSensorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTemperatureSensorAccess().getTemperatureSensorAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getTouchSensorAccess().getTouchSensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// MotionSensor
protected class Sensor_MotionSensorParserRuleCall_0 extends RuleCallToken {
	
	public Sensor_MotionSensorParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getMotionSensorParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MotionSensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMotionSensorAccess().getMotionSensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(MotionSensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// TemperatureSensor
protected class Sensor_TemperatureSensorParserRuleCall_1 extends RuleCallToken {
	
	public Sensor_TemperatureSensorParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getTemperatureSensorParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTemperatureSensorAccess().getTemperatureSensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TemperatureSensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// PressureSensor
protected class Sensor_PressureSensorParserRuleCall_2 extends RuleCallToken {
	
	public Sensor_PressureSensorParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getPressureSensorParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPressureSensorAccess().getPressureSensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(PressureSensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// TouchSensor
protected class Sensor_TouchSensorParserRuleCall_3 extends RuleCallToken {
	
	public Sensor_TouchSensorParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getTouchSensorParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TouchSensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTouchSensorAccess().getTouchSensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(TouchSensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// LightSensor
protected class Sensor_LightSensorParserRuleCall_4 extends RuleCallToken {
	
	public Sensor_LightSensorParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getLightSensorParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLightSensorAccess().getLightSensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(LightSensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// SmokeSensor
protected class Sensor_SmokeSensorParserRuleCall_5 extends RuleCallToken {
	
	public Sensor_SmokeSensorParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getSmokeSensorParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSmokeSensorAccess().getSmokeSensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(SmokeSensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// CO2Sensor
protected class Sensor_CO2SensorParserRuleCall_6 extends RuleCallToken {
	
	public Sensor_CO2SensorParserRuleCall_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getCO2SensorParserRuleCall_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCO2SensorAccess().getCO2SensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(CO2Sensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// InfraredLightSensor
protected class Sensor_InfraredLightSensorParserRuleCall_7 extends RuleCallToken {
	
	public Sensor_InfraredLightSensorParserRuleCall_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getInfraredLightSensorParserRuleCall_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(InfraredLightSensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// HasIntegerValue_Impl
protected class Sensor_HasIntegerValue_ImplParserRuleCall_8 extends RuleCallToken {
	
	public Sensor_HasIntegerValue_ImplParserRuleCall_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getHasIntegerValue_ImplParserRuleCall_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHasIntegerValue_ImplAccess().getHasIntegerValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(HasIntegerValue_Impl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// HasBooleanValue_Impl
protected class Sensor_HasBooleanValue_ImplParserRuleCall_9 extends RuleCallToken {
	
	public Sensor_HasBooleanValue_ImplParserRuleCall_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getHasBooleanValue_ImplParserRuleCall_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasBooleanValue_Impl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHasBooleanValue_ImplAccess().getHasBooleanValueAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(HasBooleanValue_Impl_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// HumiditySensor
protected class Sensor_HumiditySensorParserRuleCall_10 extends RuleCallToken {
	
	public Sensor_HumiditySensorParserRuleCall_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getSensorAccess().getHumiditySensorParserRuleCall_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHumiditySensorAccess().getHumiditySensorAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(HumiditySensor_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Sensor ****************/



/************ begin Rule Building ****************
 *
 * Building:
 * 	{Building} "dec" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
 * 	("ctsSystem" ctsSystem=CTS)? ("accessControl" accessControl=AccessControl)? ("calendarSystem"
 * 	calendarSystem=CalendarSystem)? ("meetingScheduleSystem" meetingScheduleSystem=MeetingScheduleSystem)?
 * 	(declareComponents+=Component declareComponents+=Component*)? "}";
 *
 **/

// {Building} "dec" name=EString "{" ("actuators" actuators=[Actuator|EString])? ("sensors" sensors=[Sensor|EString])?
// ("ctsSystem" ctsSystem=CTS)? ("accessControl" accessControl=AccessControl)? ("calendarSystem"
// calendarSystem=CalendarSystem)? ("meetingScheduleSystem" meetingScheduleSystem=MeetingScheduleSystem)?
// (declareComponents+=Component declareComponents+=Component*)? "}"
protected class Building_Group extends GroupToken {
	
	public Building_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBuildingAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_RightCurlyBracketKeyword_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBuildingAccess().getBuildingAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Building}
protected class Building_BuildingAction_0 extends ActionToken  {

	public Building_BuildingAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getBuildingAccess().getBuildingAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "dec"
protected class Building_DecKeyword_1 extends KeywordToken  {
	
	public Building_DecKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getDecKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_BuildingAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Building_NameAssignment_2 extends AssignmentToken  {
	
	public Building_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_DecKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBuildingAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getBuildingAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Building_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Building_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("actuators" actuators=[Actuator|EString])?
protected class Building_Group_4 extends GroupToken {
	
	public Building_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBuildingAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_ActuatorsAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "actuators"
protected class Building_ActuatorsKeyword_4_0 extends KeywordToken  {
	
	public Building_ActuatorsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getActuatorsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// actuators=[Actuator|EString]
protected class Building_ActuatorsAssignment_4_1 extends AssignmentToken  {
	
	public Building_ActuatorsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getActuatorsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_ActuatorsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actuators",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actuators");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBuildingAccess().getActuatorsActuatorCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBuildingAccess().getActuatorsActuatorCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("sensors" sensors=[Sensor|EString])?
protected class Building_Group_5 extends GroupToken {
	
	public Building_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBuildingAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_SensorsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sensors"
protected class Building_SensorsKeyword_5_0 extends KeywordToken  {
	
	public Building_SensorsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getSensorsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Building_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// sensors=[Sensor|EString]
protected class Building_SensorsAssignment_5_1 extends AssignmentToken  {
	
	public Building_SensorsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getSensorsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_SensorsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sensors",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sensors");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBuildingAccess().getSensorsSensorCrossReference_5_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getBuildingAccess().getSensorsSensorCrossReference_5_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("ctsSystem" ctsSystem=CTS)?
protected class Building_Group_6 extends GroupToken {
	
	public Building_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBuildingAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_CtsSystemAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "ctsSystem"
protected class Building_CtsSystemKeyword_6_0 extends KeywordToken  {
	
	public Building_CtsSystemKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getCtsSystemKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Building_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Building_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// ctsSystem=CTS
protected class Building_CtsSystemAssignment_6_1 extends AssignmentToken  {
	
	public Building_CtsSystemAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getCtsSystemAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ctsSystem",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ctsSystem");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCTSRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBuildingAccess().getCtsSystemCTSParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Building_CtsSystemKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("accessControl" accessControl=AccessControl)?
protected class Building_Group_7 extends GroupToken {
	
	public Building_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBuildingAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_AccessControlAssignment_7_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "accessControl"
protected class Building_AccessControlKeyword_7_0 extends KeywordToken  {
	
	public Building_AccessControlKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getAccessControlKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Building_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Building_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Building_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// accessControl=AccessControl
protected class Building_AccessControlAssignment_7_1 extends AssignmentToken  {
	
	public Building_AccessControlAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getAccessControlAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("accessControl",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessControl");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAccessControlRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBuildingAccess().getAccessControlAccessControlParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Building_AccessControlKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("calendarSystem" calendarSystem=CalendarSystem)?
protected class Building_Group_8 extends GroupToken {
	
	public Building_Group_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBuildingAccess().getGroup_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_CalendarSystemAssignment_8_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "calendarSystem"
protected class Building_CalendarSystemKeyword_8_0 extends KeywordToken  {
	
	public Building_CalendarSystemKeyword_8_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getCalendarSystemKeyword_8_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Building_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Building_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Building_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Building_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// calendarSystem=CalendarSystem
protected class Building_CalendarSystemAssignment_8_1 extends AssignmentToken  {
	
	public Building_CalendarSystemAssignment_8_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getCalendarSystemAssignment_8_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CalendarSystem_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("calendarSystem",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("calendarSystem");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCalendarSystemRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBuildingAccess().getCalendarSystemCalendarSystemParserRuleCall_8_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Building_CalendarSystemKeyword_8_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("meetingScheduleSystem" meetingScheduleSystem=MeetingScheduleSystem)?
protected class Building_Group_9 extends GroupToken {
	
	public Building_Group_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBuildingAccess().getGroup_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_MeetingScheduleSystemAssignment_9_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "meetingScheduleSystem"
protected class Building_MeetingScheduleSystemKeyword_9_0 extends KeywordToken  {
	
	public Building_MeetingScheduleSystemKeyword_9_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getMeetingScheduleSystemKeyword_9_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_Group_8(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Building_Group_7(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Building_Group_6(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Building_Group_5(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Building_Group_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Building_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}

// meetingScheduleSystem=MeetingScheduleSystem
protected class Building_MeetingScheduleSystemAssignment_9_1 extends AssignmentToken  {
	
	public Building_MeetingScheduleSystemAssignment_9_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getMeetingScheduleSystemAssignment_9_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MeetingScheduleSystem_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("meetingScheduleSystem",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("meetingScheduleSystem");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getMeetingScheduleSystemRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBuildingAccess().getMeetingScheduleSystemMeetingScheduleSystemParserRuleCall_9_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Building_MeetingScheduleSystemKeyword_9_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (declareComponents+=Component declareComponents+=Component*)?
protected class Building_Group_10 extends GroupToken {
	
	public Building_Group_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBuildingAccess().getGroup_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_DeclareComponentsAssignment_10_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Building_DeclareComponentsAssignment_10_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// declareComponents+=Component
protected class Building_DeclareComponentsAssignment_10_0 extends AssignmentToken  {
	
	public Building_DeclareComponentsAssignment_10_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getDeclareComponentsAssignment_10_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declareComponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declareComponents");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBuildingAccess().getDeclareComponentsComponentParserRuleCall_10_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Building_Group_9(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Building_Group_8(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Building_Group_7(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new Building_Group_6(lastRuleCallOrigin, next, actIndex, consumed);
			case 4: return new Building_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 5: return new Building_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 6: return new Building_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// declareComponents+=Component*
protected class Building_DeclareComponentsAssignment_10_1 extends AssignmentToken  {
	
	public Building_DeclareComponentsAssignment_10_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBuildingAccess().getDeclareComponentsAssignment_10_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declareComponents",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declareComponents");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBuildingAccess().getDeclareComponentsComponentParserRuleCall_10_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Building_DeclareComponentsAssignment_10_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Building_DeclareComponentsAssignment_10_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Building_RightCurlyBracketKeyword_11 extends KeywordToken  {
	
	public Building_RightCurlyBracketKeyword_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBuildingAccess().getRightCurlyBracketKeyword_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Building_Group_10(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Building_Group_9(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Building_Group_8(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Building_Group_7(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Building_Group_6(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Building_Group_5(lastRuleCallOrigin, this, 5, inst);
			case 6: return new Building_Group_4(lastRuleCallOrigin, this, 6, inst);
			case 7: return new Building_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 7, inst);
			default: return null;
		}	
	}

}


/************ end Rule Building ****************/


/************ begin Rule ModelDefinedComponents ****************
 *
 * ModelDefinedComponents:
 * 	{ModelDefinedComponents} "def" name=EString "{" (declareComponents+=Component declareComponents+=Component*)? "}";
 *
 **/

// {ModelDefinedComponents} "def" name=EString "{" (declareComponents+=Component declareComponents+=Component*)? "}"
protected class ModelDefinedComponents_Group extends GroupToken {
	
	public ModelDefinedComponents_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelDefinedComponents_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelDefinedComponentsAccess().getModelDefinedComponentsAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {ModelDefinedComponents}
protected class ModelDefinedComponents_ModelDefinedComponentsAction_0 extends ActionToken  {

	public ModelDefinedComponents_ModelDefinedComponentsAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getModelDefinedComponentsAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "def"
protected class ModelDefinedComponents_DefKeyword_1 extends KeywordToken  {
	
	public ModelDefinedComponents_DefKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getDefKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelDefinedComponents_ModelDefinedComponentsAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class ModelDefinedComponents_NameAssignment_2 extends AssignmentToken  {
	
	public ModelDefinedComponents_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelDefinedComponents_DefKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelDefinedComponentsAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getModelDefinedComponentsAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class ModelDefinedComponents_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public ModelDefinedComponents_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelDefinedComponents_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (declareComponents+=Component declareComponents+=Component*)?
protected class ModelDefinedComponents_Group_4 extends GroupToken {
	
	public ModelDefinedComponents_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelDefinedComponents_DeclareComponentsAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModelDefinedComponents_DeclareComponentsAssignment_4_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// declareComponents+=Component
protected class ModelDefinedComponents_DeclareComponentsAssignment_4_0 extends AssignmentToken  {
	
	public ModelDefinedComponents_DeclareComponentsAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getDeclareComponentsAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declareComponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declareComponents");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelDefinedComponentsAccess().getDeclareComponentsComponentParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModelDefinedComponents_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// declareComponents+=Component*
protected class ModelDefinedComponents_DeclareComponentsAssignment_4_1 extends AssignmentToken  {
	
	public ModelDefinedComponents_DeclareComponentsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getDeclareComponentsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declareComponents",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declareComponents");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelDefinedComponentsAccess().getDeclareComponentsComponentParserRuleCall_4_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModelDefinedComponents_DeclareComponentsAssignment_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ModelDefinedComponents_DeclareComponentsAssignment_4_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class ModelDefinedComponents_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public ModelDefinedComponents_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getModelDefinedComponentsAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelDefinedComponents_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModelDefinedComponents_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule ModelDefinedComponents ****************/


/************ begin Rule LightSwitchActuator ****************
 *
 * LightSwitchActuator:
 * 	{LightSwitchActuator} "LightSwitchActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
 *
 **/

// {LightSwitchActuator} "LightSwitchActuator" name=EString "{" ("valueState" valueState=OnOff)? "}"
protected class LightSwitchActuator_Group extends GroupToken {
	
	public LightSwitchActuator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {LightSwitchActuator}
protected class LightSwitchActuator_LightSwitchActuatorAction_0 extends ActionToken  {

	public LightSwitchActuator_LightSwitchActuatorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "LightSwitchActuator"
protected class LightSwitchActuator_LightSwitchActuatorKeyword_1 extends KeywordToken  {
	
	public LightSwitchActuator_LightSwitchActuatorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getLightSwitchActuatorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_LightSwitchActuatorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class LightSwitchActuator_NameAssignment_2 extends AssignmentToken  {
	
	public LightSwitchActuator_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_LightSwitchActuatorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLightSwitchActuatorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLightSwitchActuatorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class LightSwitchActuator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public LightSwitchActuator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=OnOff)?
protected class LightSwitchActuator_Group_4 extends GroupToken {
	
	public LightSwitchActuator_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class LightSwitchActuator_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public LightSwitchActuator_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=OnOff
protected class LightSwitchActuator_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public LightSwitchActuator_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLightSwitchActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLightSwitchActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class LightSwitchActuator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public LightSwitchActuator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLightSwitchActuatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSwitchActuator_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LightSwitchActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule LightSwitchActuator ****************/


/************ begin Rule WindowActuator ****************
 *
 * WindowActuator:
 * 	{WindowActuator} "WindowActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}";
 *
 **/

// {WindowActuator} "WindowActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}"
protected class WindowActuator_Group extends GroupToken {
	
	public WindowActuator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getWindowActuatorAccess().getWindowActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {WindowActuator}
protected class WindowActuator_WindowActuatorAction_0 extends ActionToken  {

	public WindowActuator_WindowActuatorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getWindowActuatorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "WindowActuator"
protected class WindowActuator_WindowActuatorKeyword_1 extends KeywordToken  {
	
	public WindowActuator_WindowActuatorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getWindowActuatorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_WindowActuatorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class WindowActuator_NameAssignment_2 extends AssignmentToken  {
	
	public WindowActuator_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_WindowActuatorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWindowActuatorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getWindowActuatorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class WindowActuator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public WindowActuator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=OpenClose)?
protected class WindowActuator_Group_4 extends GroupToken {
	
	public WindowActuator_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class WindowActuator_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public WindowActuator_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=OpenClose
protected class WindowActuator_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public WindowActuator_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getWindowActuatorAccess().getValueStateOpenCloseParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getWindowActuatorAccess().getValueStateOpenCloseParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class WindowActuator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public WindowActuator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getWindowActuatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new WindowActuator_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new WindowActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule WindowActuator ****************/


/************ begin Rule HumidifierActuator ****************
 *
 * HumidifierActuator:
 * 	{HumidifierActuator} "HumidifierActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
 *
 **/

// {HumidifierActuator} "HumidifierActuator" name=EString "{" ("valueState" valueState=OnOff)? "}"
protected class HumidifierActuator_Group extends GroupToken {
	
	public HumidifierActuator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {HumidifierActuator}
protected class HumidifierActuator_HumidifierActuatorAction_0 extends ActionToken  {

	public HumidifierActuator_HumidifierActuatorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "HumidifierActuator"
protected class HumidifierActuator_HumidifierActuatorKeyword_1 extends KeywordToken  {
	
	public HumidifierActuator_HumidifierActuatorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getHumidifierActuatorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_HumidifierActuatorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class HumidifierActuator_NameAssignment_2 extends AssignmentToken  {
	
	public HumidifierActuator_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_HumidifierActuatorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getHumidifierActuatorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getHumidifierActuatorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class HumidifierActuator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public HumidifierActuator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=OnOff)?
protected class HumidifierActuator_Group_4 extends GroupToken {
	
	public HumidifierActuator_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class HumidifierActuator_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public HumidifierActuator_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=OnOff
protected class HumidifierActuator_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public HumidifierActuator_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getHumidifierActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getHumidifierActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class HumidifierActuator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public HumidifierActuator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHumidifierActuatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumidifierActuator_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new HumidifierActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule HumidifierActuator ****************/


/************ begin Rule DoorActuator ****************
 *
 * DoorActuator:
 * 	{DoorActuator} "DoorActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}";
 *
 **/

// {DoorActuator} "DoorActuator" name=EString "{" ("valueState" valueState=OpenClose)? "}"
protected class DoorActuator_Group extends GroupToken {
	
	public DoorActuator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDoorActuatorAccess().getDoorActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {DoorActuator}
protected class DoorActuator_DoorActuatorAction_0 extends ActionToken  {

	public DoorActuator_DoorActuatorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getDoorActuatorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "DoorActuator"
protected class DoorActuator_DoorActuatorKeyword_1 extends KeywordToken  {
	
	public DoorActuator_DoorActuatorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getDoorActuatorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_DoorActuatorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class DoorActuator_NameAssignment_2 extends AssignmentToken  {
	
	public DoorActuator_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_DoorActuatorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDoorActuatorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDoorActuatorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class DoorActuator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public DoorActuator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=OpenClose)?
protected class DoorActuator_Group_4 extends GroupToken {
	
	public DoorActuator_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class DoorActuator_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public DoorActuator_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=OpenClose
protected class DoorActuator_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public DoorActuator_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDoorActuatorAccess().getValueStateOpenCloseParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDoorActuatorAccess().getValueStateOpenCloseParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class DoorActuator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public DoorActuator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDoorActuatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DoorActuator_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DoorActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule DoorActuator ****************/


/************ begin Rule SMSActuator ****************
 *
 * SMSActuator:
 * 	{SMSActuator} "SMSActuator" name=EString "{" ("valueState" valueState=EString)? "}";
 *
 **/

// {SMSActuator} "SMSActuator" name=EString "{" ("valueState" valueState=EString)? "}"
protected class SMSActuator_Group extends GroupToken {
	
	public SMSActuator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSMSActuatorAccess().getSMSActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {SMSActuator}
protected class SMSActuator_SMSActuatorAction_0 extends ActionToken  {

	public SMSActuator_SMSActuatorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getSMSActuatorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "SMSActuator"
protected class SMSActuator_SMSActuatorKeyword_1 extends KeywordToken  {
	
	public SMSActuator_SMSActuatorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getSMSActuatorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_SMSActuatorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class SMSActuator_NameAssignment_2 extends AssignmentToken  {
	
	public SMSActuator_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_SMSActuatorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSMSActuatorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSMSActuatorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class SMSActuator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public SMSActuator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EString)?
protected class SMSActuator_Group_4 extends GroupToken {
	
	public SMSActuator_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class SMSActuator_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public SMSActuator_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EString
protected class SMSActuator_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public SMSActuator_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSMSActuatorAccess().getValueStateEStringParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSMSActuatorAccess().getValueStateEStringParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class SMSActuator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public SMSActuator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSMSActuatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SMSActuator_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SMSActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule SMSActuator ****************/


/************ begin Rule RadiatorActuator ****************
 *
 * RadiatorActuator:
 * 	{RadiatorActuator} "RadiatorActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
 *
 **/

// {RadiatorActuator} "RadiatorActuator" name=EString "{" ("valueState" valueState=OnOff)? "}"
protected class RadiatorActuator_Group extends GroupToken {
	
	public RadiatorActuator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {RadiatorActuator}
protected class RadiatorActuator_RadiatorActuatorAction_0 extends ActionToken  {

	public RadiatorActuator_RadiatorActuatorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "RadiatorActuator"
protected class RadiatorActuator_RadiatorActuatorKeyword_1 extends KeywordToken  {
	
	public RadiatorActuator_RadiatorActuatorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getRadiatorActuatorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_RadiatorActuatorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class RadiatorActuator_NameAssignment_2 extends AssignmentToken  {
	
	public RadiatorActuator_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_RadiatorActuatorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRadiatorActuatorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getRadiatorActuatorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class RadiatorActuator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public RadiatorActuator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=OnOff)?
protected class RadiatorActuator_Group_4 extends GroupToken {
	
	public RadiatorActuator_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class RadiatorActuator_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public RadiatorActuator_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=OnOff
protected class RadiatorActuator_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public RadiatorActuator_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getRadiatorActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getRadiatorActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class RadiatorActuator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public RadiatorActuator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getRadiatorActuatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new RadiatorActuator_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new RadiatorActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule RadiatorActuator ****************/


/************ begin Rule DatabaseActuator ****************
 *
 * DatabaseActuator:
 * 	{DatabaseActuator} "DatabaseActuator" name=EString "{" ("valueState" valueState=EString)? "}";
 *
 **/

// {DatabaseActuator} "DatabaseActuator" name=EString "{" ("valueState" valueState=EString)? "}"
protected class DatabaseActuator_Group extends GroupToken {
	
	public DatabaseActuator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getDatabaseActuatorAccess().getDatabaseActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {DatabaseActuator}
protected class DatabaseActuator_DatabaseActuatorAction_0 extends ActionToken  {

	public DatabaseActuator_DatabaseActuatorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getDatabaseActuatorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "DatabaseActuator"
protected class DatabaseActuator_DatabaseActuatorKeyword_1 extends KeywordToken  {
	
	public DatabaseActuator_DatabaseActuatorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getDatabaseActuatorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_DatabaseActuatorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class DatabaseActuator_NameAssignment_2 extends AssignmentToken  {
	
	public DatabaseActuator_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_DatabaseActuatorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDatabaseActuatorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDatabaseActuatorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class DatabaseActuator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public DatabaseActuator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EString)?
protected class DatabaseActuator_Group_4 extends GroupToken {
	
	public DatabaseActuator_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class DatabaseActuator_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public DatabaseActuator_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EString
protected class DatabaseActuator_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public DatabaseActuator_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getDatabaseActuatorAccess().getValueStateEStringParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getDatabaseActuatorAccess().getValueStateEStringParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class DatabaseActuator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public DatabaseActuator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getDatabaseActuatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new DatabaseActuator_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new DatabaseActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule DatabaseActuator ****************/


/************ begin Rule AudioAlarmActuator ****************
 *
 * AudioAlarmActuator:
 * 	{AudioAlarmActuator} "AudioAlarmActuator" name=EString "{" ("valueState" valueState=OnOff)? "}";
 *
 **/

// {AudioAlarmActuator} "AudioAlarmActuator" name=EString "{" ("valueState" valueState=OnOff)? "}"
protected class AudioAlarmActuator_Group extends GroupToken {
	
	public AudioAlarmActuator_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {AudioAlarmActuator}
protected class AudioAlarmActuator_AudioAlarmActuatorAction_0 extends ActionToken  {

	public AudioAlarmActuator_AudioAlarmActuatorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "AudioAlarmActuator"
protected class AudioAlarmActuator_AudioAlarmActuatorKeyword_1 extends KeywordToken  {
	
	public AudioAlarmActuator_AudioAlarmActuatorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getAudioAlarmActuatorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_AudioAlarmActuatorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class AudioAlarmActuator_NameAssignment_2 extends AssignmentToken  {
	
	public AudioAlarmActuator_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_AudioAlarmActuatorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAudioAlarmActuatorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAudioAlarmActuatorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class AudioAlarmActuator_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public AudioAlarmActuator_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=OnOff)?
protected class AudioAlarmActuator_Group_4 extends GroupToken {
	
	public AudioAlarmActuator_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class AudioAlarmActuator_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public AudioAlarmActuator_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=OnOff
protected class AudioAlarmActuator_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public AudioAlarmActuator_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAudioAlarmActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAudioAlarmActuatorAccess().getValueStateOnOffParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class AudioAlarmActuator_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public AudioAlarmActuator_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAudioAlarmActuatorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AudioAlarmActuator_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AudioAlarmActuator_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule AudioAlarmActuator ****************/


/************ begin Rule SetsOpenCloseState_Impl ****************
 *
 * SetsOpenCloseState_Impl returns SetsOpenCloseState:
 * 	{SetsOpenCloseState} "SetsOpenCloseState" name=EString "{" ("valueState" valueState=OpenClose)? "}";
 *
 **/

// {SetsOpenCloseState} "SetsOpenCloseState" name=EString "{" ("valueState" valueState=OpenClose)? "}"
protected class SetsOpenCloseState_Impl_Group extends GroupToken {
	
	public SetsOpenCloseState_Impl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetsOpenCloseState_ImplAccess().getSetsOpenCloseStateAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {SetsOpenCloseState}
protected class SetsOpenCloseState_Impl_SetsOpenCloseStateAction_0 extends ActionToken  {

	public SetsOpenCloseState_Impl_SetsOpenCloseStateAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getSetsOpenCloseStateAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "SetsOpenCloseState"
protected class SetsOpenCloseState_Impl_SetsOpenCloseStateKeyword_1 extends KeywordToken  {
	
	public SetsOpenCloseState_Impl_SetsOpenCloseStateKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getSetsOpenCloseStateKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_SetsOpenCloseStateAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class SetsOpenCloseState_Impl_NameAssignment_2 extends AssignmentToken  {
	
	public SetsOpenCloseState_Impl_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_SetsOpenCloseStateKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetsOpenCloseState_ImplAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetsOpenCloseState_ImplAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class SetsOpenCloseState_Impl_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public SetsOpenCloseState_Impl_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=OpenClose)?
protected class SetsOpenCloseState_Impl_Group_4 extends GroupToken {
	
	public SetsOpenCloseState_Impl_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class SetsOpenCloseState_Impl_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public SetsOpenCloseState_Impl_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=OpenClose
protected class SetsOpenCloseState_Impl_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public SetsOpenCloseState_Impl_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetsOpenCloseState_ImplAccess().getValueStateOpenCloseParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetsOpenCloseState_ImplAccess().getValueStateOpenCloseParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class SetsOpenCloseState_Impl_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public SetsOpenCloseState_Impl_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetsOpenCloseState_ImplAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOpenCloseState_Impl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SetsOpenCloseState_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule SetsOpenCloseState_Impl ****************/


/************ begin Rule SetsOnOffState_Impl ****************
 *
 * SetsOnOffState_Impl returns SetsOnOffState:
 * 	{SetsOnOffState} "SetsOnOffState" name=EString "{" ("valueState" valueState=OnOff)? "}";
 *
 **/

// {SetsOnOffState} "SetsOnOffState" name=EString "{" ("valueState" valueState=OnOff)? "}"
protected class SetsOnOffState_Impl_Group extends GroupToken {
	
	public SetsOnOffState_Impl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetsOnOffState_ImplAccess().getSetsOnOffStateAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {SetsOnOffState}
protected class SetsOnOffState_Impl_SetsOnOffStateAction_0 extends ActionToken  {

	public SetsOnOffState_Impl_SetsOnOffStateAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getSetsOnOffStateAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "SetsOnOffState"
protected class SetsOnOffState_Impl_SetsOnOffStateKeyword_1 extends KeywordToken  {
	
	public SetsOnOffState_Impl_SetsOnOffStateKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getSetsOnOffStateKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_SetsOnOffStateAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class SetsOnOffState_Impl_NameAssignment_2 extends AssignmentToken  {
	
	public SetsOnOffState_Impl_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_SetsOnOffStateKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetsOnOffState_ImplAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetsOnOffState_ImplAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class SetsOnOffState_Impl_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public SetsOnOffState_Impl_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=OnOff)?
protected class SetsOnOffState_Impl_Group_4 extends GroupToken {
	
	public SetsOnOffState_Impl_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class SetsOnOffState_Impl_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public SetsOnOffState_Impl_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=OnOff
protected class SetsOnOffState_Impl_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public SetsOnOffState_Impl_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetsOnOffState_ImplAccess().getValueStateOnOffParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetsOnOffState_ImplAccess().getValueStateOnOffParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class SetsOnOffState_Impl_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public SetsOnOffState_Impl_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetsOnOffState_ImplAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetsOnOffState_Impl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SetsOnOffState_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule SetsOnOffState_Impl ****************/


/************ begin Rule SetStringState_Impl ****************
 *
 * SetStringState_Impl returns SetStringState:
 * 	{SetStringState} "SetStringState" name=EString "{" ("valueState" valueState=EString)? "}";
 *
 **/

// {SetStringState} "SetStringState" name=EString "{" ("valueState" valueState=EString)? "}"
protected class SetStringState_Impl_Group extends GroupToken {
	
	public SetStringState_Impl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSetStringState_ImplAccess().getSetStringStateAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {SetStringState}
protected class SetStringState_Impl_SetStringStateAction_0 extends ActionToken  {

	public SetStringState_Impl_SetStringStateAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getSetStringStateAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "SetStringState"
protected class SetStringState_Impl_SetStringStateKeyword_1 extends KeywordToken  {
	
	public SetStringState_Impl_SetStringStateKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getSetStringStateKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_SetStringStateAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class SetStringState_Impl_NameAssignment_2 extends AssignmentToken  {
	
	public SetStringState_Impl_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_SetStringStateKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetStringState_ImplAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetStringState_ImplAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class SetStringState_Impl_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public SetStringState_Impl_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EString)?
protected class SetStringState_Impl_Group_4 extends GroupToken {
	
	public SetStringState_Impl_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class SetStringState_Impl_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public SetStringState_Impl_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EString
protected class SetStringState_Impl_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public SetStringState_Impl_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSetStringState_ImplAccess().getValueStateEStringParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSetStringState_ImplAccess().getValueStateEStringParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class SetStringState_Impl_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public SetStringState_Impl_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSetStringState_ImplAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SetStringState_Impl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SetStringState_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule SetStringState_Impl ****************/




/************ begin Rule MotionSensor ****************
 *
 * MotionSensor:
 * 	{MotionSensor} valueState?="valueState"? "MotionSensor" name=EString;
 *
 **/

// {MotionSensor} valueState?="valueState"? "MotionSensor" name=EString
protected class MotionSensor_Group extends GroupToken {
	
	public MotionSensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMotionSensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MotionSensor_NameAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMotionSensorAccess().getMotionSensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {MotionSensor}
protected class MotionSensor_MotionSensorAction_0 extends ActionToken  {

	public MotionSensor_MotionSensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMotionSensorAccess().getMotionSensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// valueState?="valueState"?
protected class MotionSensor_ValueStateAssignment_1 extends AssignmentToken  {
	
	public MotionSensor_ValueStateAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMotionSensorAccess().getValueStateAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MotionSensor_MotionSensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getMotionSensorAccess().getValueStateValueStateKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// "MotionSensor"
protected class MotionSensor_MotionSensorKeyword_2 extends KeywordToken  {
	
	public MotionSensor_MotionSensorKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMotionSensorAccess().getMotionSensorKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MotionSensor_ValueStateAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new MotionSensor_MotionSensorAction_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class MotionSensor_NameAssignment_3 extends AssignmentToken  {
	
	public MotionSensor_NameAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getMotionSensorAccess().getNameAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MotionSensor_MotionSensorKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getMotionSensorAccess().getNameEStringParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getMotionSensorAccess().getNameEStringParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule MotionSensor ****************/


/************ begin Rule TemperatureSensor ****************
 *
 * TemperatureSensor:
 * 	{TemperatureSensor} "TemperatureSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
 *
 **/

// {TemperatureSensor} "TemperatureSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
protected class TemperatureSensor_Group extends GroupToken {
	
	public TemperatureSensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTemperatureSensorAccess().getTemperatureSensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {TemperatureSensor}
protected class TemperatureSensor_TemperatureSensorAction_0 extends ActionToken  {

	public TemperatureSensor_TemperatureSensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getTemperatureSensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "TemperatureSensor"
protected class TemperatureSensor_TemperatureSensorKeyword_1 extends KeywordToken  {
	
	public TemperatureSensor_TemperatureSensorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getTemperatureSensorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_TemperatureSensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class TemperatureSensor_NameAssignment_2 extends AssignmentToken  {
	
	public TemperatureSensor_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_TemperatureSensorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTemperatureSensorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getTemperatureSensorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class TemperatureSensor_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public TemperatureSensor_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EInt)?
protected class TemperatureSensor_Group_4 extends GroupToken {
	
	public TemperatureSensor_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class TemperatureSensor_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public TemperatureSensor_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EInt
protected class TemperatureSensor_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public TemperatureSensor_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTemperatureSensorAccess().getValueStateEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getTemperatureSensorAccess().getValueStateEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class TemperatureSensor_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public TemperatureSensor_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTemperatureSensorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TemperatureSensor_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TemperatureSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule TemperatureSensor ****************/


/************ begin Rule PressureSensor ****************
 *
 * PressureSensor:
 * 	{PressureSensor} "PressureSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
 *
 **/

// {PressureSensor} "PressureSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
protected class PressureSensor_Group extends GroupToken {
	
	public PressureSensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getPressureSensorAccess().getPressureSensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {PressureSensor}
protected class PressureSensor_PressureSensorAction_0 extends ActionToken  {

	public PressureSensor_PressureSensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getPressureSensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "PressureSensor"
protected class PressureSensor_PressureSensorKeyword_1 extends KeywordToken  {
	
	public PressureSensor_PressureSensorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getPressureSensorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_PressureSensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class PressureSensor_NameAssignment_2 extends AssignmentToken  {
	
	public PressureSensor_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_PressureSensorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPressureSensorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPressureSensorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class PressureSensor_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public PressureSensor_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EInt)?
protected class PressureSensor_Group_4 extends GroupToken {
	
	public PressureSensor_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class PressureSensor_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public PressureSensor_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EInt
protected class PressureSensor_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public PressureSensor_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getPressureSensorAccess().getValueStateEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getPressureSensorAccess().getValueStateEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class PressureSensor_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public PressureSensor_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getPressureSensorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new PressureSensor_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new PressureSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule PressureSensor ****************/


/************ begin Rule TouchSensor ****************
 *
 * TouchSensor:
 * 	{TouchSensor} valueState?="valueState"? "TouchSensor" name=EString;
 *
 **/

// {TouchSensor} valueState?="valueState"? "TouchSensor" name=EString
protected class TouchSensor_Group extends GroupToken {
	
	public TouchSensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTouchSensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TouchSensor_NameAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTouchSensorAccess().getTouchSensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {TouchSensor}
protected class TouchSensor_TouchSensorAction_0 extends ActionToken  {

	public TouchSensor_TouchSensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTouchSensorAccess().getTouchSensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// valueState?="valueState"?
protected class TouchSensor_ValueStateAssignment_1 extends AssignmentToken  {
	
	public TouchSensor_ValueStateAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTouchSensorAccess().getValueStateAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TouchSensor_TouchSensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getTouchSensorAccess().getValueStateValueStateKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// "TouchSensor"
protected class TouchSensor_TouchSensorKeyword_2 extends KeywordToken  {
	
	public TouchSensor_TouchSensorKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getTouchSensorAccess().getTouchSensorKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TouchSensor_ValueStateAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new TouchSensor_TouchSensorAction_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class TouchSensor_NameAssignment_3 extends AssignmentToken  {
	
	public TouchSensor_NameAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTouchSensorAccess().getNameAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TouchSensor_TouchSensorKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTouchSensorAccess().getNameEStringParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getTouchSensorAccess().getNameEStringParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule TouchSensor ****************/


/************ begin Rule LightSensor ****************
 *
 * LightSensor:
 * 	{LightSensor} "LightSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
 *
 **/

// {LightSensor} "LightSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
protected class LightSensor_Group extends GroupToken {
	
	public LightSensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLightSensorAccess().getLightSensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {LightSensor}
protected class LightSensor_LightSensorAction_0 extends ActionToken  {

	public LightSensor_LightSensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getLightSensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "LightSensor"
protected class LightSensor_LightSensorKeyword_1 extends KeywordToken  {
	
	public LightSensor_LightSensorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getLightSensorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_LightSensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class LightSensor_NameAssignment_2 extends AssignmentToken  {
	
	public LightSensor_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_LightSensorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLightSensorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLightSensorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class LightSensor_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public LightSensor_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EInt)?
protected class LightSensor_Group_4 extends GroupToken {
	
	public LightSensor_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class LightSensor_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public LightSensor_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EInt
protected class LightSensor_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public LightSensor_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLightSensorAccess().getValueStateEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLightSensorAccess().getValueStateEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class LightSensor_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public LightSensor_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLightSensorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LightSensor_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LightSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule LightSensor ****************/


/************ begin Rule SmokeSensor ****************
 *
 * SmokeSensor:
 * 	{SmokeSensor} "SmokeSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
 *
 **/

// {SmokeSensor} "SmokeSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
protected class SmokeSensor_Group extends GroupToken {
	
	public SmokeSensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSmokeSensorAccess().getSmokeSensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {SmokeSensor}
protected class SmokeSensor_SmokeSensorAction_0 extends ActionToken  {

	public SmokeSensor_SmokeSensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getSmokeSensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "SmokeSensor"
protected class SmokeSensor_SmokeSensorKeyword_1 extends KeywordToken  {
	
	public SmokeSensor_SmokeSensorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getSmokeSensorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_SmokeSensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class SmokeSensor_NameAssignment_2 extends AssignmentToken  {
	
	public SmokeSensor_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_SmokeSensorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSmokeSensorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSmokeSensorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class SmokeSensor_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public SmokeSensor_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EInt)?
protected class SmokeSensor_Group_4 extends GroupToken {
	
	public SmokeSensor_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class SmokeSensor_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public SmokeSensor_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EInt
protected class SmokeSensor_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public SmokeSensor_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSmokeSensorAccess().getValueStateEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSmokeSensorAccess().getValueStateEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class SmokeSensor_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public SmokeSensor_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSmokeSensorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SmokeSensor_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SmokeSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule SmokeSensor ****************/


/************ begin Rule CO2Sensor ****************
 *
 * CO2Sensor:
 * 	{CO2Sensor} "CO2Sensor" name=EString "{" ("valueState" valueState=EInt)? "}";
 *
 **/

// {CO2Sensor} "CO2Sensor" name=EString "{" ("valueState" valueState=EInt)? "}"
protected class CO2Sensor_Group extends GroupToken {
	
	public CO2Sensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCO2SensorAccess().getCO2SensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {CO2Sensor}
protected class CO2Sensor_CO2SensorAction_0 extends ActionToken  {

	public CO2Sensor_CO2SensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getCO2SensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "CO2Sensor"
protected class CO2Sensor_CO2SensorKeyword_1 extends KeywordToken  {
	
	public CO2Sensor_CO2SensorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getCO2SensorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_CO2SensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class CO2Sensor_NameAssignment_2 extends AssignmentToken  {
	
	public CO2Sensor_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_CO2SensorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCO2SensorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCO2SensorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class CO2Sensor_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public CO2Sensor_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EInt)?
protected class CO2Sensor_Group_4 extends GroupToken {
	
	public CO2Sensor_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class CO2Sensor_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public CO2Sensor_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EInt
protected class CO2Sensor_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public CO2Sensor_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCO2SensorAccess().getValueStateEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCO2SensorAccess().getValueStateEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class CO2Sensor_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public CO2Sensor_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCO2SensorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CO2Sensor_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CO2Sensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule CO2Sensor ****************/


/************ begin Rule InfraredLightSensor ****************
 *
 * InfraredLightSensor:
 * 	{InfraredLightSensor} "InfraredLightSensor" name=EString "{" ("valueState" valueState=EInt)? "}";
 *
 **/

// {InfraredLightSensor} "InfraredLightSensor" name=EString "{" ("valueState" valueState=EInt)? "}"
protected class InfraredLightSensor_Group extends GroupToken {
	
	public InfraredLightSensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {InfraredLightSensor}
protected class InfraredLightSensor_InfraredLightSensorAction_0 extends ActionToken  {

	public InfraredLightSensor_InfraredLightSensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "InfraredLightSensor"
protected class InfraredLightSensor_InfraredLightSensorKeyword_1 extends KeywordToken  {
	
	public InfraredLightSensor_InfraredLightSensorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getInfraredLightSensorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_InfraredLightSensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class InfraredLightSensor_NameAssignment_2 extends AssignmentToken  {
	
	public InfraredLightSensor_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_InfraredLightSensorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInfraredLightSensorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getInfraredLightSensorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class InfraredLightSensor_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public InfraredLightSensor_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EInt)?
protected class InfraredLightSensor_Group_4 extends GroupToken {
	
	public InfraredLightSensor_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class InfraredLightSensor_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public InfraredLightSensor_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EInt
protected class InfraredLightSensor_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public InfraredLightSensor_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInfraredLightSensorAccess().getValueStateEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getInfraredLightSensorAccess().getValueStateEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class InfraredLightSensor_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public InfraredLightSensor_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInfraredLightSensorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InfraredLightSensor_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InfraredLightSensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule InfraredLightSensor ****************/


/************ begin Rule HasIntegerValue_Impl ****************
 *
 * HasIntegerValue_Impl returns HasIntegerValue:
 * 	{HasIntegerValue} "HasIntegerValue" name=EString "{" ("valueState" valueState=EInt)? "}";
 *
 **/

// {HasIntegerValue} "HasIntegerValue" name=EString "{" ("valueState" valueState=EInt)? "}"
protected class HasIntegerValue_Impl_Group extends GroupToken {
	
	public HasIntegerValue_Impl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHasIntegerValue_ImplAccess().getHasIntegerValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {HasIntegerValue}
protected class HasIntegerValue_Impl_HasIntegerValueAction_0 extends ActionToken  {

	public HasIntegerValue_Impl_HasIntegerValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getHasIntegerValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "HasIntegerValue"
protected class HasIntegerValue_Impl_HasIntegerValueKeyword_1 extends KeywordToken  {
	
	public HasIntegerValue_Impl_HasIntegerValueKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getHasIntegerValueKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_HasIntegerValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class HasIntegerValue_Impl_NameAssignment_2 extends AssignmentToken  {
	
	public HasIntegerValue_Impl_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_HasIntegerValueKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getHasIntegerValue_ImplAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getHasIntegerValue_ImplAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class HasIntegerValue_Impl_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public HasIntegerValue_Impl_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EInt)?
protected class HasIntegerValue_Impl_Group_4 extends GroupToken {
	
	public HasIntegerValue_Impl_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class HasIntegerValue_Impl_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public HasIntegerValue_Impl_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EInt
protected class HasIntegerValue_Impl_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public HasIntegerValue_Impl_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getHasIntegerValue_ImplAccess().getValueStateEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getHasIntegerValue_ImplAccess().getValueStateEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class HasIntegerValue_Impl_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public HasIntegerValue_Impl_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHasIntegerValue_ImplAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasIntegerValue_Impl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new HasIntegerValue_Impl_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule HasIntegerValue_Impl ****************/


/************ begin Rule HasBooleanValue_Impl ****************
 *
 * HasBooleanValue_Impl returns HasBooleanValue:
 * 	{HasBooleanValue} valueState?="valueState"? "HasBooleanValue" name=EString;
 *
 **/

// {HasBooleanValue} valueState?="valueState"? "HasBooleanValue" name=EString
protected class HasBooleanValue_Impl_Group extends GroupToken {
	
	public HasBooleanValue_Impl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHasBooleanValue_ImplAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasBooleanValue_Impl_NameAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHasBooleanValue_ImplAccess().getHasBooleanValueAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {HasBooleanValue}
protected class HasBooleanValue_Impl_HasBooleanValueAction_0 extends ActionToken  {

	public HasBooleanValue_Impl_HasBooleanValueAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getHasBooleanValue_ImplAccess().getHasBooleanValueAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// valueState?="valueState"?
protected class HasBooleanValue_Impl_ValueStateAssignment_1 extends AssignmentToken  {
	
	public HasBooleanValue_Impl_ValueStateAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHasBooleanValue_ImplAccess().getValueStateAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasBooleanValue_Impl_HasBooleanValueAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getHasBooleanValue_ImplAccess().getValueStateValueStateKeyword_1_0();
			return obj;
		}
		return null;
	}

}

// "HasBooleanValue"
protected class HasBooleanValue_Impl_HasBooleanValueKeyword_2 extends KeywordToken  {
	
	public HasBooleanValue_Impl_HasBooleanValueKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHasBooleanValue_ImplAccess().getHasBooleanValueKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasBooleanValue_Impl_ValueStateAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new HasBooleanValue_Impl_HasBooleanValueAction_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class HasBooleanValue_Impl_NameAssignment_3 extends AssignmentToken  {
	
	public HasBooleanValue_Impl_NameAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHasBooleanValue_ImplAccess().getNameAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HasBooleanValue_Impl_HasBooleanValueKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getHasBooleanValue_ImplAccess().getNameEStringParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getHasBooleanValue_ImplAccess().getNameEStringParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule HasBooleanValue_Impl ****************/


/************ begin Rule HumiditySensor ****************
 *
 * HumiditySensor:
 * 	{HumiditySensor} "HumiditySensor" name=EString "{" ("valueState" valueState=EInt)? "}";
 *
 **/

// {HumiditySensor} "HumiditySensor" name=EString "{" ("valueState" valueState=EInt)? "}"
protected class HumiditySensor_Group extends GroupToken {
	
	public HumiditySensor_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getHumiditySensorAccess().getHumiditySensorAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {HumiditySensor}
protected class HumiditySensor_HumiditySensorAction_0 extends ActionToken  {

	public HumiditySensor_HumiditySensorAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getHumiditySensorAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "HumiditySensor"
protected class HumiditySensor_HumiditySensorKeyword_1 extends KeywordToken  {
	
	public HumiditySensor_HumiditySensorKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getHumiditySensorKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_HumiditySensorAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class HumiditySensor_NameAssignment_2 extends AssignmentToken  {
	
	public HumiditySensor_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_HumiditySensorKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getHumiditySensorAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getHumiditySensorAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class HumiditySensor_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public HumiditySensor_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("valueState" valueState=EInt)?
protected class HumiditySensor_Group_4 extends GroupToken {
	
	public HumiditySensor_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_ValueStateAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "valueState"
protected class HumiditySensor_ValueStateKeyword_4_0 extends KeywordToken  {
	
	public HumiditySensor_ValueStateKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getValueStateKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// valueState=EInt
protected class HumiditySensor_ValueStateAssignment_4_1 extends AssignmentToken  {
	
	public HumiditySensor_ValueStateAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getValueStateAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_ValueStateKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("valueState",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("valueState");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getHumiditySensorAccess().getValueStateEIntParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getHumiditySensorAccess().getValueStateEIntParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class HumiditySensor_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public HumiditySensor_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getHumiditySensorAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new HumiditySensor_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new HumiditySensor_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule HumiditySensor ****************/




/************ begin Rule CTS ****************
 *
 * CTS:
 * 	{CTS} "CTS" "{" ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
 * 	("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")? "}";
 *
 **/

// {CTS} "CTS" "{" ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
// ("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")? "}"
protected class CTS_Group extends GroupToken {
	
	public CTS_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCTSAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCTSAccess().getCTSAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {CTS}
protected class CTS_CTSAction_0 extends ActionToken  {

	public CTS_CTSAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCTSAccess().getCTSAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "CTS"
protected class CTS_CTSKeyword_1 extends KeywordToken  {
	
	public CTS_CTSKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getCTSKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_CTSAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class CTS_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public CTS_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_CTSKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("temperatureSensors" "{" temperatureSensors+=Sensor ("," temperatureSensors+=Sensor)* "}")?
protected class CTS_Group_3 extends GroupToken {
	
	public CTS_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCTSAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_RightCurlyBracketKeyword_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "temperatureSensors"
protected class CTS_TemperatureSensorsKeyword_3_0 extends KeywordToken  {
	
	public CTS_TemperatureSensorsKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getTemperatureSensorsKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class CTS_LeftCurlyBracketKeyword_3_1 extends KeywordToken  {
	
	public CTS_LeftCurlyBracketKeyword_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_TemperatureSensorsKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// temperatureSensors+=Sensor
protected class CTS_TemperatureSensorsAssignment_3_2 extends AssignmentToken  {
	
	public CTS_TemperatureSensorsAssignment_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCTSAccess().getTemperatureSensorsAssignment_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sensor_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("temperatureSensors",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("temperatureSensors");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSensorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCTSAccess().getTemperatureSensorsSensorParserRuleCall_3_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CTS_LeftCurlyBracketKeyword_3_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," temperatureSensors+=Sensor)*
protected class CTS_Group_3_3 extends GroupToken {
	
	public CTS_Group_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCTSAccess().getGroup_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_TemperatureSensorsAssignment_3_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class CTS_CommaKeyword_3_3_0 extends KeywordToken  {
	
	public CTS_CommaKeyword_3_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getCommaKeyword_3_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CTS_TemperatureSensorsAssignment_3_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// temperatureSensors+=Sensor
protected class CTS_TemperatureSensorsAssignment_3_3_1 extends AssignmentToken  {
	
	public CTS_TemperatureSensorsAssignment_3_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCTSAccess().getTemperatureSensorsAssignment_3_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sensor_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("temperatureSensors",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("temperatureSensors");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSensorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCTSAccess().getTemperatureSensorsSensorParserRuleCall_3_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CTS_CommaKeyword_3_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class CTS_RightCurlyBracketKeyword_3_4 extends KeywordToken  {
	
	public CTS_RightCurlyBracketKeyword_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CTS_TemperatureSensorsAssignment_3_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("ctsActuators" "{" ctsActuators+=Actuator ("," ctsActuators+=Actuator)* "}")?
protected class CTS_Group_4 extends GroupToken {
	
	public CTS_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCTSAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_RightCurlyBracketKeyword_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "ctsActuators"
protected class CTS_CtsActuatorsKeyword_4_0 extends KeywordToken  {
	
	public CTS_CtsActuatorsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getCtsActuatorsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CTS_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{"
protected class CTS_LeftCurlyBracketKeyword_4_1 extends KeywordToken  {
	
	public CTS_LeftCurlyBracketKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getLeftCurlyBracketKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_CtsActuatorsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ctsActuators+=Actuator
protected class CTS_CtsActuatorsAssignment_4_2 extends AssignmentToken  {
	
	public CTS_CtsActuatorsAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCTSAccess().getCtsActuatorsAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Actuator_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ctsActuators",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ctsActuators");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActuatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCTSAccess().getCtsActuatorsActuatorParserRuleCall_4_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CTS_LeftCurlyBracketKeyword_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," ctsActuators+=Actuator)*
protected class CTS_Group_4_3 extends GroupToken {
	
	public CTS_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCTSAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_CtsActuatorsAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class CTS_CommaKeyword_4_3_0 extends KeywordToken  {
	
	public CTS_CommaKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getCommaKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CTS_CtsActuatorsAssignment_4_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ctsActuators+=Actuator
protected class CTS_CtsActuatorsAssignment_4_3_1 extends AssignmentToken  {
	
	public CTS_CtsActuatorsAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCTSAccess().getCtsActuatorsAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Actuator_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("ctsActuators",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("ctsActuators");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActuatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCTSAccess().getCtsActuatorsActuatorParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CTS_CommaKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class CTS_RightCurlyBracketKeyword_4_4 extends KeywordToken  {
	
	public CTS_RightCurlyBracketKeyword_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CTS_CtsActuatorsAssignment_4_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "}"
protected class CTS_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public CTS_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCTSAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CTS_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CTS_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new CTS_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule CTS ****************/


/************ begin Rule AccessControl ****************
 *
 * AccessControl:
 * 	{AccessControl} "AccessControl" "{" ("accessControlSensors" "{" accessControlSensors+=Sensor (","
 * 	accessControlSensors+=Sensor)* "}")? ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
 * 	accessControlDoorLockActuator+=Actuator)* "}")? "}";
 *
 **/

// {AccessControl} "AccessControl" "{" ("accessControlSensors" "{" accessControlSensors+=Sensor (","
// accessControlSensors+=Sensor)* "}")? ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
// accessControlDoorLockActuator+=Actuator)* "}")? "}"
protected class AccessControl_Group extends GroupToken {
	
	public AccessControl_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAccessControlAccess().getAccessControlAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {AccessControl}
protected class AccessControl_AccessControlAction_0 extends ActionToken  {

	public AccessControl_AccessControlAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getAccessControlAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "AccessControl"
protected class AccessControl_AccessControlKeyword_1 extends KeywordToken  {
	
	public AccessControl_AccessControlKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getAccessControlKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_AccessControlAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class AccessControl_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public AccessControl_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_AccessControlKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("accessControlSensors" "{" accessControlSensors+=Sensor ("," accessControlSensors+=Sensor)* "}")?
protected class AccessControl_Group_3 extends GroupToken {
	
	public AccessControl_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_RightCurlyBracketKeyword_3_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "accessControlSensors"
protected class AccessControl_AccessControlSensorsKeyword_3_0 extends KeywordToken  {
	
	public AccessControl_AccessControlSensorsKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getAccessControlSensorsKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class AccessControl_LeftCurlyBracketKeyword_3_1 extends KeywordToken  {
	
	public AccessControl_LeftCurlyBracketKeyword_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_AccessControlSensorsKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// accessControlSensors+=Sensor
protected class AccessControl_AccessControlSensorsAssignment_3_2 extends AssignmentToken  {
	
	public AccessControl_AccessControlSensorsAssignment_3_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getAccessControlSensorsAssignment_3_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sensor_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("accessControlSensors",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessControlSensors");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSensorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAccessControlAccess().getAccessControlSensorsSensorParserRuleCall_3_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AccessControl_LeftCurlyBracketKeyword_3_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," accessControlSensors+=Sensor)*
protected class AccessControl_Group_3_3 extends GroupToken {
	
	public AccessControl_Group_3_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getGroup_3_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_AccessControlSensorsAssignment_3_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AccessControl_CommaKeyword_3_3_0 extends KeywordToken  {
	
	public AccessControl_CommaKeyword_3_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getCommaKeyword_3_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessControl_AccessControlSensorsAssignment_3_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// accessControlSensors+=Sensor
protected class AccessControl_AccessControlSensorsAssignment_3_3_1 extends AssignmentToken  {
	
	public AccessControl_AccessControlSensorsAssignment_3_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getAccessControlSensorsAssignment_3_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Sensor_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("accessControlSensors",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessControlSensors");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSensorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAccessControlAccess().getAccessControlSensorsSensorParserRuleCall_3_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AccessControl_CommaKeyword_3_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class AccessControl_RightCurlyBracketKeyword_3_4 extends KeywordToken  {
	
	public AccessControl_RightCurlyBracketKeyword_3_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_3_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_Group_3_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessControl_AccessControlSensorsAssignment_3_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// ("accessControlDoorLockActuator" "{" accessControlDoorLockActuator+=Actuator (","
// accessControlDoorLockActuator+=Actuator)* "}")?
protected class AccessControl_Group_4 extends GroupToken {
	
	public AccessControl_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_RightCurlyBracketKeyword_4_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "accessControlDoorLockActuator"
protected class AccessControl_AccessControlDoorLockActuatorKeyword_4_0 extends KeywordToken  {
	
	public AccessControl_AccessControlDoorLockActuatorKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessControl_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "{"
protected class AccessControl_LeftCurlyBracketKeyword_4_1 extends KeywordToken  {
	
	public AccessControl_LeftCurlyBracketKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getLeftCurlyBracketKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_AccessControlDoorLockActuatorKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// accessControlDoorLockActuator+=Actuator
protected class AccessControl_AccessControlDoorLockActuatorAssignment_4_2 extends AssignmentToken  {
	
	public AccessControl_AccessControlDoorLockActuatorAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Actuator_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("accessControlDoorLockActuator",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessControlDoorLockActuator");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActuatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorActuatorParserRuleCall_4_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AccessControl_LeftCurlyBracketKeyword_4_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," accessControlDoorLockActuator+=Actuator)*
protected class AccessControl_Group_4_3 extends GroupToken {
	
	public AccessControl_Group_4_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getGroup_4_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_AccessControlDoorLockActuatorAssignment_4_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AccessControl_CommaKeyword_4_3_0 extends KeywordToken  {
	
	public AccessControl_CommaKeyword_4_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getCommaKeyword_4_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessControl_AccessControlDoorLockActuatorAssignment_4_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// accessControlDoorLockActuator+=Actuator
protected class AccessControl_AccessControlDoorLockActuatorAssignment_4_3_1 extends AssignmentToken  {
	
	public AccessControl_AccessControlDoorLockActuatorAssignment_4_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorAssignment_4_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Actuator_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("accessControlDoorLockActuator",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("accessControlDoorLockActuator");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getActuatorRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAccessControlAccess().getAccessControlDoorLockActuatorActuatorParserRuleCall_4_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AccessControl_CommaKeyword_4_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class AccessControl_RightCurlyBracketKeyword_4_4 extends KeywordToken  {
	
	public AccessControl_RightCurlyBracketKeyword_4_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_4_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_Group_4_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessControl_AccessControlDoorLockActuatorAssignment_4_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// "}"
protected class AccessControl_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public AccessControl_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAccessControlAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AccessControl_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AccessControl_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AccessControl_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}


/************ end Rule AccessControl ****************/


/************ begin Rule CalendarSystem ****************
 *
 * CalendarSystem:
 * 	{CalendarSystem} "CalendarSystem";
 *
 **/

// {CalendarSystem} "CalendarSystem"
protected class CalendarSystem_Group extends GroupToken {
	
	public CalendarSystem_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCalendarSystemAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CalendarSystem_CalendarSystemKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCalendarSystemAccess().getCalendarSystemAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {CalendarSystem}
protected class CalendarSystem_CalendarSystemAction_0 extends ActionToken  {

	public CalendarSystem_CalendarSystemAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCalendarSystemAccess().getCalendarSystemAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "CalendarSystem"
protected class CalendarSystem_CalendarSystemKeyword_1 extends KeywordToken  {
	
	public CalendarSystem_CalendarSystemKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCalendarSystemAccess().getCalendarSystemKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CalendarSystem_CalendarSystemAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule CalendarSystem ****************/


/************ begin Rule MeetingScheduleSystem ****************
 *
 * MeetingScheduleSystem:
 * 	{MeetingScheduleSystem} "MeetingScheduleSystem";
 *
 **/

// {MeetingScheduleSystem} "MeetingScheduleSystem"
protected class MeetingScheduleSystem_Group extends GroupToken {
	
	public MeetingScheduleSystem_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getMeetingScheduleSystemAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MeetingScheduleSystem_MeetingScheduleSystemKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getMeetingScheduleSystemAccess().getMeetingScheduleSystemAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {MeetingScheduleSystem}
protected class MeetingScheduleSystem_MeetingScheduleSystemAction_0 extends ActionToken  {

	public MeetingScheduleSystem_MeetingScheduleSystemAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getMeetingScheduleSystemAccess().getMeetingScheduleSystemAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "MeetingScheduleSystem"
protected class MeetingScheduleSystem_MeetingScheduleSystemKeyword_1 extends KeywordToken  {
	
	public MeetingScheduleSystem_MeetingScheduleSystemKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getMeetingScheduleSystemAccess().getMeetingScheduleSystemKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new MeetingScheduleSystem_MeetingScheduleSystemAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule MeetingScheduleSystem ****************/


/************ begin Rule Component ****************
 *
 * Component:
 * 	{Component} "dec" name=EString "{" ("sensors" sensors=[Sensor|EString])? ("actuators" actuators=[Actuator|EString])?
 * 	(declareComponents+=Component declareComponents+=Component*)? (":" extends+=Component extends+=Component*)? "}";
 *
 **/

// {Component} "dec" name=EString "{" ("sensors" sensors=[Sensor|EString])? ("actuators" actuators=[Actuator|EString])?
// (declareComponents+=Component declareComponents+=Component*)? (":" extends+=Component extends+=Component*)? "}"
protected class Component_Group extends GroupToken {
	
	public Component_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getComponentAccess().getComponentAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {Component}
protected class Component_ComponentAction_0 extends ActionToken  {

	public Component_ComponentAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getComponentAccess().getComponentAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "dec"
protected class Component_DecKeyword_1 extends KeywordToken  {
	
	public Component_DecKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentAccess().getDecKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_ComponentAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Component_NameAssignment_2 extends AssignmentToken  {
	
	public Component_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_DecKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getComponentAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getComponentAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Component_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Component_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ("sensors" sensors=[Sensor|EString])?
protected class Component_Group_4 extends GroupToken {
	
	public Component_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_SensorsAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "sensors"
protected class Component_SensorsKeyword_4_0 extends KeywordToken  {
	
	public Component_SensorsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentAccess().getSensorsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// sensors=[Sensor|EString]
protected class Component_SensorsAssignment_4_1 extends AssignmentToken  {
	
	public Component_SensorsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentAccess().getSensorsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_SensorsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sensors",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sensors");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentAccess().getSensorsSensorCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getComponentAccess().getSensorsSensorCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("actuators" actuators=[Actuator|EString])?
protected class Component_Group_5 extends GroupToken {
	
	public Component_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_ActuatorsAssignment_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "actuators"
protected class Component_ActuatorsKeyword_5_0 extends KeywordToken  {
	
	public Component_ActuatorsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentAccess().getActuatorsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Component_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// actuators=[Actuator|EString]
protected class Component_ActuatorsAssignment_5_1 extends AssignmentToken  {
	
	public Component_ActuatorsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentAccess().getActuatorsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_ActuatorsKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("actuators",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("actuators");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentAccess().getActuatorsActuatorCrossReference_5_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getComponentAccess().getActuatorsActuatorCrossReference_5_1_0(); 
				return obj;
			}
		}
		return null;
	}

}


// (declareComponents+=Component declareComponents+=Component*)?
protected class Component_Group_6 extends GroupToken {
	
	public Component_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_DeclareComponentsAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Component_DeclareComponentsAssignment_6_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// declareComponents+=Component
protected class Component_DeclareComponentsAssignment_6_0 extends AssignmentToken  {
	
	public Component_DeclareComponentsAssignment_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentAccess().getDeclareComponentsAssignment_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declareComponents",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declareComponents");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentAccess().getDeclareComponentsComponentParserRuleCall_6_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Component_Group_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Component_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new Component_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// declareComponents+=Component*
protected class Component_DeclareComponentsAssignment_6_1 extends AssignmentToken  {
	
	public Component_DeclareComponentsAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentAccess().getDeclareComponentsAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("declareComponents",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("declareComponents");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentAccess().getDeclareComponentsComponentParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Component_DeclareComponentsAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Component_DeclareComponentsAssignment_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// (":" extends+=Component extends+=Component*)?
protected class Component_Group_7 extends GroupToken {
	
	public Component_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getComponentAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_ExtendsAssignment_7_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Component_ExtendsAssignment_7_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ":"
protected class Component_ColonKeyword_7_0 extends KeywordToken  {
	
	public Component_ColonKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentAccess().getColonKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Component_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Component_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Component_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// extends+=Component
protected class Component_ExtendsAssignment_7_1 extends AssignmentToken  {
	
	public Component_ExtendsAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentAccess().getExtendsAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extends",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extends");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentAccess().getExtendsComponentParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Component_ColonKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// extends+=Component*
protected class Component_ExtendsAssignment_7_2 extends AssignmentToken  {
	
	public Component_ExtendsAssignment_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getComponentAccess().getExtendsAssignment_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extends",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extends");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getComponentAccess().getExtendsComponentParserRuleCall_7_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Component_ExtendsAssignment_7_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Component_ExtendsAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "}"
protected class Component_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public Component_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Component_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Component_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Component_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Component_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Component_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}


/************ end Rule Component ****************/

}
